{"version":3,"sources":["webpack:///./src/modules/module.vehicle.order.add/index.module.less","webpack:///./src/modules/module.vehicle.order.add/index.tsx","webpack:///./src/modules/module.vehicle.order.add/selectors.ts"],"names":["module","exports","VehicleOrderAdd","FormItem","es_form","Item","module_vehicle_order_add_confirm","modal","confirm","colLayProps","sm","xs","md","lg","xl","module_vehicle_order_add_VehicleOrderAdd","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","selectedAddress","onChangeCustomer","data","state","selectCustomer","setState","showAddress","loadIndex","loadType","loadData","unloadData","react","_this2","searchParams","id","getOrder","Number","eventEmitter","on","requestClose","eventSource","cancleEdit","nextProps","saveData","sendGoods","orderDetail","setFormData","_this3","loading","className","index_module_default","a","onSubmit","e","onHandleSubmit","spin","spinning","layout","renderBasicInfo","AddOrderCommonInfo","form","PageBottom","rightChild","buttons","es_button","key","onClick","type","htmlType","_this4","_this$props$form","getFieldDecorator","setFieldsValue","_this$props","_this$state","loadInfoProps","closeAddressModal","formData","loadtype","showAddressModal","index","datePickerProps","showTime","format","hideDisabledOptions","minuteStep","style","width","disabledDate","current","momentfrom_dll_reference_dll_default","disabledTime","disabledHours","isSame","range","add","hour","disabledMinutes","minute","disabledSeconds","card","title","row","gutter","col","label","margin","input","CustomerSelect","disabled","onChange","placeholder","maxLength","required","rules","message","CarModelCarLong","maxSelect","initialValue","date_picker","_extends","b","isBefore","setTimeout","useCarDate","showToday","LoadInfoEdit","fields","name","value","onDele","deleUnloadData","TextArea","start","end","result","i","push","load","unloadData2","getFieldValue","unload","_this5","_this$props2","comparativeFields","map","d","concat","showConfirm","propsCar","get","isFieldsTouched","content","okText","cancelText","centered","onCancel","toList","_this6","isEdit","iconType","onOk","sendGood","orderWholeCarId","handleClose","close","msngrfrom_dll_reference_dll_default","emit","_this7","preventDefault","validateFields","errors","values","getSubmitData","saveOrderConfig","_this$state2","getFieldsValue","points","Object","assign","pointAddress","filter","v","customer","customerName","requireDate","carLong","carStruct","vehicleLong","vehicleType","loadList","unloadKeys","indexOf","customerCode","split","toJS","carString","size","thirdSystemId","goodsName","goodsNumber","goodsVolume","goodsWeight","remark","isReceipt","toString","customerFreight","driverFreight","collictionAmount","phone","contact","__webpack_exports__","_ref","routeId","connectModel","actions","selectState","currentState","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectSaveData","sendData","selectors_makeSelectSendData","error","selectors_makeSelectError","selectors_makeSelectLoading","mapDispatchToProps","dispatch","options","create"],"mappings":"iFACAA,EAAAC,SAAkBC,gBAAA,6zCCoClB,IAAMC,EAAWC,EAAA,EAAKC,KAChBC,EAAUC,EAAA,EAAMC,QA4BhBC,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEAC,cAKJ,SAAAb,EAAYc,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAjB,IACjBe,EAAAG,EAAAD,KAAAE,EAAAnB,GAAAoB,KAAAH,KAAMH,KAFRO,qBACmB,EAAAN,EAoOXO,iBAAmB,SAAAC,GAEF,KADIR,EAAKS,MAAxBC,gBAENV,EAAKW,UAAWD,eAAgBF,KArOlCR,EAAKS,OACHG,aAAa,EACbC,UAAW,EACXC,SAAU,EACVC,YACAC,cACAN,eAAgB,IARDV,yPALSiB,EAAA,oEAgBD,IAAAC,EAAAhB,KACjBiB,EAAiBjB,KAAKH,MAAtBoB,aACJA,EAAaC,IACflB,KAAKH,MAAMsB,SAASC,OAAOH,EAAaC,KAE1ClB,KAAKH,MAAMwB,aAAaC,GAAG,QAAS,SAACC,EAAcC,GAE/B,mBAAhBA,GACgB,qBAAhBA,EAEAR,EAAKS,WAAWF,GAEhBA,wDAI2BG,GAC3BA,EAAUC,UAAYD,EAAUC,WAAa3B,KAAKH,MAAM8B,UAC1D3B,KAAK4B,UAAUF,EAAUC,UAGzBD,EAAUG,aACVH,EAAUG,cAAgB7B,KAAKH,MAAMgC,aAErC7B,KAAK8B,YAAYJ,oCAGL,IAAAK,EAAA/B,KACNgC,EAAYhC,KAAKH,MAAjBmC,QACAd,EAAOlB,KAAKH,MAAMoB,aAAlBC,GACR,OACEH,EAAA,qBACEkB,UAAWC,EAAAC,EAAOpD,gBAClBqD,SAAU,SAAAC,GACRN,EAAKO,eAAeD,KAGtBtB,EAAA,cAACwB,EAAA,GAAKC,SAAUR,GACdjB,EAAA,cAAC9B,EAAA,GAAKwD,OAAO,cACVzC,KAAK0C,kBACN3B,EAAA,cAAC4B,EAAA,GAAmBC,KAAM5C,KAAKH,MAAM+C,OACrC7B,EAAA,cAAC8B,EAAA,GACCC,WACE/B,EAAA,cAAC8B,EAAA,GACCE,SACEhC,EAAA,cAACiC,EAAA,GACCC,IAAK,EACLC,QAAS,WACPnB,EAAKN,eAHT,gBAQAV,EAAA,cAACiC,EAAA,GAAOC,IAAK,EAAGE,KAAK,UAAUC,SAAS,UACrClC,EAAK,eAAO,8EAYP,IAAAmC,EAAArD,KAAAsD,EACsBtD,KAAKH,MAAM+C,KAAjDW,EADgBD,EAChBC,kBAAmBC,EADHF,EACGE,eADHC,EAEczD,KAAKH,MAAnCoB,EAFgBwC,EAEhBxC,aAFgByC,GAAAD,EAEF5B,YACW7B,KAAKO,OAA9BM,EAHgB6C,EAGhB7C,SAAUC,EAHM4C,EAGN5C,WAEZ6C,GACJC,kBAAmB,SAACtD,EAAMuD,EAAUC,GAClCT,EAAKO,kBAAkBtD,EAAMuD,EAAUC,IAEzCC,iBAAkB,SAACZ,EAAMa,GACvBX,EAAKU,iBAAiBZ,EAAMa,IAE9BpB,KAAM5C,KAAKH,MAAM+C,MAGbqB,GACJC,UAAYC,OAAQ,QAASC,qBAAqB,EAAMC,WAAY,IACpEF,OAAQ,mBACRG,OAASC,MAAO,QAChBC,aAAc,SAAAC,GACZ,OAAOA,EAAUC,OAEnBC,aAAc,SAAAF,GACZ,OACEG,cAAe,kBACbF,IAAOD,GAASI,OAAOH,MAAU,OAC7BrB,EAAKyB,MACH,EACAJ,MACGK,IAAI,EAAG,KACPC,YAGXC,gBAAiB,kBACfP,IAAOD,GAASI,OAAOH,MAASK,IAAI,EAAG,KAAM,QACzC1B,EAAKyB,MAAM,EAAGJ,MAASQ,cAE7BC,gBAAiB,wBAIvB,OACEpE,EAAA,cAACqE,EAAA,GAAKC,MAAM,4BACVtE,EAAA,cAACuE,EAAA,GAAIC,OArIE,IAsILxE,EAAA,cAACyE,EAAA,EAAQlG,EACPyB,EAAA,cAAC/B,GAASyG,MAAM,GAAGtC,KAAK,SAASmB,OAASoB,OAAQ,IAC/CnC,EAAkB,eAAlBA,CAAkCxC,EAAA,cAAC4E,EAAA,GAAMxC,KAAK,aAEjDpC,EAAA,cAAC/B,GAASyG,MAAM,4BACblC,EAAkB,eAAlBA,CACCxC,EAAA,cAAC6E,EAAA,GACCC,WAAU5E,EAAaC,GACvB4E,SAAU9F,KAAKK,sBAKvBU,EAAA,cAACyE,EAAA,EAAQlG,EACPyB,EAAA,cAAC/B,GAASyG,MAAM,wCACblC,EAAkB,gBAAlBA,CACCxC,EAAA,cAAC4E,EAAA,GACCI,YAAY,yDACZF,WAAU5E,EAAaC,GACvB8E,UAAW,SAMrBjF,EAAA,cAACuE,EAAA,GAAIC,OA/JE,IAgKLxE,EAAA,cAACyE,EAAA,EAAQlG,EACPyB,EAAA,cAAC/B,GAASyG,MAAM,2BAAOQ,UAAQ,GAC5B1C,EAAkB,aACjB2C,QAEID,UAAU,EACVE,QAAS,oCAJd5C,CAOExC,EAAA,cAACqF,EAAA,GAAgBL,YAAY,iCAAQM,UAAW,QAIzDtF,EAAA,cAACuE,EAAA,GAAIC,OA7KE,IA8KLxE,EAAA,cAACyE,EAAA,EAAQlG,EACPyB,EAAA,cAAC/B,GAASyG,MAAM,2BAAOQ,UAAQ,GAC5B1C,EAAkB,cACjB+C,aAAc5B,MAASK,IAAI,EAAG,KAC9BmB,QAEID,UAAU,EACVE,QAAS,gDALd5C,CASCxC,EAAA,cAACwF,EAAA,EAADC,KACMvC,GACJ6B,SAAU,SAAC3D,EAAGsE,GACR/B,IAAOvC,GAAGuE,SAAShC,MAASK,IAAI,EAAG,KAAM,WAC3C4B,WAAW,WACTnD,GACEoD,WAAYlC,IAAOvC,GAAG4C,IAAI,EAAG,QAE9B,UAOfhE,EAAA,cAACyE,EAAA,EAAQlG,EACPyB,EAAA,cAAC/B,GAASyG,MAAM,wCACblC,EAAkB,cAAlBA,CACCxC,EAAA,cAACwF,EAAA,EAADC,KACMvC,GACJO,aAAc,SAAAC,GAAO,OAAIA,EAAUC,MAASK,IAAI,EAAG,MACnD8B,WAAW,SAOrB9F,EAAA,cAAC+F,EAAA,EAADN,GACEO,QAAUC,KAAM,OAAQC,OAAQpG,IAChCiD,SAAU,GACNH,IAGN5C,EAAA,cAAC+F,EAAA,EAADN,GACEO,QAAUC,KAAM,SAAUC,MAAOnG,GACjCgD,SAAU,GACNH,GACJuD,OAAQ,SAAAjE,GACNI,EAAK8D,eAAelE,OAIxBlC,EAAA,cAACuE,EAAA,GAAIC,OApOE,IAqOLxE,EAAA,cAACyE,EAAA,EAAQlG,EACPyB,EAAA,cAAC/B,GAASyG,MAAM,gBACblC,EAAkB,SAAlBA,CACCxC,EAAA,cAACqG,EAAA,GAASpB,UAAW,IAAKD,YAAY,sEAiBtCsB,EAAOC,GAEnB,IADA,IAAMC,KACGC,EAAIH,EAAOG,EAAIF,EAAKE,IAC3BD,EAAOE,KAAKD,GAEd,OAAOD,2CAIgB3G,EAAkBoD,GACzChE,KAAKS,UAAWG,WAAUD,UAAWqD,8CAGb1D,EAAMuD,EAAUjD,GAAU,IAC1CgC,EAAS5C,KAAKH,MAAd+C,KACAjC,EAAcX,KAAKO,MAAnBI,UACR,GAAiB,IAAbC,EACFgC,EAAKY,gBACHkE,MAAO7D,KAET7D,KAAKS,UAAWI,SAAUP,SACrB,GAAiB,IAAbM,EAAgB,CACzB,IAAM+G,EAAc3H,KAAKO,MAAMO,WAC/B6G,EAAYhH,GAAaL,EACzB,IAAMQ,EAAa8B,EAAKgF,cAAc,UACtC9G,EAAWH,GAAakD,EACxBjB,EAAKY,gBACHqE,OAAQ/G,IAEVd,KAAKS,UAAWK,WAAY6G,4CAKT1E,GAAK,IAClBnC,EAAed,KAAKO,MAApBO,WACRA,EAAWmC,GAAO,KAClBjD,KAAKS,UAAWK,kDAICS,GAAe,IAAAuG,EAAA9H,KAAA+H,EACY/H,KAAKH,MAAzC+C,EADwBmF,EACxBnF,KAAM3B,EADkB8G,EAClB9G,aAAcY,EADIkG,EACJlG,YACpBrB,EAAmBR,KAAKO,MAAxBC,eAEFwH,GACJ,gBACA,aACA,cACA,SACA,OACA,uBACA,kBACA,gBACA,SACA,YACA,cACA,cACA,cACA,YACA,mBACA,kBACA,iBAlBWpF,EAAKgF,cAAc,cAoB3BK,IAAI,SAAAC,GACPF,EAAkBP,KAAlB,UAAAU,OAAiCD,EAAjC,mBACAF,EAAkBP,KAAlB,UAAAU,OAAiCD,EAAjC,cACAF,EAAkBP,KAAlB,UAAAU,OAAiCD,EAAjC,cAEF,IAAIE,GAAc,EAClB,GAAKnH,EAAaC,GAQX,CACL,IAAMmH,EACJxG,EAAYyG,IAAI,WAAa,IAAO,SAAMzG,EAAYyG,IAAI,cAE1D1F,EAAK2F,gBAAgBP,IACrBK,IAAazF,EAAKgF,cAAc,aAAa,GAAGX,SAEhDmB,GAAc,QAdhBJ,EAAkBP,KAAK,cAErBjH,IAAmBoC,EAAKgF,cAAc,iBACtChF,EAAK2F,gBAAgBP,MAErBI,GAAc,GAYdA,EACFjJ,GACEkG,MAAO,6CACPmD,QAAS,2EACTC,OAAQ,2BACRC,WAAY,eACZC,UAAU,EACVC,SAAU,WACJrH,EACFA,IAEAuG,EAAKe,YAKPtH,EACFA,IAEAvB,KAAK6I,2CAMO3H,GAAI,IAAA4H,EAAA9I,KACd+I,IAAS/I,KAAKH,MAAMoB,aAAaC,GACvC/B,GACEkG,MAAK,GAAA8C,OAAKY,EAAS,eAAO,eAArB,gBACLP,QAAO,eAAAL,OAAOY,EAAS,eAAO,eAAvB,8FACPN,OAAQ,2BACRC,WAAY,2BACZM,SAAU,eACVL,UAAU,EACVM,KAAM,WACJH,EAAKjJ,MAAMqJ,UACTC,gBAAiBjI,EACjBkI,YAAaN,EAAKjJ,MAAMwJ,SAG5BT,SAAU,WACRE,EAAKD,6CAOT7I,KAAKH,MAAMgJ,SACXS,IAAM,qBAAsB,WAAWC,MAAK,GAC5CvJ,KAAKH,MAAMwJ,+CAGUhH,GAAG,IAAAmH,EAAAxJ,KACxBqC,EAAEoH,iBACezJ,KAAKH,MAAd+C,KACH8G,eAAe,SAACC,EAAQC,GAC3B,IAAKD,EAAQ,CACX,IAAMrJ,EAAOkJ,EAAKK,gBAClBL,EAAK3J,MAAMiK,gBAAgBxJ,8CAKT,IAAAyJ,EACW/J,KAAKO,MAA9BM,EADckJ,EACdlJ,SAAUC,EADIiJ,EACJjJ,WAEZ+C,GAAWmG,EADUhK,KAAKH,MAAM+C,KAA9BoH,kBAEFC,GAAUC,OAAOC,UAAWtG,EAAS6D,KAAK,GAAI7G,IAAWsH,OAC7DrH,EACGmH,IAAI,SAAChB,EAAOjD,GACX,GACEiD,GACAA,EAAMmD,cACNvG,EAASgE,OAAO7D,IAChBH,EAASgE,OAAO7D,GAAOoG,aAEvB,OAAOF,OAAOC,UAAWlD,EAAOpD,EAASgE,OAAO7D,MAGnDqG,OAAO,SAAAC,GAAC,OAAIA,GAAKA,EAAEF,gBAGlBG,EAAW1G,EAAS2G,aACpBlK,EAAO4J,OAAOC,UAAWtG,GAC7B+C,WAAY/C,EAAS+C,WACjB/C,EAAS+C,WAAWzC,OAAO,uBAC3B,GACJsG,YAAa5G,EAAS4G,YAClB5G,EAAS4G,YAAYtG,OAAO,uBAC5B,GACJuG,QAAS7G,EAAS8G,UAAU,GAAGC,YAC/BD,UAAW9G,EAAS8G,UAAU,GAAGE,YACjCC,SAAUb,IAMZ,cAJO3J,EAAKoH,YACLpH,EAAKuH,cACLvH,EAAKyK,WAERR,GAAYA,EAASS,QAAQ,KAAO,EAC/Bd,OAAOC,OAAO7J,GACnB2K,aAAcV,EAASW,MAAM,KAAK,GAClCV,aAAcD,EAASW,MAAM,KAAK,KAG7B5K,sCAKST,GAAO,IACjBgC,EAAsBhC,EAAtBgC,YAAae,EAAS/C,EAAT+C,KACfiF,EAAShG,EACZyG,IAAI,YACJ+B,OAAO,SAAAnC,GAAC,OAA0B,IAAtBA,EAAEI,IAAI,aAA2C,MAAtBJ,EAAEI,IAAI,cAC7C6C,OACGzD,EAAO7F,EACVyG,IAAI,YACJ+B,OAAO,SAAAnC,GAAC,OAA0B,IAAtBA,EAAEI,IAAI,aAA2C,MAAtBJ,EAAEI,IAAI,cAC7C6C,OAAO,GACJC,EACJvJ,EAAYyG,IAAI,WAAa,IAAO,SAAMzG,EAAYyG,IAAI,aACxDzG,EAAYwJ,OACdzI,EAAKY,gBACHgH,aAAc3I,EAAYyG,IAAI,gBAC9B2C,aAAcpJ,EAAYyG,IAAI,gBAC9BgD,cAAezJ,EAAYyG,IAAI,iBAC/BqC,YAAc1D,MAAOmE,IACrBxE,WAAY/E,EAAYyG,IAAI,cACxB5D,IAAO7C,EAAYyG,IAAI,eACvB5D,MAASK,IAAI,EAAG,KACpB0F,YAAa5I,EAAYyG,IAAI,eACzB5D,IAAO7C,EAAYyG,IAAI,gBACvB,GACJiD,UAAW1J,EAAYyG,IAAI,aAC3BkD,YAAa3J,EAAYyG,IAAI,eAC7BmD,YAAa5J,EAAYyG,IAAI,eAC7BoD,YAAa7J,EAAYyG,IAAI,eAC7BqD,OAAQ9J,EAAYyG,IAAI,UACxBsD,UAAW/J,EAAYyG,IAAI,aAAauD,WACxCC,gBAAiBjK,EAAYyG,IAAI,mBACjCyD,cAAelK,EAAYyG,IAAI,iBAC/B0D,iBAAkBnK,EAAYyG,IAAI,oBAClCyC,WAAYlD,EAAOI,IAAI,SAAC3H,EAAM0D,GAAP,OAAiBA,IACxC0D,OAEI0C,aAAc1C,EAAK0C,aACnB6B,MAAOvE,EAAKuE,MACZC,QAASxE,EAAKwE,YAIpBvF,WAAW,WACT/D,EAAKY,gBACHqE,OAAQA,EAAOI,IAAI,SAAA3H,GAAI,OACrB8J,aAAc9J,EAAK8J,aACnB6B,MAAO3L,EAAK2L,MACZC,QAAS5L,EAAK4L,cAGjB,GACHlM,KAAKS,UACHI,SAAU6G,EACV5G,WAAY+G,0CAMpBsE,EAAA,iBAAeC,GAA+B,IAA5BC,EAA4BD,EAA5BC,QAChB,OAAOC,EADqCF,EAAnBE,cACL,SAAAC,GAClB,IC9iB0BC,ED8iBpBC,EAAe,SAAAlM,GAAK,OAAIA,EAAM+H,IAAI+D,IACxC,OACEK,gBAAiBxC,OAAAyC,EAAA,yBAAAzC,EACfrI,aCjjBsB2K,EDijBMC,EChjBlCvC,OAAAyC,EAAA,eAAAzC,CAAesC,EAAa,SAACjM,GAAD,OAA6BA,EAAM+H,IAAI,WDijB7D3G,SC/iB0B,SAAA6K,GAAW,OAC3CtC,OAAAyC,EAAA,eAAAzC,CAAesC,EAAa,SAACjM,GAAD,OAC1BA,EAAM+H,IAAI,cD6iBIsE,CAAmBH,GAC7BI,SC5iB0B,SAAAL,GAAW,OAC3CtC,OAAAyC,EAAA,eAAAzC,CAAesC,EAAa,SAACjM,GAAD,OAC1BA,EAAM+H,IAAI,cD0iBIwE,CAAmBL,GAC7BM,MC3jBuB,SAAAP,GAAW,OACxCtC,OAAAyC,EAAA,eAAAzC,CAAesC,EAAa,SAACjM,GAAD,OAA6BA,EAAM+H,IAAI,WD0jBtD0E,CAAgBP,GACvBzK,QCzjByB,SAAAwK,GAAW,OAC1CtC,OAAAyC,EAAA,eAAAzC,CAAesC,EAAa,SAACjM,GAAD,OAC1BA,EAAM+H,IAAI,aDujBG2E,CAAkBR,KAE7BS,mBAAoB,SAAAC,GAAQ,OAC1BhM,SAAU,SAAAiM,GAAO,OAAID,EAASZ,EAAQpL,SAASiM,KAC/CtD,gBAAiB,SAAAsD,GAAO,OAAID,EAASZ,EAAQzC,gBAAgBsD,KAC7DvE,OAAQ,SAAAuE,GAAO,OAAID,EAASZ,EAAQ1D,OAAOuE,KAC3ClE,SAAU,SAAA5I,GAAI,OAAI6M,EAASZ,EAAQrD,SAAS5I,SAd3CgM,CAiBJrN,EAAA,EAAKoO,QAALpO,CAAcW","file":"vehicle-order-add.1be15638.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"VehicleOrderAdd\":\"_1w8-g\"};","/**\n * VehicleOrderAdd Component\n * @author lhf\n * @date 2018-9-17 09:58:49\n */\nimport * as React from 'react';\nimport { createStructuredSelector } from 'reselect';\n\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport DatePicker from 'antd/es/date-picker';\nimport Form from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Input from 'antd/es/input';\nimport Modal from 'antd/es/modal';\nimport Row from 'antd/es/row';\nimport Spin from 'antd/es/spin';\nimport CarModelCarLong from 'components/CarModelCarLong';\nimport CustomerSelect from 'components/CustomerSelect';\nimport LoadInfoEdit from 'components/LoadInfoEdit';\nimport { PageBottom, PageBottomButtons } from 'components/PageBottom';\nimport TextArea from 'components/TextArea';\nimport { Map } from 'immutable';\nimport moment from 'moment';\nimport msngr from 'msngr';\nimport AddOrderCommonInfo from './AddOrderCommonInfo';\nimport {\n  makeSelectData,\n  makeSelectError,\n  makeSelectLoading,\n  makeSelectSaveData,\n  makeSelectSendData,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nconst FormItem = Form.Item;\nconst confirm = Modal.confirm;\nexport interface IVehicleOrderAddProps {\n  loading: boolean;\n  children: React.ReactChildren;\n  form: WrappedFormUtils;\n  orderDetail: Map<string, any>;\n  saveData: string; // 是否保存成功\n  sendData: any; // 发货结果\n  searchParams: {\n    id: number;\n  };\n  getOrder: (routeId: number) => any;\n  saveOrderConfig: (data) => void;\n  toList: (handleClose?) => void;\n  close: () => void;\n  sendGood: (data) => void;\n  refresh: (data?) => void;\n  eventEmitter: object;\n}\ninterface IVehicleOrderAddState {\n  showAddress: boolean;\n  loadType: number; // load/unload，当前选择的是装还是卸的地址\n  loadIndex: number; // 装卸的index\n  loadData: {};\n  unloadData: object[];\n  selectCustomer: string; // 记录默认客户\n}\nconst gutter = 16;\nconst colLayProps = {\n  sm: 24,\n  xs: 24,\n  md: 6,\n  lg: 6,\n  xl: 6,\n};\nclass VehicleOrderAdd extends React.PureComponent<\n  IVehicleOrderAddProps,\n  IVehicleOrderAddState\n> {\n  selectedAddress: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAddress: false,\n      loadIndex: 0,\n      loadType: 0,\n      loadData: {},\n      unloadData: [],\n      selectCustomer: '',\n    };\n  }\n  public componentDidMount() {\n    const { searchParams } = this.props;\n    if (searchParams.id) {\n      this.props.getOrder(Number(searchParams.id));\n    }\n    this.props.eventEmitter.on('close', (requestClose, eventSource) => {\n      if (\n        eventSource === 'FROM_TAB_CLOSE' ||\n        eventSource === 'FROM_TAB_REFRESH'\n      ) {\n        this.cancleEdit(requestClose);\n      } else {\n        requestClose();\n      }\n    });\n  }\n  public componentWillReceiveProps(nextProps) {\n    if (nextProps.saveData && nextProps.saveData !== this.props.saveData) {\n      this.sendGoods(nextProps.saveData);\n    }\n    if (\n      nextProps.orderDetail &&\n      nextProps.orderDetail !== this.props.orderDetail\n    ) {\n      this.setFormData(nextProps);\n    }\n  }\n  public render() {\n    const { loading } = this.props;\n    const { id } = this.props.searchParams;\n    return (\n      <div\n        className={styles.VehicleOrderAdd}\n        onSubmit={e => {\n          this.onHandleSubmit(e);\n        }}\n      >\n        <Spin spinning={loading}>\n          <Form layout=\"horizontal\">\n            {this.renderBasicInfo()}\n            <AddOrderCommonInfo form={this.props.form} />\n            <PageBottom\n              rightChild={\n                <PageBottomButtons\n                  buttons={[\n                    <Button\n                      key={1}\n                      onClick={() => {\n                        this.cancleEdit();\n                      }}\n                    >\n                      取消\n                    </Button>,\n                    <Button key={2} type=\"primary\" htmlType=\"submit\">\n                      {id ? '保存' : '确认开单'}\n                    </Button>,\n                  ]}\n                />\n              }\n            />\n          </Form>\n        </Spin>\n      </div>\n    );\n  }\n\n  private renderBasicInfo() {\n    const { getFieldDecorator, setFieldsValue } = this.props.form;\n    const { searchParams, orderDetail } = this.props;\n    const { loadData, unloadData } = this.state;\n    // 装卸货地址\n    const loadInfoProps = {\n      closeAddressModal: (data, formData, loadtype) => {\n        this.closeAddressModal(data, formData, loadtype);\n      },\n      showAddressModal: (type, index) => {\n        this.showAddressModal(type, index);\n      },\n      form: this.props.form,\n    };\n    // 时间控件\n    const datePickerProps = {\n      showTime: { format: 'HH:mm', hideDisabledOptions: true, minuteStep: 10 },\n      format: 'YYYY-MM-DD HH:mm',\n      style: { width: '100%' },\n      disabledDate: current => {\n        return current < moment();\n      },\n      disabledTime: current => {\n        return {\n          disabledHours: () =>\n            moment(current).isSame(moment(), 'day')\n              ? this.range(\n                  0,\n                  moment()\n                    .add(2, 'h')\n                    .hour(),\n                )\n              : [],\n          disabledMinutes: () =>\n            moment(current).isSame(moment().add(2, 'h'), 'hour')\n              ? this.range(0, moment().minute())\n              : [],\n          disabledSeconds: () => [],\n        };\n      },\n    };\n    return (\n      <Card title=\"基本信息\">\n        <Row gutter={gutter}>\n          <Col {...colLayProps}>\n            <FormItem label=\"\" type=\"hidden\" style={{ margin: 0 }}>\n              {getFieldDecorator('customerCode')(<Input type=\"hidden\" />)}\n            </FormItem>\n            <FormItem label=\"选择客户\">\n              {getFieldDecorator('customerName')(\n                <CustomerSelect\n                  disabled={searchParams.id ? true : false}\n                  onChange={this.onChangeCustomer}\n                />,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...colLayProps}>\n            <FormItem label=\"第三方订单号\">\n              {getFieldDecorator('thirdSystemId')(\n                <Input\n                  placeholder=\"请输入第三方订单号\"\n                  disabled={searchParams.id ? true : false}\n                  maxLength={30}\n                />,\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row gutter={gutter}>\n          <Col {...colLayProps}>\n            <FormItem label=\"所需车型\" required>\n              {getFieldDecorator('carStruct', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择车型',\n                  },\n                ],\n              })(<CarModelCarLong placeholder=\"请选择车型\" maxSelect={1} />)}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row gutter={gutter}>\n          <Col {...colLayProps}>\n            <FormItem label=\"用车时间\" required>\n              {getFieldDecorator('useCarDate', {\n                initialValue: moment().add(2, 'h'),\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择用车时间',\n                  },\n                ],\n              })(\n                <DatePicker\n                  {...datePickerProps}\n                  onChange={(a, b) => {\n                    if (moment(a).isBefore(moment().add(2, 'h'), 'minute')) {\n                      setTimeout(() => {\n                        setFieldsValue({\n                          useCarDate: moment(a).add(2, 'h'),\n                        });\n                      }, 0);\n                    }\n                  }}\n                />,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...colLayProps}>\n            <FormItem label=\"要求送达时间\">\n              {getFieldDecorator('requireDate')(\n                <DatePicker\n                  {...datePickerProps}\n                  disabledDate={current => current < moment().add(2, 'h')}\n                  showToday={false}\n                />,\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n\n        <LoadInfoEdit\n          fields={{ name: 'load', value: [loadData] }}\n          loadtype={0}\n          {...loadInfoProps}\n        />\n\n        <LoadInfoEdit\n          fields={{ name: 'unload', value: unloadData }}\n          loadtype={1}\n          {...loadInfoProps}\n          onDele={key => {\n            this.deleUnloadData(key);\n          }}\n        />\n\n        <Row gutter={gutter}>\n          <Col {...colLayProps}>\n            <FormItem label=\"备注\">\n              {getFieldDecorator('remark')(\n                <TextArea maxLength={500} placeholder=\"请输入备注\" />,\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n\n  private onChangeCustomer = data => {\n    const { selectCustomer } = this.state;\n    if (selectCustomer === '') {\n      this.setState({ selectCustomer: data });\n    }\n  };\n\n  // 时间选择可选范围\n  private range(start, end) {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n\n  // 设置当前loadtype和index\n  private showAddressModal(loadType: number, index) {\n    this.setState({ loadType, loadIndex: index });\n  }\n  // 关闭常用地址弹出框，填充数据\n  private closeAddressModal(data, formData, loadType) {\n    const { form } = this.props;\n    const { loadIndex } = this.state;\n    if (loadType === 0) {\n      form.setFieldsValue({\n        load: [formData],\n      });\n      this.setState({ loadData: data });\n    } else if (loadType === 1) {\n      const unloadData2 = this.state.unloadData;\n      unloadData2[loadIndex] = data;\n      const unloadData = form.getFieldValue('unload');\n      unloadData[loadIndex] = formData;\n      form.setFieldsValue({\n        unload: unloadData,\n      });\n      this.setState({ unloadData: unloadData2 });\n    }\n  }\n\n  // 删除卸货信息\n  private deleUnloadData(key) {\n    const { unloadData } = this.state;\n    unloadData[key] = null;\n    this.setState({ unloadData });\n  }\n\n  // 取消页面编辑\n  private cancleEdit(requestClose?) {\n    const { form, searchParams, orderDetail } = this.props;\n    const { selectCustomer } = this.state;\n    const keys = form.getFieldValue('unloadKeys');\n    const comparativeFields = [\n      'thirdSystemId',\n      'useCarDate',\n      'requireDate',\n      'remark',\n      'load',\n      'load[0].pointAddress',\n      'load[0].contact',\n      'load[0].phone',\n      'unload',\n      'goodsName',\n      'goodsWeight',\n      'goodsVolume',\n      'goodsNumber',\n      'isReceipt',\n      'collictionAmount',\n      'customerFreight',\n      'driverFreight',\n    ];\n    keys.map(d => {\n      comparativeFields.push(`unload[${d}].pointAddress`);\n      comparativeFields.push(`unload[${d}].contact`);\n      comparativeFields.push(`unload[${d}].phone`);\n    });\n    let showConfirm = false; // 判断是否需要触发离开提示窗口\n    if (!searchParams.id) {\n      comparativeFields.push('carStruct');\n      if (\n        selectCustomer !== form.getFieldValue('customerName') ||\n        form.isFieldsTouched(comparativeFields)\n      ) {\n        showConfirm = true;\n      }\n    } else {\n      const propsCar =\n        orderDetail.get('carLong') / 1000 + '米' + orderDetail.get('carStruct');\n      if (\n        form.isFieldsTouched(comparativeFields) ||\n        propsCar !== form.getFieldValue('carStruct')[0].value\n      ) {\n        showConfirm = true;\n      }\n    }\n    if (showConfirm) {\n      confirm({\n        title: '有未保存的信息',\n        content: '如放弃，填写的信息将丢失',\n        okText: '继续填写',\n        cancelText: '放弃',\n        centered: true,\n        onCancel: () => {\n          if (requestClose) {\n            requestClose();\n          } else {\n            this.toList();\n          }\n        },\n      });\n    } else {\n      if (requestClose) {\n        requestClose();\n      } else {\n        this.toList();\n      }\n    }\n  }\n\n  // 开单成功之后\n  private sendGoods(id) {\n    const isEdit = this.props.searchParams.id ? true : false;\n    confirm({\n      title: `${isEdit ? '修改' : '开单'}成功`,\n      content: `整车${isEdit ? '修改' : '开单'}成功，是否直接发货，调度司机。`,\n      okText: '完成发货',\n      cancelText: '晚点再说',\n      iconType: 'check-circle',\n      centered: true,\n      onOk: () => {\n        this.props.sendGood({\n          orderWholeCarId: id,\n          handleClose: this.props.close,\n        });\n      },\n      onCancel: () => {\n        this.toList();\n      },\n    });\n  }\n\n  // 跳转List页面并刷新\n  private toList() {\n    this.props.toList();\n    msngr('/vehicleOrder/list', 'refresh').emit(true);\n    this.props.close();\n  }\n\n  private onHandleSubmit(e) {\n    e.preventDefault();\n    const { form } = this.props;\n    form.validateFields((errors, values) => {\n      if (!errors) {\n        const data = this.getSubmitData();\n        this.props.saveOrderConfig(data);\n      }\n    });\n  }\n  // 获取提交的数据\n  private getSubmitData() {\n    const { loadData, unloadData } = this.state;\n    const { getFieldsValue } = this.props.form;\n    const formData = getFieldsValue();\n    const points = [Object.assign({}, formData.load[0], loadData)].concat(\n      unloadData\n        .map((value, index) => {\n          if (\n            value &&\n            value.pointAddress &&\n            formData.unload[index] &&\n            formData.unload[index].pointAddress\n          ) {\n            return Object.assign({}, value, formData.unload[index]);\n          }\n        })\n        .filter(v => v && v.pointAddress),\n    );\n\n    const customer = formData.customerName;\n    const data = Object.assign({}, formData, {\n      useCarDate: formData.useCarDate\n        ? formData.useCarDate.format('YYYY-MM-DD HH:mm:00')\n        : '',\n      requireDate: formData.requireDate\n        ? formData.requireDate.format('YYYY-MM-DD HH:mm:00')\n        : '',\n      carLong: formData.carStruct[0].vehicleLong,\n      carStruct: formData.carStruct[0].vehicleType,\n      loadList: points,\n    });\n    delete data.load;\n    delete data.unload;\n    delete data.unloadKeys;\n\n    if (customer && customer.indexOf(',') > 0) {\n      return Object.assign(data, {\n        customerCode: customer.split(',')[0],\n        customerName: customer.split(',')[1],\n      });\n    } else {\n      return data;\n    }\n  }\n\n  // 修改的情况下，设置formdata\n  private setFormData(props) {\n    const { orderDetail, form } = props;\n    const unload = orderDetail\n      .get('loadList')\n      .filter(d => d.get('loadType') === 1 || d.get('loadType') === '1')\n      .toJS();\n    const load = orderDetail\n      .get('loadList')\n      .filter(d => d.get('loadType') === 0 || d.get('loadType') === '0')\n      .toJS()[0];\n    const carString =\n      orderDetail.get('carLong') / 1000 + '米' + orderDetail.get('carStruct');\n    if (orderDetail.size) {\n      form.setFieldsValue({\n        customerName: orderDetail.get('customerName'),\n        customerCode: orderDetail.get('customerCode'),\n        thirdSystemId: orderDetail.get('thirdSystemId'),\n        carStruct: [{ value: carString }],\n        useCarDate: orderDetail.get('useCarDate')\n          ? moment(orderDetail.get('useCarDate'))\n          : moment().add(2, 'h'),\n        requireDate: orderDetail.get('requireDate')\n          ? moment(orderDetail.get('requireDate'))\n          : '',\n        goodsName: orderDetail.get('goodsName'),\n        goodsNumber: orderDetail.get('goodsNumber'),\n        goodsVolume: orderDetail.get('goodsVolume'),\n        goodsWeight: orderDetail.get('goodsWeight'),\n        remark: orderDetail.get('remark'),\n        isReceipt: orderDetail.get('isReceipt').toString(),\n        customerFreight: orderDetail.get('customerFreight'),\n        driverFreight: orderDetail.get('driverFreight'),\n        collictionAmount: orderDetail.get('collictionAmount'),\n        unloadKeys: unload.map((data, index) => index),\n        load: [\n          {\n            pointAddress: load.pointAddress,\n            phone: load.phone,\n            contact: load.contact,\n          },\n        ],\n      });\n      setTimeout(() => {\n        form.setFieldsValue({\n          unload: unload.map(data => ({\n            pointAddress: data.pointAddress,\n            phone: data.phone,\n            contact: data.contact,\n          })),\n        });\n      }, 0);\n      this.setState({\n        loadData: load,\n        unloadData: unload,\n      });\n    }\n  }\n}\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId);\n    return {\n      mapStateToProps: createStructuredSelector({\n        orderDetail: makeSelectData(currentState),\n        saveData: makeSelectSaveData(currentState),\n        sendData: makeSelectSendData(currentState),\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getOrder: options => dispatch(actions.getOrder(options)),\n        saveOrderConfig: options => dispatch(actions.saveOrderConfig(options)),\n        toList: options => dispatch(actions.toList(options)),\n        sendGood: data => dispatch(actions.sendGood(data)),\n      }),\n    };\n  })(Form.create()(VehicleOrderAdd));\n};\n","/**\n * VehicleOrderAdd selectors\n * @author lhf\n * @date 2018-9-17 09:58:49\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n\nexport const makeSelectSaveData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('saveData'),\n  );\nexport const makeSelectSendData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('sendData'),\n  );\n"],"sourceRoot":""}