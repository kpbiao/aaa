{"version":3,"sources":["webpack:///./src/modules/module.proclamation/conditions.tsx","webpack:///./src/modules/module.proclamation/editModal.tsx","webpack:///./src/modules/module.proclamation/selectors.ts","webpack:///./src/modules/module.proclamation/index.tsx","webpack:///./src/modules/module.proclamation/index.module.less"],"names":["formItemLayout","_objectSpread","conditionLayout","colon","FormItem","es_form","Item","RangePicker","date_picker","conditions_Conditions","layout","xxl","span","xl","md","sm","xs","submit","e","preventDefault","validateFields","_this","props","form","err","values","dateStart","dateEnd","pubDate","length","format","param","keywords","keys","Object","_i","key","doSearch","onClear","resetFields","react","getFieldDecorator","this","onSubmit","row","type","gutter","col","_extends","label","input","placeholder","es_button","htmlType","style","marginRight","onClick","conditions","create","editModal_formItemLayout","editModal_objectSpread","editModal_FormItem","editModal_EditModal","state","utmsNoticeId","title","content","invalidDate","isInsert","loading","onSave","opts","assign","isDeleted","setState","onCancel","nextProps","_nextProps$form","isFieldsTouched","visible","_this$state","_this$props$form","getFieldValue","modal","onOk","okText","cancelText","centered","maskClosable","okButtonProps","bodyStyle","paddingTop","paddingBottom","editModal_extends","initialValue","rules","required","message","maxLength","addonAfter","concat","TextArea","rows","autosize","marginBottom","momentfrom_dll_reference_dll_default","showTime","width","editModal","initialState","immutable_esfrom_dll_reference_dll","data","error","dataCount","module_proclamation_Proclamation","current","pageSize","skipCount","renderTable","_this$props","list","toJS","columns","dataIndex","fixed","render","text","record","href","onEdit","bind","module_proclamation_assertThisInitialized","divider","popconfirm","placement","onConfirm","onDelete","map","pagination","onChange","onFetch","onShowSizeChange","total","tableProps","rowKey","dataSource","scroll","x","MyTable","pageInfo","getDataList","module_proclamation_objectSpread","onInsert","item","cb","service","then","res","result","success","msg","refresh","catch","card","extra","className","index_module_default","a","Proclamation","__webpack_exports__","_ref","routeId","actions","selectState","get","mapStateToProps","libfrom_dll_reference_dll","arguments","undefined","selectors_makeSelectError","selectors_makeSelectLoading","selectors_makeSelectDataCount","selectors_makeSelectData","withConnect","es","dispatch","redux","module","exports"],"mappings":"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","file":"proclamation.90cb8b51.chunk.js","sourcesContent":["/**\n * Proclamation Component\n * @author ggm\n * @date 2018/9/14 下午4:28:11\n */\nimport * as React from 'react';\n\nimport Button from 'antd/es/button';\nimport Col from 'antd/es/col';\nimport DatePicker from 'antd/es/date-picker';\nimport Form, { FormComponentProps } from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Input from 'antd/es/input';\nimport Row from 'antd/es/row';\nimport { conditionItemLayout } from 'utils/conditionLayout';\nimport styles from './index.module.less';\n\nconst formItemLayout = { ...conditionItemLayout, colon: false };\nconst FormItem = Form.Item;\nconst { RangePicker } = DatePicker;\n\nexport interface IConditionsProps extends FormComponentProps {\n  doSearch: (options?: object) => any;\n}\n\nclass Conditions extends React.PureComponent<IConditionsProps> {\n  layout = {\n    xxl: { span: 6 },\n    xl: { span: 6 },\n    md: { span: 12 },\n    sm: { span: 12 },\n    xs: { span: 24 },\n  };\n  public render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Form onSubmit={this.submit}>\n          <Row type=\"flex\" gutter={16}>\n            <Col {...this.layout}>\n              <FormItem {...formItemLayout} label=\"发布时间：\">\n                {getFieldDecorator('pubDate')(<RangePicker />)}\n              </FormItem>\n            </Col>\n            <Col {...this.layout}>\n              <FormItem {...formItemLayout} label=\"关键词搜索\">\n                {getFieldDecorator('keywords')(\n                  <Input placeholder=\"公告标题/发布人\" />,\n                )}\n              </FormItem>\n            </Col>\n            <Col {...this.layout}>\n              <FormItem {...formItemLayout}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{ marginRight: '12px' }}\n                >\n                  查询\n                </Button>\n                <Button onClick={this.onClear}>重置</Button>\n              </FormItem>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n  private submit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { validateFields } = this.props.form;\n    validateFields((err, values) => {\n      let dateStart = '';\n      let dateEnd = '';\n      if (values.pubDate && values.pubDate.length > 0) {\n        dateStart = values.pubDate[0].format('YYYY-MM-DD') + ' 00:00:00';\n        dateEnd = values.pubDate[1].format('YYYY-MM-DD') + ' 23:59:59';\n      }\n      const param = {\n        dateStart,\n        dateEnd,\n        keywords: values.keywords,\n      };\n      const keys = Object.keys(param);\n      for (const key of keys) {\n        if (!param[key]) {\n          delete param[key];\n        }\n      }\n      this.props.doSearch(param);\n    });\n  };\n  private onClear = () => {\n    const { resetFields } = this.props.form;\n    resetFields();\n    this.props.doSearch();\n  };\n}\nexport default Form.create()(Conditions);\n","/**\n * Proclamation Component\n * @author ggm\n * @date 2018/9/14 下午4:28:11\n */\nimport Button from 'antd/es/button';\nimport Col from 'antd/es/col';\nimport DatePicker from 'antd/es/date-picker';\nimport Form, { FormComponentProps } from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Input from 'antd/es/input';\nimport Modal from 'antd/es/modal';\nimport Row from 'antd/es/row';\n\nimport TextArea from 'components/TextArea';\nimport moment from 'moment';\nimport * as React from 'react';\nimport { conditionItemLayout } from 'utils/conditionLayout';\nimport styles from './index.module.less';\n\nconst formItemLayout = { ...conditionItemLayout, colon: false };\nconst FormItem = Form.Item;\n\nexport interface IEditModalProps extends FormComponentProps {\n  visible?: boolean;\n  isInsert?: boolean;\n  utmsNoticeId?: string | number;\n  title?: string;\n  content?: string;\n  invalidDate?: string;\n  onSave?: (options?: object, isInsert?: boolean, cb?: () => any) => any;\n  onCancel?: () => any;\n}\n\nclass EditModal extends React.PureComponent<IEditModalProps> {\n  state = {\n    utmsNoticeId: '',\n    title: '',\n    content: '',\n    invalidDate: '',\n    isInsert: true,\n    loading: false,\n  };\n  public componentWillReceiveProps(nextProps) {\n    const { resetFields, isFieldsTouched } = nextProps.form;\n    if (nextProps.visible && !isFieldsTouched()) {\n      this.setState({\n        utmsNoticeId: nextProps.utmsNoticeId,\n        title: nextProps.title,\n        content: nextProps.content,\n        invalidDate: nextProps.invalidDate,\n        isInsert: nextProps.isInsert,\n        loading: false,\n      });\n    } else if (!nextProps.visible) {\n      resetFields();\n    }\n  }\n  public render() {\n    const { title, content, invalidDate, isInsert, loading } = this.state;\n    const { visible } = this.props;\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    return (\n      <Modal\n        title={isInsert ? '新建公告' : '修改公告'}\n        visible={visible}\n        onOk={this.onSave}\n        onCancel={this.onCancel}\n        okText=\"保存\"\n        cancelText=\"取消\"\n        centered={true}\n        maskClosable={false}\n        okButtonProps={{ loading }}\n        bodyStyle={{\n          paddingTop: '12px',\n          paddingBottom: '16px',\n        }}\n      >\n        <div>\n          <Form>\n            <Row>\n              <FormItem\n                {...formItemLayout}\n                label=\"公告标题\"\n                style={{ paddingBottom: '2px' }}\n              >\n                {getFieldDecorator('title', {\n                  initialValue: title,\n                  rules: [\n                    {\n                      required: true,\n                      message: '请填写公告标题',\n                    },\n                  ],\n                })(\n                  <Input\n                    placeholder=\"简单描述公告主要内容\"\n                    maxLength={20}\n                    addonAfter={`${getFieldValue('title').length || 0}/20`}\n                  />,\n                )}\n              </FormItem>\n            </Row>\n            <Row>\n              <FormItem\n                {...formItemLayout}\n                label=\"公告内容\"\n                style={{ paddingBottom: '2px' }}\n              >\n                {getFieldDecorator('content', {\n                  initialValue: content,\n                  rules: [\n                    {\n                      required: true,\n                      message: '请填写公告内容',\n                    },\n                  ],\n                })(\n                  <TextArea\n                    rows={5}\n                    autosize={false}\n                    maxLength={200}\n                    placeholder=\"请完整描述公告通知内容\"\n                    style={{ marginBottom: '5px' }}\n                  />,\n                )}\n              </FormItem>\n            </Row>\n            <Row>\n              <FormItem\n                {...formItemLayout}\n                label=\"失效时间\"\n                style={{ paddingBottom: '2px' }}\n              >\n                {getFieldDecorator('invalidDate', {\n                  initialValue: invalidDate\n                    ? moment(invalidDate, 'YYYY-MM-DD HH:mm:ss')\n                    : invalidDate,\n                  rules: [\n                    {\n                      required: true,\n                      message: '请选择失效时间',\n                    },\n                  ],\n                })(\n                  <DatePicker\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    showTime={true}\n                    style={{ width: '100%' }}\n                  />,\n                )}\n              </FormItem>\n            </Row>\n          </Form>\n        </div>\n      </Modal>\n    );\n  }\n  private onSave = () => {\n    const { validateFields } = this.props.form;\n    const { isInsert } = this.props;\n    validateFields((err, values) => {\n      if (!err) {\n        const opts = Object.assign(values);\n        if (!isInsert) {\n          opts.utmsNoticeId = this.state.utmsNoticeId;\n          opts.isDeleted = 0;\n        }\n        opts.invalidDate =\n          typeof opts.invalidDate === 'string'\n            ? opts.invalidDate\n            : opts.invalidDate.format('YYYY-MM-DD HH:mm:ss');\n        this.props.onSave(opts, isInsert, () => {\n          this.setState({\n            loading: false,\n          });\n        });\n        this.setState({\n          loading: true,\n        });\n      }\n    });\n  };\n  private onCancel = () => {\n    this.props.onCancel();\n  };\n}\nexport default Form.create()(EditModal);\n","/**\n * Proclamation selectors\n * @author ggm\n * @date 2018/9/14 下午4:28:11\n */\nimport { List, Map } from 'immutable';\nimport { createSelector } from 'reselect';\nconst initialState = Map({\n  data: List(),\n  error: false,\n  loading: false,\n  dataCount: 0,\n});\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('error'),\n  );\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('data'),\n  );\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('dataCount'),\n  );\n","/**\n * Proclamation Component\n * @author ggm\n * @date 2018/9/14 下午4:28:11\n */\nimport msngr from 'msngr';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport DatePicker from 'antd/es/date-picker';\nimport Divider from 'antd/es/divider';\nimport Form from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Input from 'antd/es/input';\nimport Message from 'antd/es/message';\nimport Popconfirm from 'antd/es/popconfirm';\nimport Row from 'antd/es/row';\nimport Table from 'components/MyTable';\nimport { List, Map } from 'immutable';\nimport Conditions from './conditions';\nimport EditModal from './editModal';\nimport { deleteData, insertData, updateData } from './service';\n\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectError,\n  makeSelectLoading,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nconst FormItem = Form.Item;\n\nexport interface IProclamationProps {\n  children: React.ReactChildren;\n  form: WrappedFormUtils;\n  dataCount: number;\n  loading: boolean;\n  data: List<Map<string, any>>;\n  getDataList: (opts?: object) => any;\n  refresh: (param?: object) => any;\n}\n\nclass Proclamation extends React.PureComponent<IProclamationProps> {\n  public state = {\n    utmsNoticeId: '',\n    title: '',\n    content: '',\n    invalidDate: '',\n    current: '',\n    isInsert: true,\n    visible: false,\n  };\n  conditions = {\n    pageSize: 15,\n    skipCount: 0,\n  };\n  componentDidMount() {\n    this.props.getDataList(this.conditions);\n  }\n  public render() {\n    const {\n      utmsNoticeId,\n      title,\n      content,\n      invalidDate,\n      isInsert,\n      visible,\n    } = this.state;\n    return (\n      <Card\n        title=\"公告管理\"\n        extra={\n          <Button type=\"primary\" onClick={this.onInsert}>\n            新建公告\n          </Button>\n        }\n        className={styles.Proclamation}\n      >\n        <Conditions doSearch={this.doSearch} />\n        {this.renderTable()}\n        <EditModal\n          utmsNoticeId={utmsNoticeId}\n          title={title}\n          content={content}\n          invalidDate={invalidDate}\n          isInsert={isInsert}\n          visible={visible}\n          onSave={this.onSave}\n          onCancel={this.onCancel}\n        />\n      </Card>\n    );\n  }\n  private renderTable = () => {\n    const { loading, dataCount, data } = this.props;\n    const { current } = this.state;\n    const list = data.toJS();\n    const columns = [\n      {\n        title: '标题',\n        // fixed: 'left',\n        width: 300,\n        dataIndex: 'title',\n      },\n      {\n        title: '发布内容',\n        width: 500,\n        dataIndex: 'content',\n      },\n      {\n        title: '发布时间',\n        width: 190,\n        dataIndex: 'gmtCreate',\n      },\n      {\n        title: '发布人',\n        width: 200,\n        dataIndex: 'createOperatorName',\n      },\n      {\n        title: '发布组织',\n        width: 250,\n        dataIndex: 'organizationName',\n      },\n      {\n        title: '操作',\n        width: 110,\n        fixed: 'right',\n        render: (text, record) => {\n          return (\n            <React.Fragment>\n              <a href=\"javascript;\" onClick={this.onEdit.bind(this, record)}>\n                修改\n              </a>\n              <Divider type=\"vertical\" />\n              <Popconfirm\n                placement=\"bottomRight\"\n                title={'是否删除该公告'}\n                onConfirm={this.onDelete.bind(this, record)}\n                okText=\"是\"\n                cancelText=\"否\"\n              >\n                <a href=\"javascript;\">删除</a>\n              </Popconfirm>\n            </React.Fragment>\n          );\n        },\n      },\n    ];\n    let width = 0;\n    columns.map(col => {\n      width += col.width || 0;\n    });\n    const pagination = {\n      current,\n      onChange: this.onFetch,\n      onShowSizeChange: this.onShowSizeChange,\n      total: dataCount,\n    };\n    const tableProps = {\n      columns,\n      loading,\n      rowKey: 'utmsNoticeId',\n      dataSource: list,\n      scroll: { x: width },\n      pagination,\n    };\n    return <Table {...tableProps} />;\n  };\n  private onShowSizeChange = pageInfo => {\n    if (pageInfo) {\n      pageInfo.current = 1;\n    }\n    this.onFetch(pageInfo);\n  };\n  private onFetch = (pageInfo?: any) => {\n    this.conditions.skipCount = pageInfo\n      ? pageInfo.skipCount\n      : this.conditions.skipCount;\n    this.conditions.pageSize =\n      pageInfo && pageInfo.pageSize\n        ? pageInfo.pageSize\n        : this.conditions.pageSize;\n    this.props.getDataList(this.conditions);\n    this.setState({\n      current: (pageInfo ? pageInfo.current : 1) || 1,\n    });\n  };\n  private doSearch = param => {\n    if (!param) {\n      this.conditions = {\n        pageSize: this.conditions.pageSize,\n        skipCount: 0,\n      };\n      return this.onFetch();\n    }\n    this.conditions = {\n      pageSize: this.conditions.pageSize,\n      skipCount: 0,\n      ...param,\n    };\n    this.onFetch();\n  };\n  private onInsert = () => {\n    this.setState({\n      title: '',\n      content: '',\n      invalidDate: '',\n      isInsert: true,\n      visible: true,\n    });\n  };\n  private onEdit = (item, e: React.FormEvent<HTMLFontElement>) => {\n    e.preventDefault();\n    this.setState({\n      utmsNoticeId: item.utmsNoticeId,\n      title: item.title,\n      content: item.content,\n      invalidDate: item.invalidDate,\n      isInsert: false,\n      visible: true,\n    });\n  };\n  private onSave = (opts, isInsert, cb) => {\n    const saveFunc = isInsert ? insertData : updateData;\n    saveFunc(opts)\n      .then(res => {\n        cb();\n        if (res.result === 'success') {\n          Message.success(res.msg);\n          this.props.refresh();\n        } else {\n          Message.error(res.msg);\n        }\n      })\n      .catch(() => {\n        cb();\n      });\n  };\n  private onDelete = (item, e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    deleteData({\n      utmsNoticeId: item.utmsNoticeId,\n      isDeleted: 1,\n    })\n      .then(res => {\n        if (res.result === 'success') {\n          Message.success('删除成功');\n          this.props.refresh();\n        } else {\n          Message.error(res.msg);\n        }\n      })\n      .catch(() => {\n        Message.error('请稍后重试');\n      });\n  };\n  private onCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n}\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getDataList: param => dispatch(actions.getDataList(param)),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    dataCount: makeSelectDataCount(selectState),\n    data: makeSelectData(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(\n    withConnect,\n    Form.create(),\n  )(Proclamation);\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Proclamation\":\"RgRTH\"};"],"sourceRoot":""}