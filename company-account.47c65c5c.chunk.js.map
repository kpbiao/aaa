{"version":3,"sources":["webpack:///./src/modules/module.company.account/accountInfo.tsx","webpack:///./src/modules/module.company.account/index.tsx","webpack:///./src/modules/module.company.account/selectors.ts","webpack:///./src/modules/module.company.account/index.module.less"],"names":["module_company_account_accountInfo","_ref","details","expireDate","concat","get","versionCode","react","row","col","className","index_module_default","a","detailWrapper","label","value","TabPane","tabs","FormItem","es_form","Item","module_company_account_CompanyAccount","CompanyAccount","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleSubmit","e","toggleStatus","accountInfo","preventDefault","form","validateFields","err","values","updateInvoiceData","Object","assign","utmsClientId","getAccountData","permissionArray","permissions","toArray","map","cur","push","defaultActiveKey","type","tab","key","renderAccount","includes","renderInvoice","getFieldValue","updateStatus","_this2","_this$props","isInvoiceEmpty","_this$props$form","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","lg","wrapperCol","formItemColStyle","isEdit","layout","onSubmit","_extends","initialValue","input","disabled","maxLength","es_button","htmlType","onClick","toggleBtn","accountInfoProps","renderTabs","__webpack_exports__","routeId","actions","selectState","state","mapStateToProps","libfrom_dll_reference_dll","error","selectors_makeSelectError","loading","selectors_makeSelectLoading","selectors_makeSelectAccountInfo","selectors_makeSelectInvoiceEmpty","submitError","selectors_makeSelectSubmitError","selectors_makeSelectToggleStatus","withConnect","es","dispatch","data","status","redux","create","module","exports"],"mappings":"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","file":"company-account.47c65c5c.chunk.js","sourcesContent":["/**\n * account info Component\n * @author HuangSiFei\n * @date 2018-9-13 14:37:34\n */\nimport Col from 'antd/es/col';\nimport Row from 'antd/es/row';\nimport * as React from 'react';\nimport styles from './index.module.less';\n\nexport default ({ details }) => {\n  const expireDate = `${details.get('buyCreateDate')}至${details.get(\n    'buyEndDate',\n  )}`;\n  let versionCode = '';\n  switch (details.get('versionsCode')) {\n    case 'P':\n      versionCode = '基础版';\n      break;\n    case 'Z':\n      versionCode = '智能版';\n      break;\n    case 'D':\n      versionCode = '定制版';\n      break;\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col className={styles.detailWrapper}>\n          <div className={styles.label}>当前账户：</div>\n          <div className={styles.value}>{details.get('clientName')}</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.detailWrapper}>\n          <div className={styles.label}>组织编码：</div>\n          <div className={styles.value}>{details.get('domainName')}</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.detailWrapper}>\n          <div className={styles.label}>版本：</div>\n          <div className={styles.value}>{versionCode}</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.detailWrapper}>\n          <div className={styles.label}>版本号：</div>\n          <div className={styles.value}>{details.get('versionNo')}</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.detailWrapper}>\n          <div className={styles.label}>有效期：</div>\n          <div className={styles.value}>{expireDate}</div>\n        </Col>\n      </Row>\n      <Row>\n        <Col className={styles.detailWrapper}>\n          <div className={styles.label}>累积保驾护航：</div>\n          <div className={styles.value}>{details.get('applyDays')}天</div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","/**\n * CompanyAccount Component\n * @author HuangSiFei\n * @date 2018-9-13 14:37:34\n */\nimport Form, { ComponentDecorator } from 'antd/es/form';\nimport Tabs from 'antd/es/tabs';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport AccountInfo from './accountInfo';\n\nimport Button from 'antd/es/button';\nimport Col from 'antd/es/col';\nimport Input from 'antd/es/input';\nimport Row from 'antd/es/row';\nimport { List, Map } from 'immutable';\n\nimport './index.less';\nimport styles from './index.module.less';\n\nimport {\n  makeSelectAccountInfo,\n  makeSelectError,\n  makeSelectInvoiceEmpty,\n  makeSelectLoading,\n  makeSelectSubmitError,\n  makeSelectToggleStatus,\n} from './selectors';\n\nconst { TabPane } = Tabs;\nconst { Item: FormItem } = Form;\n\nexport interface ICompanyAccountProps {\n  children: React.ReactChildren;\n  accountInfo: Map<string, string | number>;\n  form: ComponentDecorator;\n  toggleStatus: string;\n  permissions: List<Map<string, any>>;\n  isInvoiceEmpty: boolean;\n  submitError: boolean;\n  updateStatus: (key: string) => any;\n  getAccountData: () => any;\n  getFieldDecorator: (key: string, options: any) => any;\n  updateInvoiceData: (data?: object) => any;\n}\n\nclass CompanyAccount extends React.PureComponent<ICompanyAccountProps> {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   toggleStatus: 'details',\n    // };\n  }\n  public componentDidMount() {\n    this.props.getAccountData();\n  }\n\n  public renderTabs() {\n    const tabProps = {\n      defaultActiveKey: '1',\n      type: 'card',\n    };\n    const { permissions } = this.props;\n    const permissionArray = [];\n    permissions.toArray().map(cur => {\n      return permissionArray.push(cur.get('operateKey'));\n    });\n    return (\n      <div className={'cardContainer'}>\n        <Tabs {...tabProps}>\n          <TabPane tab=\"账户信息\" key=\"1\">\n            {this.renderAccount()}\n          </TabPane>\n          {permissionArray.includes('edit') ? (\n            <TabPane tab=\"开票信息\" key=\"2\">\n              {this.renderInvoice()}\n            </TabPane>\n          ) : (\n            ''\n          )}\n        </Tabs>\n      </div>\n    );\n  }\n\n  public toggleBtn(e, toggleStatus) {\n    e.preventDefault();\n    const { accountInfo } = this.props;\n    const { getFieldValue } = this.props.form;\n    const status =\n      !getFieldValue('invoiceRise') &&\n      !getFieldValue('invoiceDuty') &&\n      !getFieldValue('invoiceAddress') &&\n      !getFieldValue('invoiceMobileNumber') &&\n      !getFieldValue('openBank') &&\n      !getFieldValue('openAccountNumber')\n        ? 'edit'\n        : toggleStatus === 'details'\n          ? 'edit'\n          : 'details';\n    // this.setState({\n    //   toggleStatus: status,\n    // });\n    this.props.updateStatus(toggleStatus);\n  }\n\n  public handleSubmit = (e, toggleStatus) => {\n    const { accountInfo } = this.props;\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        // this.toggleBtn(e, toggleStatus);\n        this.props.updateInvoiceData(\n          Object.assign(\n            { utmsClientId: accountInfo.get('utmsClientId') },\n            values,\n          ),\n        );\n      }\n    });\n  };\n\n  public renderInvoice() {\n    const { accountInfo, isInvoiceEmpty, toggleStatus } = this.props;\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        lg: { span: 24 },\n      },\n      wrapperCol: {\n        xs: { span: 20 },\n        sm: { span: 20 },\n        lg: { span: 20 },\n      },\n    };\n    const formItemColStyle = {\n      lg: { span: 8 },\n      sm: { span: 12 },\n      xs: { span: 24 },\n    };\n    // const { toggleStatus } = this.state;\n    const isEdit = isInvoiceEmpty ? true : toggleStatus === 'edit';\n    return (\n      <Form\n        layout=\"vertical\"\n        onSubmit={e => this.handleSubmit(e, toggleStatus)}\n      >\n        <Row>\n          <Col {...formItemColStyle}>\n            <FormItem {...formItemLayout} label=\"发票抬头：\">\n              {getFieldDecorator('invoiceRise', {\n                initialValue: accountInfo.get('invoiceRise'),\n              })(<Input disabled={!isEdit} maxLength={50} />)}\n            </FormItem>\n          </Col>\n          <Col {...formItemColStyle}>\n            <FormItem {...formItemLayout} label=\"发票税号：\">\n              {getFieldDecorator('invoiceDuty', {\n                initialValue: accountInfo.get('invoiceDuty'),\n              })(<Input disabled={!isEdit} maxLength={20} />)}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row>\n          <Col {...formItemColStyle}>\n            <FormItem {...formItemLayout} label=\"开票地址：\">\n              {getFieldDecorator('invoiceAddress', {\n                initialValue: accountInfo.get('invoiceAddress'),\n              })(<Input disabled={!isEdit} maxLength={500} />)}\n            </FormItem>\n          </Col>\n          <Col {...formItemColStyle}>\n            <FormItem {...formItemLayout} label=\"开票电话：\">\n              {getFieldDecorator('invoiceMobileNumber', {\n                initialValue: accountInfo.get('invoiceMobileNumber'),\n              })(<Input disabled={!isEdit} maxLength={13} />)}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row>\n          <Col {...formItemColStyle}>\n            <FormItem {...formItemLayout} label=\"开户银行：\">\n              {getFieldDecorator('openBank', {\n                initialValue: accountInfo.get('openBank'),\n              })(<Input disabled={!isEdit} maxLength={50} />)}\n            </FormItem>\n          </Col>\n          <Col {...formItemColStyle}>\n            <FormItem {...formItemLayout} label=\"开户账号：\">\n              {getFieldDecorator('openAccountNumber', {\n                initialValue: accountInfo.get('openAccountNumber'),\n              })(<Input disabled={!isEdit} maxLength={32} />)}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <FormItem>\n              {isInvoiceEmpty || toggleStatus === 'edit' ? (\n                <Button type=\"primary\" htmlType=\"submit\">\n                  保存\n                </Button>\n              ) : (\n                <Button onClick={e => this.toggleBtn(e, toggleStatus)}>\n                  编辑\n                </Button>\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n\n  public renderAccount() {\n    const { accountInfo } = this.props;\n    const accountInfoProps = {\n      details: accountInfo,\n    };\n    return <AccountInfo {...accountInfoProps} />;\n  }\n\n  public render() {\n    return <div>{this.renderTabs()}</div>;\n  }\n}\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getAccountData: () => dispatch(actions.getAccountData()),\n    updateInvoiceData: data => dispatch(actions.updateInvoiceData(data)),\n    updateStatus: status => dispatch(actions.updateStatus()),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    accountInfo: makeSelectAccountInfo(selectState),\n    isInvoiceEmpty: makeSelectInvoiceEmpty(selectState),\n    submitError: makeSelectSubmitError(selectState),\n    toggleStatus: makeSelectToggleStatus(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(\n    withConnect,\n    Form.create(),\n  )(CompanyAccount);\n};\n","/**\n * CompanyAccount selectors\n * @author HuangSiFei\n * @date 2018-9-13 14:37:34\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectInvoiceEmpty = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('isInvoiceEmpty'),\n  );\n\nexport const makeSelectAccountInfo = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('accountInfo'),\n  );\nexport const makeSelectSubmitError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('submitError'),\n  );\nexport const makeSelectToggleStatus = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('toggleStatus'),\n  );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailWrapper\":\"_2adn1\",\"label\":\"_3Pu2h\",\"value\":\"_1Pama\"};"],"sourceRoot":""}