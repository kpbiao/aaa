{"version":3,"sources":["webpack:///./src/modules/module.stowage/modelService.ts","webpack:///./src/modules/module.stowage/ModalForm.tsx","webpack:///./src/modules/module.stowage/index.tsx","webpack:///./src/modules/module.stowage/selectors.ts","webpack:///./src/modules/module.stowage/index.module.less"],"names":["modelService_reqSetOderToGroup","data","Object","request","method","url","useMock","globalErrorMsg","Option","es_select","ModalForm_confirm","modal","confirm","round","number","precision","Math","pow","ModalForm_FormModule","state","confirmLoading","handleOk","_callee","values","_data","regeneratorRuntime","wrap","_context","prev","next","_this","props","form","getFieldsValue","setState","_objectSpread","partOrderIds","selectedRowKeys","sent","message","success","okHandle","t0","finish","stop","this","handleCancel","isFieldsTouched","title","content","react_default","a","createElement","okText","cancelText","onCancel","cancleHandle","PureComponent","_this2","_this$props","visible","_this$props$data","count","load","volume","orderNum","recommend","depotList","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","onOk","centered","maskClosable","className","index_module_default","StowageModel","footer","es_button","key","onClick","type","loading","row","es_alert","concat","showIcon","col","xs","ListTerm","ListDetail","FormItem","_extends","label","rules","required","style","width","placeholder","map","item","value","utmsDepotId","depotName","initialValue","max","InputBox","maxLength","module_stowage_ModalForm","es_form","create","mapPropsToFields","name","createFormField","warehouseId","module_stowage_formItemLayout","module_stowage_objectSpread","conditionLayout","colon","RangePicker","date_picker","emptyRecord","GLOBAL","columns","dataIndex","fixed","render","text","record","react","Link","to","utmsPartOrderId","defaultModelData","isOverload","module_stowage_Stowage","modelData","showModel","skipCount","pageSize","current","getDepotHandle","routeId","split","includes","getDepotData","onSelectChange","selectedRows","goodsWeight","goodsVolume","goodsNumber","length","onAllCheckChanged","checked","toJS","d","push","reSetHandle","resetFields","searchHandle","paginationChange","params","fetchDataFun","orderToGroupHandle","_this$state","vehicleType","allowOrderToGroupHandle","_this$state2","result","keepSelected","assign","msngrfrom_dll_reference_dll_default","on","prevProps","depotCount","error","goAddDepotPage","drop","layout","xxl","xl","md","sm","gutter","module_stowage_extends","input","htmlType","marginRight","marginLeft","dataCount","_this$state3","dataSource","rowSelection","onChange","getCheckboxProps","disabled","status","paginationConfig","total","onShowSizeChange","spin","spinning","MyTable","pagination","rowKey","scroll","x","PageBottom","leftChild","rightChild","buttons","BottomTip","_this3","_this$state4","card","Stowage","FormWrap","getFields","getTableList","dataRange","options","_objectWithoutProperties","createDateStart","dateTimeHelper","undefined","createDateEnd","getAsyncData","vehicleData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","element","vehicleVolume","Number","vehicleLong","err","return","StowageForm","_ref","connectModel","actions","selectState","currentState","get","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectVehicleData","selectors_makeSelectDataCount","selectors_makeSelectError","selectors_makeSelectLoading","selectors_makeSelectDepotData","selectors_makeSelectDepotCount","mapDispatchToProps","dispatch","module","exports","require"],"mappings":"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","file":"stowage.b2941eee.chunk.js","sourcesContent":["/**\n * Stowage service\n * @author hefan\n * @date 2018/9/21 上午8:47:06\n */\nimport request, { mocker } from 'utils/request';\nimport { USE_MOCK } from '../../CONFIG';\n\n// API list\nconst ODERTOGROUP = '/ehuodiGateway/utmsTrade/utmsPartGroup/partOder2Group';\n\nif (process.env.NODE_ENV === 'development') {\n  // mocker\n  //   .on('post', ODERTOGROUP)\n  //   .reply(() =>\n  //     import('./mock/partOder2Group').then(exports => [200, exports.default]),\n  //   );\n}\n\n/**\n * 配载到组\n * @param data\n */\nexport const reqSetOderToGroup = data => {\n  return request(\n    {\n      method: 'post',\n      url: ODERTOGROUP,\n      data,\n    },\n    {\n      useMock: false,\n      globalErrorMsg: true,\n    },\n  );\n};\n","import styles from 'modules/module.stowage/index.module.less';\nimport React from 'react';\n\nimport Alert from 'antd/es/alert';\nimport Button from 'antd/es/button';\nimport Col from 'antd/es/col';\nimport Form from 'antd/es/form';\nimport FormItem from 'antd/es/form/FormItem';\nimport Input from 'antd/es/input';\nimport message from 'antd/es/message';\nimport Modal from 'antd/es/modal';\nimport Row from 'antd/es/row';\nimport Select from 'antd/es/select';\nimport { InputBox } from 'components/InputBox';\nconst Option = Select.Option;\nconst { confirm } = Modal;\n\nimport { reqSetOderToGroup } from './modelService';\n\nfunction round(number: number, precision: number) {\n  return Math.round(+number + 'e' + precision) / Math.pow(10, precision);\n}\n\ninterface IModalFormProps {\n  visible: boolean;\n  data: {};\n  form: any;\n  depotList: [];\n  okHandle?: (params: {}) => void;\n  cancleHandle?: () => void;\n  selectedRowKeys: [];\n}\n\nclass FormModule extends React.PureComponent<IModalFormProps> {\n  state = {\n    confirmLoading: false,\n  };\n  handleOk = async () => {\n    const values = this.props.form.getFieldsValue();\n    this.setState({\n      confirmLoading: true,\n    });\n    try {\n      const data = await reqSetOderToGroup({\n        partOrderIds: this.props.selectedRowKeys,\n        ...values,\n      });\n      message.success('已完成配载');\n      this.props.okHandle(data);\n    } catch (error) {\n      // ignore\n    } finally {\n      this.setState({\n        confirmLoading: false,\n      });\n    }\n  };\n  handleCancel = () => {\n    const change = this.props.form.isFieldsTouched();\n\n    if (change) {\n      confirm({\n        title: '有未保存的信息',\n        content: <p>如放弃，填写的信息将丢失</p>,\n        okText: '继续填写',\n        cancelText: '放弃',\n        onCancel: () => {\n          this.props.cancleHandle();\n        },\n      });\n    } else {\n      this.props.cancleHandle();\n    }\n  };\n\n  render() {\n    const {\n      visible,\n      data: { count, load, volume, orderNum, recommend },\n      form,\n      depotList,\n    } = this.props;\n    const { getFieldDecorator } = form;\n    const formItemLayout = {\n      labelCol: {\n        span: 4,\n      },\n      wrapperCol: {\n        span: 15,\n      },\n    };\n\n    return (\n      <Modal\n        visible={visible}\n        title=\"创建订单组\"\n        onOk={this.handleOk}\n        centered={true}\n        maskClosable={false}\n        onCancel={this.handleCancel}\n        className={styles.StowageModel}\n        footer={[\n          <Button key=\"back\" onClick={this.handleCancel}>\n            取消\n          </Button>,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            loading={this.state.confirmLoading}\n            onClick={() => {\n              this.handleOk();\n            }}\n          >\n            确定\n          </Button>,\n        ]}\n      >\n        <Row>\n          <Alert message={`建议车型：${recommend}`} type=\"info\" showIcon />\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <div className={styles.ListTerm}>订单数：</div>\n            <div className={styles.ListDetail}>{orderNum}个</div>\n          </Col>\n          <Col xs={12}>\n            <div className={styles.ListTerm}>总件数：</div>\n            <div className={styles.ListDetail}>{count}件</div>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <div className={styles.ListTerm}>总体积：</div>\n            <div className={styles.ListDetail}>\n              {volume && round(volume, 2)}方\n            </div>\n          </Col>\n          <Col xs={12}>\n            <div className={styles.ListTerm}>总重量：</div>\n            <div className={styles.ListDetail}>\n              {load && round(load, 2)}\n              千克\n            </div>\n          </Col>\n        </Row>\n        <FormItem {...formItemLayout} label=\"仓库名：\">\n          {getFieldDecorator('warehouseId', {\n            rules: [\n              {\n                required: true,\n                message: '请选择仓库',\n              },\n            ],\n          })(\n            <Select\n              style={{\n                width: '100%',\n              }}\n              placeholder=\"请选择仓库\"\n            >\n              {depotList.map(item => (\n                <Option value={item.utmsDepotId} key={item.utmsDepotId}>\n                  {item.depotName}\n                </Option>\n              ))}\n            </Select>,\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"分组名称：\">\n          {getFieldDecorator('name', {\n            initialValue: '',\n            rules: [\n              {\n                required: true,\n                message: '请输入分组名称',\n                max: 50,\n              },\n            ],\n          })(<InputBox placeholder=\"请输入分组名称\" maxLength={50} />)}\n        </FormItem>\n      </Modal>\n    );\n  }\n}\n\nconst ModalForm = Form.create({\n  mapPropsToFields(props) {\n    return {\n      name: Form.createFormField({\n        name: props.data.name,\n      }),\n      warehouseId: Form.createFormField({\n        warehouseId: props.data.warehouseId,\n      }),\n    };\n  },\n})(FormModule);\n\nexport default ModalForm;\n","/**\n * Stowage Component\n * @author hefan\n * @date 2018/9/21 上午8:47:06\n */\nimport { push } from 'connected-react-router';\nimport msngr from 'msngr';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\n\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport DatePicker from 'antd/es/date-picker';\nimport Form from 'antd/es/form';\nimport FormItem from 'antd/es/form/FormItem';\nimport Input from 'antd/es/input';\nimport Modal from 'antd/es/modal';\nimport Row from 'antd/es/row';\nimport Spin from 'antd/es/spin';\n\nimport MyTable from 'components/MyTable';\nimport { conditionItemLayout, conditionLayout } from 'utils/conditionLayout';\nconst formItemLayout = { ...conditionItemLayout, colon: false };\nimport {\n  PageBottom,\n  PageBottomButtons,\n  PageBottomCheck,\n} from 'components/PageBottom';\nconst RangePicker = DatePicker.RangePicker;\nimport { toYYYYMMDDE, toYYYYMMDDS } from 'utils/dateTimeHelper';\nimport GLOBAL from 'utils/GLOBAL';\nimport ModalForm from './ModalForm.tsx';\nconst { emptyRecord } = GLOBAL;\n\nconst columns = [\n  {\n    title: '第三方单号',\n    dataIndex: 'thirdSystemId',\n    key: 'thirdSystemId',\n    fixed: 'left',\n    width: 110,\n  },\n  {\n    title: '订单号',\n    dataIndex: 'orderNumber',\n    key: 'orderNumber',\n    render: (text, record) => (\n      <Link to={`/ltlOrder/detail?id=${record.utmsPartOrderId}`}>{text}</Link>\n    ),\n    fixed: 'left',\n    width: 250,\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n    key: 'status',\n    width: 80,\n  },\n  {\n    title: '下单时间',\n    dataIndex: 'gmtCreate',\n    key: 'gmtCreate',\n    width: 190,\n  },\n  {\n    title: '要求送达时间',\n    dataIndex: 'requireDate',\n    key: 'requireDate',\n    width: 190,\n    render: text => `${text || emptyRecord}`,\n  },\n  {\n    title: '收货人',\n    dataIndex: 'contact',\n    key: 'contact',\n    width: 90,\n  },\n  {\n    title: '联系电话',\n    dataIndex: 'phone',\n    key: 'phone',\n    width: 140,\n  },\n  {\n    title: '收货地址',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: '客户',\n    dataIndex: 'customerName',\n    key: 'customerName',\n    width: 150,\n  },\n];\n\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectDepotCount,\n  makeSelectDepotData,\n  makeSelectError,\n  makeSelectLoading,\n  makeSelectVehicleData,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nexport interface IStowageProps {\n  children: React.ReactChildren;\n  data: any;\n  vehicleData: any;\n  getAsyncData: (params?: {}) => any;\n  getDepotData: () => void;\n  depotCount: number;\n  goAddDepotPage: () => void;\n}\n\nconst defaultModelData = {\n  name: '',\n  warehouseId: null,\n  orderNum: 0,\n  count: 0,\n  volume: 0,\n  load: 0,\n  isOverload: false,\n  recommend: '',\n};\n\nclass Stowage extends React.PureComponent<IStowageProps> {\n  state = {\n    selectedRowKeys: [],\n    modelData: {\n      ...defaultModelData,\n    },\n    showModel: false,\n    skipCount: 0,\n    pageSize: 15,\n    current: 1,\n  };\n  public componentDidMount() {\n    this.fetchDataFun();\n\n    this.props.getDepotData();\n\n    msngr('GLOBAL', 'activeRouteId', 'change').on(this.getDepotHandle);\n  }\n  public componentDidUpdate(prevProps) {\n    if (prevProps.depotCount === -1 && this.props.depotCount === 0) {\n      Modal.error({\n        title: '跳转到新键地址',\n        content: (\n          <div>\n            <p>当前无仓库装货位置，请先创建仓库位置</p>\n          </div>\n        ),\n        okText: '去创建',\n        onOk: () => {\n          this.props.goAddDepotPage();\n        },\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    msngr('GLOBAL', 'activeRouteId', 'change').drop(this.getDepotHandle);\n  }\n\n  getDepotHandle = (routeId: string) => {\n    if (routeId.split('?').includes('/stowage')) {\n      this.props.getDepotData();\n    }\n  };\n\n  public getFields() {\n    const { getFieldDecorator } = this.props.form;\n    const layout = {\n      xxl: { span: 6 },\n      xl: { span: 6 },\n      md: { span: 12 },\n      sm: { span: 12 },\n      xs: { span: 24 },\n    };\n    return (\n      <Form>\n        <Row gutter={10}>\n          <Col {...layout}>\n            <FormItem label=\"客户名称\" {...formItemLayout}>\n              {getFieldDecorator('customerName')(\n                <Input placeholder=\"请输入客户名称\" />,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...layout}>\n            <FormItem label=\"第三方单号\" {...formItemLayout}>\n              {getFieldDecorator('thirdSystemId')(\n                <Input placeholder=\"请输入第三方订单号\" />,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...layout}>\n            <FormItem label=\"订单号\" {...formItemLayout}>\n              {getFieldDecorator('orderNumber')(\n                <Input placeholder=\"请输入订单号\" />,\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row gutter={10}>\n          <Col {...layout}>\n            <FormItem label=\"收货地址\" {...formItemLayout}>\n              {getFieldDecorator('address')(\n                <Input placeholder=\"请输入收货地址\" />,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...layout}>\n            <FormItem label=\"下单时间\" {...formItemLayout}>\n              {getFieldDecorator('dataRange')(<RangePicker />)}\n            </FormItem>\n          </Col>\n          <Col {...layout}>\n            <FormItem {...formItemLayout}>\n              <Button\n                onClick={this.searchHandle}\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ marginRight: '12px', marginLeft: '6px' }}\n              >\n                查询\n              </Button>\n              <Button onClick={this.reSetHandle}>重置</Button>\n            </FormItem>\n            {/* <FormItem {...formItemLayout}>\n\n            </FormItem> */}\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n  public getTableList() {\n    const { data, dataCount, loading } = this.props;\n    const {\n      modelData: { isOverload },\n      selectedRowKeys,\n      current,\n    } = this.state;\n\n    const dataSource = data ? data.toJS() : [];\n\n    const rowSelection = {\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: this.onSelectChange,\n      getCheckboxProps: record => ({\n        disabled: record.status === '已发货', // Column configuration not to be checked\n        status: record.status,\n      }),\n    };\n\n    const paginationConfig = {\n      current,\n      total: dataCount,\n      onChange: this.paginationChange,\n      onShowSizeChange: this.paginationChange,\n    };\n\n    return (\n      <Spin spinning={loading}>\n        <MyTable\n          rowSelection={rowSelection}\n          columns={columns}\n          dataSource={dataSource}\n          pagination={paginationConfig}\n          rowKey=\"utmsPartOrderId\"\n          scroll={{ x: 1500 }}\n        />\n        <PageBottom\n          leftChild={\n            <PageBottomCheck\n              total={dataSource.length}\n              checked={this.state.selectedRowKeys.length}\n              onAllCheckChanged={this.onAllCheckChanged}\n            />\n          }\n          rightChild={\n            <PageBottomButtons\n              buttons={[\n                <Button\n                  key={1}\n                  type=\"primary\"\n                  onClick={this.orderToGroupHandle}\n                  disabled={isOverload || !selectedRowKeys.length}\n                >\n                  配载到组\n                </Button>,\n              ]}\n            />\n          }\n        >\n          {isOverload ? (\n            <div className={styles.BottomTip}>超载，不允许添加分组</div>\n          ) : null}\n        </PageBottom>\n      </Spin>\n    );\n  }\n\n  public render() {\n    const { depotList } = this.props;\n\n    const { showModel, modelData, selectedRowKeys } = this.state;\n\n    return (\n      <Card className={styles.Stowage}>\n        <div className={styles.FormWrap}>{this.getFields()}</div>\n        {this.getTableList()}\n        <ModalForm\n          visible={showModel}\n          okHandle={this.allowOrderToGroupHandle}\n          cancleHandle={() => {\n            this.handleCancel(true);\n          }}\n          data={modelData}\n          depotList={depotList}\n          selectedRowKeys={selectedRowKeys}\n        />\n      </Card>\n    );\n  }\n\n  /**\n   * 设置选择项\n   */\n  private onSelectChange = (selectedRowKeys: [], selectedRows) => {\n    const { modelData } = this.state;\n    let { count, volume, load, isOverload } = modelData;\n\n    load = 0;\n    volume = 0;\n    count = 0;\n\n    selectedRows.map(item => {\n      load += item.goodsWeight;\n      volume += item.goodsVolume;\n      count += item.goodsNumber;\n    });\n\n    isOverload = volume > 50 ? true : false;\n\n    this.setState({\n      selectedRowKeys,\n      modelData: {\n        ...modelData,\n        orderNum: selectedRowKeys.length,\n        count,\n        volume,\n        load,\n        isOverload,\n      },\n    });\n  };\n\n  /**\n   * 全选\n   */\n  private onAllCheckChanged = checked => {\n    const data = this.props.data.toJS();\n\n    if (!checked) {\n      // this.setState({ selectedRowKeys: [] });\n      this.onSelectChange([], []);\n    } else {\n      const selectedRowKeys = [];\n      data.map(d => {\n        selectedRowKeys.push(d.utmsPartOrderId);\n      });\n\n      this.onSelectChange(selectedRowKeys, data);\n    }\n  };\n\n  /**\n   * 重置\n   */\n  private reSetHandle = () => {\n    const { form } = this.props;\n    form.resetFields();\n\n    this.searchHandle();\n  };\n\n  /**\n   * 页码变化\n   */\n  private paginationChange = params => {\n    const { skipCount, pageSize, current } = params;\n\n    this.setState({\n      skipCount,\n      pageSize,\n      current,\n    });\n    this.onSelectChange([], []);\n    this.fetchDataFun({\n      skipCount,\n      pageSize,\n    });\n  };\n\n  /**\n   * 查询\n   */\n  private searchHandle = () => {\n    this.setState({\n      skipCount: 0,\n      current: 1,\n    });\n\n    this.onSelectChange([], []);\n    this.fetchDataFun();\n  };\n\n  private fetchDataFun(params?: {}) {\n    const values = this.props.form.getFieldsValue();\n    const { pageSize } = this.state;\n\n    const { dataRange, ...options } = values;\n    const createDateStart = dataRange ? toYYYYMMDDS(dataRange[0]) : undefined;\n    const createDateEnd = dataRange ? toYYYYMMDDE(dataRange[1]) : undefined;\n\n    this.props.getAsyncData({\n      pageSize,\n      skipCount: 0,\n      createDateStart,\n      createDateEnd,\n      ...params,\n      ...options,\n    });\n  }\n\n  /**\n   * 配载到组\n   */\n  private orderToGroupHandle = () => {\n    const { selectedRowKeys, modelData } = this.state;\n\n    const recommend = this.vehicleType();\n\n    this.setState({\n      showModel: true,\n      modelData: {\n        ...modelData,\n        recommend,\n      },\n    });\n  };\n\n  private vehicleType(): string {\n    const vehicleData = this.props.vehicleData.toJS();\n    const { modelData } = this.state;\n\n    for (const element of vehicleData) {\n      if (element.vehicleVolume >= Number(modelData.volume)) {\n        return `${element.vehicleLong / 1000}米${element.vehicleType}`;\n      }\n    }\n    return '';\n  }\n\n  /**\n   * 确认配载到组\n   */\n  private allowOrderToGroupHandle = params => {\n    const { skipCount, pageSize } = this.state;\n    if (params.result) {\n      this.handleCancel();\n      this.fetchDataFun({\n        skipCount,\n        pageSize,\n      });\n    }\n  };\n\n  private handleCancel = (keepSelected?: boolean) => {\n    const state = {\n      showModel: false,\n    };\n    // 不保留\n    if (!keepSelected) {\n      Object.assign(state, {\n        selectedRowKeys: [],\n        modelData: {\n          ...defaultModelData,\n        },\n      });\n    }\n    this.setState(state);\n  };\n}\n\nconst StowageForm = Form.create()(Stowage);\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId);\n    return {\n      mapStateToProps: createStructuredSelector({\n        data: makeSelectData(currentState),\n        vehicleData: makeSelectVehicleData(currentState),\n        dataCount: makeSelectDataCount(currentState),\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n        depotList: makeSelectDepotData(currentState),\n        depotCount: makeSelectDepotCount(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getAsyncData: (params?: {}) => dispatch(actions.getAsyncData(params)),\n        getDepotData: () => dispatch(actions.getDepotData()),\n        goAddDepotPage: () => dispatch(actions.goAddDepotPage()),\n      }),\n    };\n  })(StowageForm);\n};\n","/**\n * Stowage selectors\n * @author hefan\n * @date 2018/9/21 上午8:47:06\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n\nexport const makeSelectVehicleData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('vehicleData'),\n  );\n\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('dataCount'),\n  );\n\nexport const makeSelectDepotData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('depotList'),\n  );\n\nexport const makeSelectDepotCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('depotCount'),\n  );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stowage\":\"_1wFcY\",\"FormWrap\":\"_3EtCi\",\"BottomTip\":\"_3KuaG\",\"ListTerm\":\"_3tibF\",\"ListDetail\":\"_97FAY\",\"require\":\"_2-kdR\",\"StowageModel\":\"_1tI3F\"};"],"sourceRoot":""}