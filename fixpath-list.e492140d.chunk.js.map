{"version":3,"sources":["webpack:///./src/modules/module.fixpath.list/index.tsx","webpack:///./src/modules/module.fixpath.list/selectors.ts","webpack:///./src/modules/module.fixpath.list/index.module.less"],"names":["FormItem","es_form","Item","Option","es_select","module_fixpath_list_FixpathList","FixpathList","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","handleSubmit","e","preventDefault","updateFilter","form","getFieldsValue","handleReset","resetFields","setStatus","state","permissions","react","_this2","doSearch","handlePermissions","msngrfrom_dll_reference_dll_default","on","d","_this3","drop","setState","toArray","map","data","get","setFieldsValue","status","getFieldDecorator","className","index_module_default","a","FixpathList__Form","layout","onSubmit","row","type","col","span","label","colon","input","style","width","value","FixpathList__FormAction","es_button","htmlType","marginRight","onClick","_this4","_this$props","dataCount","list","loading","pageIndex","statusMap","showDivider","includes","tableProps","columns","title","dataIndex","render","text","record","Link","to","concat","routeId","refresh","val","badge","key","item","divider","dataSource","routeName","customerName","createDate","phone","getIn","pagination","current","total","onChange","pageData","index","onShowSizeChange","skipCount","pageSize","MyTable","card","bordered","extra","renderFilterForm","renderList","__webpack_exports__","_ref","actions","selectState","mapStateToProps","Object","libfrom_dll_reference_dll","error","selectors_makeSelectError","selectors_makeSelectLoading","immutable_esfrom_dll_reference_dll","selectors_makeSelectData","selectors_makeSelectDataCount","selectors_makeSelectPageIndex","withConnect","es","dispatch","options","getList","redux","create","module","exports","__RightAction"],"mappings":"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","file":"fixpath-list.e492140d.chunk.js","sourcesContent":["/**\n * FixpathList Component\n * @author ryan bian\n * @date 2018-9-14 16:12:09\n */\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport Divider from 'antd/es/divider';\nimport Form from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Input from 'antd/es/input';\nimport Row from 'antd/es/row';\nimport Select from 'antd/es/select';\nimport Table from 'components/MyTable';\nimport { List, Map } from 'immutable';\nimport msngr from 'msngr';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectError,\n  makeSelectLoading,\n  makeSelectPageIndex,\n} from './selectors';\n\nimport Badge from 'antd/es/badge';\nimport styles from './index.module.less';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nexport interface IFixpathListProps {\n  children: React.ReactChildren;\n  dataCount: number;\n  form: WrappedFormUtils;\n  list: List<Map<string, any>>;\n  loading: boolean;\n  pageIndex: number;\n  permissions: List<Map<string, any>>;\n  doSearch: (options?: object, pageIndex?: number) => any;\n  updateFilter: (data?: object) => any;\n  refresh: (data?) => any;\n}\ninterface IFixpathListState {\n  permissions: any[];\n}\n\nclass FixpathList extends React.PureComponent<\n  IFixpathListProps,\n  IFixpathListState\n> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permissions: [],\n    };\n  }\n  public componentDidMount() {\n    this.setStatus();\n    this.props.doSearch();\n    this.handlePermissions();\n    msngr('/fixpath/list', 'refresh').on(d => {\n      this.props.doSearch();\n    });\n  }\n\n  public componentWillUnmount() {\n    msngr('/fixpath/list', 'refresh').drop(d => {\n      this.props.doSearch();\n    });\n  }\n  // 取权限\n  public handlePermissions() {\n    const { permissions } = this.props;\n    this.setState({\n      permissions: permissions.toArray().map(data => data.get('operateKey')),\n    });\n  }\n  // 查询\n  public handleSubmit = e => {\n    e.preventDefault();\n    this.props.updateFilter(this.props.form.getFieldsValue());\n  };\n  // 搜索栏重置\n  public handleReset = () => {\n    this.props.form.resetFields();\n    this.props.updateFilter();\n    this.setStatus();\n  };\n  // 设置状态为'全部'\n  public setStatus() {\n    const { setFieldsValue } = this.props.form;\n    setFieldsValue({ status: '' });\n  }\n  // render搜索栏\n  public renderFilterForm() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form\n        className={styles.FixpathList__Form}\n        layout=\"inline\"\n        onSubmit={this.handleSubmit}\n      >\n        <Row type=\"flex\">\n          <Col span={24}>\n            <FormItem label=\"线路名称\" colon={false}>\n              {getFieldDecorator('routeName')(\n                <Input style={{ width: '165px' }} />,\n              )}\n            </FormItem>\n            <FormItem label=\"客户名称\" colon={false}>\n              {getFieldDecorator('customerName')(\n                <Input style={{ width: '165px' }} />,\n              )}\n            </FormItem>\n            <FormItem label=\"状态\" colon={false}>\n              {getFieldDecorator('status')(\n                <Select>\n                  <Option value=\"\">全部</Option>\n                  <Option value=\"1\">生效中</Option>\n                  <Option value=\"0\">失效</Option>\n                </Select>,\n              )}\n            </FormItem>\n            <FormItem className={styles.FixpathList__FormAction}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ marginRight: '12px' }}\n              >\n                查 询\n              </Button>\n              <Button onClick={this.handleReset}>重 置</Button>\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n  public renderList() {\n    const { dataCount, doSearch, list, loading, pageIndex } = this.props;\n    const statusMap = ['default', 'success'];\n    const status = ['失效', '生效中'];\n    const { permissions } = this.state;\n    const showDivider =\n      permissions.includes('/fixpath/updatepath') &&\n      permissions.includes('/fixpath/schedule');\n    const tableProps = {\n      columns: [\n        {\n          title: '路线名称',\n          dataIndex: 'routeName',\n          render: (text, record) =>\n            permissions.includes('/fixpath/detail') ? (\n              <Link\n                to={`/fixpath/detail?id=${record.routeId}`}\n                onClick={() => {\n                  this.props.refresh(`/fixpath/detail?id=${record.routeId}`);\n                }}\n              >\n                {text}\n              </Link>\n            ) : (\n              <span>{text}</span>\n            ),\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          render: val => <Badge status={statusMap[val]} text={status[val]} />,\n        },\n        {\n          title: '客户名称',\n          dataIndex: 'customerName',\n        },\n        {\n          title: '添加时间',\n          dataIndex: 'createDate',\n        },\n        {\n          title: '联系电话',\n          dataIndex: 'phone',\n        },\n        {\n          title: '操作',\n          key: 'action',\n          render(item) {\n            return (\n              <React.Fragment>\n                {permissions.includes('/fixpath/updatepath') ? (\n                  <Link to={`/fixpath/updatepath?id=${item.routeId}`}>\n                    修改\n                  </Link>\n                ) : (\n                  ''\n                )}\n                {showDivider ? <Divider type=\"vertical\" /> : ''}\n                {permissions.includes('/fixpath/schedule') ? (\n                  <Link to={`/fixpath/schedule?routeId=${item.routeId}`}>\n                    运力计划\n                  </Link>\n                ) : (\n                  ''\n                )}\n              </React.Fragment>\n            );\n          },\n        },\n      ],\n      dataSource: list\n        .map(d => ({\n          key: d.get('routeId'),\n          routeName: d.get('routeName'),\n          status: d.get('status'),\n          customerName: d.get('customerName'),\n          routeId: d.get('routeId'),\n          createDate: d.get('createDate'),\n          phone: d.getIn(['routeWayPoints', 0, 'phone']),\n        }))\n        .toArray(),\n      loading,\n      pagination: {\n        current: pageIndex,\n        total: dataCount,\n        onChange(pageData, index) {\n          doSearch(pageData, index);\n        },\n        onShowSizeChange(data) {\n          doSearch({\n            skipCount: data.skipCount,\n            pageSize: data.pageSize,\n          });\n        },\n      },\n    };\n    return <Table {...tableProps} />;\n  }\n  public render() {\n    const { permissions } = this.state;\n    return (\n      <Card\n        title=\"固定线路\"\n        bordered={true}\n        className={styles.FixpathList}\n        extra={\n          permissions.includes('/fixpath/addpath') ? (\n            <Link to=\"/fixpath/addpath\">\n              <Button type=\"primary\">新建线路</Button>\n            </Link>\n          ) : (\n            ''\n          )\n        }\n      >\n        {this.renderFilterForm()}\n        {this.renderList()}\n      </Card>\n    );\n  }\n}\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    doSearch: (options, pageIndex) =>\n      dispatch(actions.getList(options, pageIndex)),\n    updateFilter: data => dispatch(actions.updateFilter(data)),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    list: makeSelectData(selectState),\n    dataCount: makeSelectDataCount(selectState),\n    pageIndex: makeSelectPageIndex(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(\n    withConnect,\n    Form.create(),\n  )(FixpathList);\n};\n","/**\n * FixpathList selectors\n * @author ryan bian\n * @date 2018-9-14 16:12:09\n */\nimport { List, Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('data', List()),\n  );\n\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('dataCount'),\n  );\n\nexport const makeSelectPageIndex = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('pageIndex'),\n  );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FixpathList\":\"_39G_F\",\"FixpathList__Form\":\"iwsbU\",\"FixpathList__FormAction\":\"_3s49j\",\"__RightAction\":\"_2VGYB\"};"],"sourceRoot":""}