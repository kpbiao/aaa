{"version":3,"sources":["webpack:///./src/components/DescriptionList/responsive.js","webpack:///./src/components/DescriptionList/Description.tsx","webpack:///./src/components/DescriptionList/DescriptionList.tsx","webpack:///./src/components/DescriptionList/index.ts","webpack:///./src/modules/module.stowage.detail/index.tsx","webpack:///./src/modules/module.stowage.detail/selectors.ts","webpack:///./src/components/DescriptionList/index.module.less","webpack:///./src/modules/module.stowage.detail/index.module.less"],"names":["responsive","1","xs","2","sm","3","md","4","Description_Description","_ref","term","column","children","restProps","_objectWithoutProperties","react_default","a","createElement","es_col","_extends","className","index_module_default","undefined","detail","defaultProps","propTypes","prop_typesfrom_dll_reference_dll_default","node","DescriptionList_Description","components_DescriptionList_DescriptionList","_classNames","title","_ref$col","col","_ref$layout","layout","_ref$gutter","gutter","size","DescriptionList_objectWithoutProperties","clsString","classnames_default","descriptionList","_defineProperty","small","large","DescriptionList_extends","row","Children","map","child","cloneElement","Description","components_DescriptionList","module_stowage_detail_Description","TabPane","tabs","emptyRecord","GLOBAL","columns","dataIndex","key","module_stowage_detail_StowageDetail","state","locationNum","notLocationNum","mapElm","switchTabHandle","activeKey","_this","setTimeout","BMap","Map","centerAndZoom","Point","enableScrollWheelZoom","drawPoint","react","searchParams","this","props","partGroupId","getAsyncData","parseInt","coordinateType","data","dataJs","toJS","module_stowage_detail_index_module_default","StowageDetail","card","style","marginBottom","name","utmsPartGroupId","warehouseName","orderCount","volume","weight","quantity","realName","gmtCreate","tabTitle","margin","onChange","tab","getListRender","getMapRander","Download","btnType","url","params","get","_this2","pointArray","pIcon","Icon","Size","imageSize","width","height","partOrders","length","item","index","longitude","point","latitude","marker","Marker","icon","label","Label","concat","setStyle","color","backgroundColor","border","lineHeight","textAlign","borderRadius","setLabel","push","addOverlay","polygon","Polyline","strokeColor","strokeWeight","strokeOpacity","warehouseLongitude","warehouseLatitude","storePoint","store","setViewport","setState","dataSource","table","pagination","rowKey","_this3","_this$state","MapWrap","ref","locationed","location","__webpack_exports__","routeId","actions","selectState","mapStateToProps","Object","libfrom_dll_reference_dll","selectors_makeSelectData","error","selectors_makeSelectError","loading","selectors_makeSelectLoading","withConnect","es","dispatch","param","redux","module","exports","vertical"],"mappings":"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","file":"stowage-detail.cde784e0.chunk.js","sourcesContent":["export default {\n  1: { xs: 24 },\n  2: { xs: 24, sm: 12 },\n  3: { xs: 24, sm: 12, md: 8 },\n  4: { xs: 24, sm: 12, md: 6 },\n};\n","import { Col } from 'antd';\nimport responsive from 'components/DescriptionList/responsive';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './index.module.less';\n\nconst Description = ({ term, column, children, ...restProps }) => (\n  <Col {...responsive[column]} {...restProps}>\n    {term && <div className={styles.term}>{term}</div>}\n    {children !== null &&\n      children !== undefined && <div className={styles.detail}>{children}</div>}\n  </Col>\n);\n\nDescription.defaultProps = {\n  term: '',\n};\n\nDescription.propTypes = {\n  term: PropTypes.node,\n};\n\nexport default Description;\n","import { Row } from 'antd';\nimport classNames from 'classnames';\nimport React from 'react';\nimport styles from './index.module.less';\n\nconst DescriptionList = ({\n  className,\n  title,\n  col = 3,\n  layout = 'horizontal',\n  gutter = 32,\n  children,\n  size,\n  ...restProps\n}) => {\n  const clsString = classNames(\n    styles.descriptionList,\n    styles[layout],\n    className,\n    {\n      [styles.small]: size === 'small',\n      [styles.large]: size === 'large',\n    },\n  );\n\n  const column = col > 4 ? 4 : col;\n  return (\n    <div className={clsString} {...restProps}>\n      {title ? <div className={styles.title}>{title}</div> : null}\n      <Row gutter={gutter}>\n        {React.Children.map(\n          children,\n          child => (child ? React.cloneElement(child, { column }) : child),\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default DescriptionList;\n","import Description from 'components/DescriptionList/Description';\nimport DescriptionList from 'components/DescriptionList/DescriptionList';\n\nDescriptionList.Description = Description;\nexport default DescriptionList;\n","/**\n * StowageDetail Component\n * @author hefan\n * @date 2018/9/15 下午4:21:48\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Card from 'antd/es/card';\nimport Divider from 'antd/es/divider';\nimport Table from 'antd/es/table';\nimport Tabs from 'antd/es/tabs';\nimport DescriptionList from 'components/DescriptionList';\nimport Download from 'components/Download';\nconst { Description } = DescriptionList;\nconst { TabPane } = Tabs;\nimport GLOBAL from 'utils/GLOBAL';\nconst { emptyRecord } = GLOBAL;\n\nconst columns = [\n  {\n    title: '订单号',\n    dataIndex: 'orderNumber',\n    key: 'orderNumber',\n  },\n  {\n    title: '详细地址',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: '省市区',\n    dataIndex: 'province',\n    key: 'province',\n  },\n  {\n    title: '体积(方)',\n    dataIndex: 'goodsVolume',\n    key: 'goodsVolume',\n  },\n  {\n    title: '重量(吨)',\n    dataIndex: 'goodsWeight',\n    key: 'goodsWeight',\n  },\n  {\n    title: '件数(件)',\n    dataIndex: 'goodsNumber',\n    key: 'goodsNumber',\n  },\n  {\n    title: '收货人',\n    dataIndex: 'contact',\n    key: 'contact',\n  },\n  {\n    title: '联系电话',\n    dataIndex: 'phone',\n    key: 'phone',\n  },\n];\n\nimport {\n  makeSelectData,\n  makeSelectError,\n  makeSelectLoading,\n} from './selectors';\n\n// import 'ant-design-pro/lib/DescriptionList/style/index.css';\nimport styles from './index.module.less';\n\ndeclare const BMap: any;\n\nexport interface IStowageDetailProps {\n  children: React.ReactChildren;\n  getAsyncData: (param: {}) => void;\n}\n\nclass StowageDetail extends React.PureComponent<IStowageDetailProps> {\n  state = {\n    locationNum: 0,\n    notLocationNum: 0,\n  };\n  private mapElm: HTMLElement;\n  private map: {};\n  /**\n   * componentDidMount\n   */\n  public componentDidMount() {\n    const { searchParams } = this.props;\n\n    if (searchParams && searchParams.partGroupId) {\n      this.props.getAsyncData({\n        partGroupId: parseInt(searchParams.partGroupId),\n        coordinateType: 'BD09',\n      });\n    }\n  }\n  public render() {\n    const { data } = this.props;\n    const dataJs = data ? data.toJS() : {};\n\n    return (\n      <div className={styles.StowageDetail}>\n        <Card\n          style={{\n            marginBottom: '12px',\n          }}\n          key=\"s-1\"\n        >\n          <DescriptionList size=\"large\" title=\"基本信息\">\n            <Description term=\"配载单名称\" key=\"name\">\n              {dataJs.name || emptyRecord}\n            </Description>\n            <Description term=\"配载ID\" key=\"utmsPartGroupId\">\n              {dataJs.utmsPartGroupId || emptyRecord}\n            </Description>\n            <Description term=\"仓库名称\" key=\"warehouseName\">\n              {dataJs.warehouseName || emptyRecord}\n            </Description>\n            <Description term=\"订单数\" key=\"orderCount\">\n              {dataJs.orderCount || emptyRecord}\n            </Description>\n            <Description term=\"体积(方)\" key=\"volume\">\n              {dataJs.volume || emptyRecord}\n            </Description>\n            <Description term=\"重量(千克)\" key=\"weight\">\n              {dataJs.weight || emptyRecord}\n            </Description>\n            <Description term=\"件数(件)\" key=\"quantity\">\n              {dataJs.quantity || emptyRecord}\n            </Description>\n            <Description term=\"制单人\" key=\"realName\">\n              {dataJs.realName || emptyRecord}\n            </Description>\n            <Description term=\"生成时间\" key=\"gmtCreate\">\n              {dataJs.gmtCreate || emptyRecord}\n            </Description>\n          </DescriptionList>\n        </Card>\n        <Card key=\"s-2\">\n          {/* <Divider /> */}\n          <DescriptionList\n            size=\"large\"\n            title={this.tabTitle()}\n            style={{ margin: '0 16px 32px' }}\n          >\n            <Tabs onChange={this.switchTabHandle}>\n              <TabPane key=\"1\" tab=\"列表展示\">\n                {this.getListRender()}\n              </TabPane>\n              <TabPane key=\"2\" tab=\"地图展示\">\n                {this.getMapRander()}\n              </TabPane>\n            </Tabs>\n          </DescriptionList>\n        </Card>\n      </div>\n    );\n  }\n  private tabTitle() {\n    const { data } = this.props;\n\n    return (\n      <>\n        订单明细\n        <Download\n          btnType=\"primary\"\n          className=\"pull-right\"\n          url={'/ehuodiGateway/utmsTrade/utmsPartOrder/exportPartOrderList'}\n          params={{\n            partGroupId: data.get('utmsPartGroupId'),\n          }}\n        >\n          导出\n        </Download>\n      </>\n    );\n  }\n  private switchTabHandle = activeKey => {\n    if (activeKey === '2' && !this.map) {\n      setTimeout(() => {\n        this.map = new BMap.Map(this.mapElm);\n        this.map.centerAndZoom(new BMap.Point(116.404, 39.915), 11);\n        this.map.enableScrollWheelZoom(true);\n        this.drawPoint();\n      }, 1000);\n    }\n  };\n\n  private drawPoint() {\n    const data = this.props.data.toJS();\n    const pointArray = [];\n    const pIcon = new BMap.Icon(\n      'https://image.tf56.com/dfs/group1/M00/34/22/CiFBClmyXUOAEh-OAAARqg9D7FA643.png',\n      new BMap.Size(20, 20),\n      { imageSize: { width: 20, height: 20 } },\n    );\n\n    if (data.partOrders) {\n      let locationNum = 0;\n      let notLocationNum = data.partOrders.length;\n      data.partOrders.map((item, index) => {\n        if (item.longitude) {\n          ++locationNum;\n\n          const point = new BMap.Point(item.longitude, item.latitude);\n\n          const marker = new BMap.Marker(point, {\n            icon: pIcon,\n          });\n\n          const label = new BMap.Label(`${index + 1}`);\n          label.setStyle({\n            color: '#ffffff',\n            backgroundColor: 'rgb(47, 138, 241)',\n            border: '1px solid rgb(175, 220, 240)',\n            width: '20px',\n            height: '20px',\n            lineHeight: '18px',\n            textAlign: 'center',\n            borderRadius: '100%',\n          });\n\n          marker.setLabel(label);\n\n          pointArray.push(point);\n\n          this.map.addOverlay(marker);\n        }\n      });\n      notLocationNum -= locationNum;\n      const polygon = new BMap.Polyline(pointArray, {\n        strokeColor: 'blue',\n        strokeWeight: 2,\n        strokeOpacity: 0.5,\n      });\n\n      if (data.warehouseLongitude && data.warehouseLatitude) {\n        const storePoint = new BMap.Point(\n          data.warehouseLongitude,\n          data.warehouseLatitude,\n        );\n        pointArray.push(storePoint);\n        const store = new BMap.Marker(storePoint, {\n          icon: new BMap.Icon(\n            'https://image.tf56.com/dfs/group1/M00/69/94/CiFBCVu8SROAdNC_AAAD_T3ZZRs656.png',\n            new BMap.Size(20, 30),\n            { imageSize: { width: 20, height: 30 } },\n          ),\n        });\n\n        this.map.addOverlay(store);\n      }\n\n      this.map.addOverlay(polygon);\n      this.map.setViewport(pointArray);\n\n      this.setState({\n        locationNum,\n        notLocationNum,\n      });\n    }\n  }\n  private getListRender() {\n    const { data } = this.props;\n    const dataJs = data.toJS();\n\n    const dataSource = dataJs ? dataJs.partOrders : [];\n\n    return (\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n        rowKey=\"orderNumber\"\n      />\n    );\n  }\n  private getMapRander() {\n    const { locationNum, notLocationNum } = this.state;\n    return (\n      <div className={styles.MapWrap}>\n        <div ref={node => (this.mapElm = node)} style={{ height: '400px' }} />\n        <p className={styles.locationed}>已定位 {locationNum}</p>\n        <p className={styles.location}>未定位 {notLocationNum}</p>\n      </div>\n    );\n  }\n}\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getAsyncData: param => dispatch(actions.getAsyncData(param)),\n  });\n\n  const selectState = state => state.get(routeId);\n\n  const mapStateToProps = createStructuredSelector({\n    data: makeSelectData(selectState),\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(withConnect)(StowageDetail);\n};\n","/**\n * StowageDetail selectors\n * @author hefan\n * @date 2018/9/15 下午4:21:48\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionList\":\"_1BhCG\",\"title\":\"_382YV\",\"term\":\"_3nKyJ\",\"detail\":\"zFQbP\",\"small\":\"_1MhPE\",\"large\":\"_1T4lQ\",\"vertical\":\"_3ixOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StowageDetail\":\"_3jyot\",\"MapWrap\":\"_1FnqJ\",\"locationed\":\"_2rax9\",\"location\":\"_1qBwB\"};"],"sourceRoot":""}