{"version":3,"sources":["webpack:///./src/modules/module.fixpath.detail/index.tsx","webpack:///./src/modules/module.fixpath.detail/selectors.ts","webpack:///./src/modules/module.fixpath.detail/index.module.less"],"names":["module_fixpath_detail_FixpathDetail","react","this","getDetail","className","index_module_default","a","FixpathDetail","renderBasicInfo","renderGoodsInfo","renderServiceInfo","renderCostInfo","searchParams","props","id","data","name","get","row","gutter","FormDetailCard","key","col","label","value","GLOBAL","emptyRecord","_this","detail","card","title","FixpathDetail__CardInfo","Object","immutable_esfrom_dll_reference_dll","map","item","renderAddress","toArray","__webpack_exports__","_ref","routeId","connectModel","actions","selectState","currentState","state","mapStateToProps","libfrom_dll_reference_dll","error","loading","selectors_makeSelectLoading","selectors_makeSelectData","mapDispatchToProps","dispatch","option","module","exports"],"mappings":"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","file":"fixpath-detail.927fd41f.chunk.js","sourcesContent":["/**\n * FixpathDetail Component\n * @author lhf\n * @date 2018-9-25 16:19:00\n */\nimport { List, Map } from 'immutable';\nimport * as React from 'react';\nimport { createStructuredSelector } from 'reselect';\n\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport Row from 'antd/es/row';\nimport {\n  FormDetailCard,\n  FormDetailField,\n  formLayoutCols2,\n  formLayoutCols3,\n  gutter,\n} from 'components/FormDetailCard';\nimport GLOBAL from 'utils/GLOBAL';\nimport styles from './index.module.less';\nimport {\n  makeSelectData,\n  makeSelectError,\n  makeSelectLoading,\n} from './selectors';\n\nexport interface IFixpathDetailProps {\n  children: React.ReactChildren;\n  detail: Map<string, any>;\n  searchParams: {\n    id: number;\n  };\n  getDetail: (options?: number) => any;\n}\n\nclass FixpathDetail extends React.PureComponent<IFixpathDetailProps> {\n  public componentDidMount() {\n    this.getDetail();\n  }\n  public render() {\n    return (\n      <div className={styles.FixpathDetail}>\n        {this.renderBasicInfo()}\n        {this.renderGoodsInfo()}\n        {this.renderServiceInfo()}\n        {this.renderCostInfo()}\n      </div>\n    );\n  }\n\n  private getDetail() {\n    const { searchParams } = this.props;\n    if (searchParams.id) {\n      this.props.getDetail(searchParams.id);\n    }\n  }\n\n  // 渲染装卸地\n  private renderAddress(data) {\n    const name =\n      data.get('loadType') === 1 || data.get('loadType') === '1'\n        ? '卸货地'\n        : '装货地';\n    return (\n      <Row gutter={gutter} key={data.get('id')}>\n        <Col {...formLayoutCols3}>\n          <FormDetailField label={name} value={data.get('pointAddress')} />\n        </Col>\n        <Col {...formLayoutCols3}>\n          <FormDetailField\n            label=\"联系人\"\n            value={data.get('contact') || GLOBAL.emptyRecord}\n          />\n        </Col>\n        <Col {...formLayoutCols3}>\n          <FormDetailField\n            label=\"联系电话\"\n            value={data.get('phone') || GLOBAL.emptyRecord}\n          />\n        </Col>\n      </Row>\n    );\n  }\n\n  // 线路信息\n  private renderBasicInfo() {\n    const { detail } = this.props;\n    return (\n      <Card title=\"线路信息\" className={styles.FixpathDetail__CardInfo}>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"客户名称\"\n              value={detail.get('customerName')}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField label=\"线路名称\" value={detail.get('routeName')} />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"所需车型\"\n              value={\n                detail.get('carLong')\n                  ? detail.get('carLong') / 1000 +\n                    '米' +\n                    detail.get('carStruct')\n                  : detail.get('carStruct')\n              }\n            />\n          </Col>\n        </Row>\n        {detail\n          .get('routeWayPoints', List())\n          .map(item => this.renderAddress(item))\n          .toArray()}\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"预计运输距离\"\n              value={detail.get('navigationDistance') || GLOBAL.emptyRecord}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"预计运输时间\"\n              value={detail.get('navigationTimecost') || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n\n  // 货物信息\n  private renderGoodsInfo() {\n    const { detail } = this.props;\n    return (\n      <Card title=\"货物信息\" className={styles.FixpathDetail__CardInfo}>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField label=\"货物名称\" value={detail.get('goodsName')} />\n          </Col>\n        </Row>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"重量(千克)\"\n              value={detail.get('goodsWeight')}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"体积(方)\"\n              value={detail.get('goodsVolume')}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"件数(件)\"\n              value={detail.get('goodsNumber')}\n            />\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n\n  // 增值服务信息\n  private renderServiceInfo() {\n    const { detail } = this.props;\n    return (\n      <Card title=\"增值服务\" className={styles.FixpathDetail__CardInfo}>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"回单\"\n              value={detail.get('isReceipt') ? '是' : '否'}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"代收(元)\"\n              value={detail.get('collictionAmount') || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n  // 货物信息\n  private renderCostInfo() {\n    const { detail } = this.props;\n    return (\n      <Card title=\"运费信息\" className={styles.FixpathDetail__CardInfo}>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"客户运费(元)\"\n              value={detail.get('customerFreight') || GLOBAL.emptyRecord}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"司机运费(元)\"\n              value={detail.get('driverFreight') || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n}\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId);\n    return {\n      mapStateToProps: createStructuredSelector({\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n        detail: makeSelectData(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getDetail: option => dispatch(actions.getDetail(option)),\n      }),\n    };\n  })(FixpathDetail);\n};\n","/**\n * FixpathDetail selectors\n * @author lhf\n * @date 2018-9-25 16:19:00\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FixpathDetail__CardInfo\":\"_2dEc8\"};"],"sourceRoot":""}