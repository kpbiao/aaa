{"version":3,"sources":["webpack:///./src/modules/module.waybill/components/MarkDelegateModal/service.ts","webpack:///./src/modules/module.waybill/components/MarkDelegateModal/MarkDelegateModal.tsx","webpack:///./src/modules/module.waybill/components/MarkReceiptModal/service.ts","webpack:///./src/modules/module.waybill/components/MarkReceiptModal/MarkReceiptModal.tsx","webpack:///./src/modules/module.waybill/index.tsx","webpack:///./src/modules/module.waybill/selectors.ts","webpack:///./src/modules/module.waybill/index.module.less"],"names":["service_getMarkDelegate","data","Object","request","method","url","qs_libfrom_dll_reference_dll_default","a","stringify","useMock","then","res","FormItem","es_form","Item","MarkDelegateModal_MarkDelegate","es_select","Option","MarkDelegate","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","selectedAddress","handleSelectChange","value","console","log","handleCancel","setState","visible","onCancel","handleOk","e","preventDefault","form","validateFields","err","values","save","handleClose","resetFields","_ref","regeneratorRuntime","mark","_callee","options","params","_data","wrap","_context","prev","next","confirmLoading","_objectSpread","tradeNumber","sent","result","message","success","onOk","error","msg","t0","stop","_x","apply","arguments","react","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","modal","title","centered","maskClosable","afterClose","_extends","label","rules","required","validator","checkString","max","min","decimal","input","placeholder","TextArea","maxLength","autosize","minRows","maxRows","nextProps","MarkDelegateModal_MarkDelegateModal","create","service_getMarkReceipt","MarkReceiptModal_FormItem","MarkReceiptModal_Option","MarkReceiptModal_MarkReceipt","MarkReceipt","MarkReceiptModal_classCallCheck","MarkReceiptModal_possibleConstructorReturn","MarkReceiptModal_getPrototypeOf","MarkReceiptModal_objectSpread","MarkReceiptModal_extends","onChange","style","width","MarkReceiptModal_MarkReceiptModal","RangePicker","date_picker","module_waybill_Option","module_waybill_FormItem","colProps","sm","xs","md","lg","xl","module_waybill_Waybill","Waybill","module_waybill_classCallCheck","module_waybill_possibleConstructorReturn","module_waybill_getPrototypeOf","getSubmitValue","fieldsValue","creatdate","usecardate","tradeNumberKey","driverName","carPlateNumber","status","createDateStart","length","format","createDateEnd","useCarDateStart","useCarDateEnd","handleSubmit","current","skipCount","doSearch","assign","pageSize","handleReset","handleCancelReceipt","receiptModalvisible","handleReceiptSuccess","showModalReceipt","record","currentItem","handleVisibleChange","showModalDelegate","delegeteModalvisible","handleCancelDelegate","handleDelegateSuccess","renderActions","text","className","index_module_default","WaybillList__actions","OptionButtons","statusTXT","driverMobilenumber","Link","to","concat","receiptStatus","onClick","delegateStatus","markDelegateStatus","popconfirm","onConfirm","confirmRecord","handleSearch","pageData","postData","service","getStatistics","remark","WaybillList__Form","layout","onSubmit","row","type","gutter","col","initialValue","WaybillList__FormAction","es_button","htmlType","statistics","WaybillWrap__Top","total","pendingScheduling","waitSign","waitLoad","waitUnload","finished","cancel","_this2","_this$props","dataCount","list","loading","tableProps","columns","dataIndex","fixed","render","key","dataSource","map","d","i","receiptStatusTXT","get","GLOBAL","emptyRecord","createDate","useCarDate","goodsName","goodsWeight","goodsVolume","goodsNumber","driverCarplatenumber","driverMobilenumberTXT","delegateamount","toArray","pagination","index","onShowSizeChange","scroll","x","MyTable","_this$state","WaybillWrap","renderStatistics","WaybillList","renderFilterForm","renderList","__webpack_exports__","_ref2","routeId","actions","selectState","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectError","selectors_makeSelectLoading","selectors_makeSelectStatistics","selectors_makeSelectData","selectors_makeSelectDataCount","withConnect","es","dispatch","cancleTrade","markReceipt","markDelegate","getList","updateFilter","redux","module","exports","WaybillList__RightAction"],"mappings":"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","file":"waybill.c34568ba.chunk.js","sourcesContent":["/**\n * Auth Service\n */\nimport qs from 'qs';\nimport request, { mocker } from 'utils/request';\nimport { USE_MOCK } from '../../../../CONFIG';\n\n// API list\nconst API_MARK_DELEGATE = '/ehuodiGateway/utmsTrade/utmsTrade/markDelegate';\n\nif (process.env.NODE_ENV === 'development') {\n  mocker\n    .on('post', API_MARK_DELEGATE)\n    .reply(() =>\n      import('./mock/delegate').then(exports => [200, exports.default]),\n    );\n}\n\n/**\n * 保存\n */\nexport const getMarkDelegate = data => {\n  return request(\n    {\n      method: 'post',\n      url: API_MARK_DELEGATE,\n      data: qs.stringify(data),\n    },\n    {\n      useMock: false,\n    },\n  ).then(res => res);\n};\n","/**\n * DateTimePicker Component\n * @author yan\n * @date 2018/9/12 下午2:41:24\n */\nimport { Form, Input, message, Modal, Select } from 'antd';\n// const { TextArea } = Input;\nimport TextArea from 'components/TextArea';\nimport * as React from 'react';\nimport { checkNumberForm } from 'utils/checkString';\nimport { getMarkDelegate } from './service';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\ninterface IProps {\n  visible: boolean;\n  onCancel: () => void;\n  onOk: (e: any) => void;\n  form: any;\n  data: object;\n}\n\ninterface IState {\n  visible: boolean;\n  confirmLoading: boolean;\n  data?: object;\n}\n\nclass MarkDelegate extends React.PureComponent<IProps> {\n  state: IState;\n  selectedAddress: object;\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmLoading: false,\n      visible: props.visible,\n    };\n  }\n  handleSelectChange = value => {\n    console.log(value);\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n    this.props.onCancel();\n  };\n  handleOk = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.save(values);\n      }\n    });\n  };\n  handleClose = () => {\n    this.props.form.resetFields();\n  };\n  public render() {\n    // const props = { ...this.props };\n    // const state = this.state;\n    // props.visible = state.visible;\n    // props.onCancel = this.hideModal;\n    // props.onOk = this.handleSubmit;\n\n    const formItemLayout = {\n      labelCol: {\n        span: 5,\n      },\n      wrapperCol: { span: 16 },\n    };\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Modal\n        title=\"标记代收\"\n        centered={true}\n        maskClosable={false}\n        confirmLoading={this.state.confirmLoading}\n        visible={this.state.visible}\n        onCancel={this.handleCancel}\n        onOk={this.handleOk}\n        afterClose={this.handleClose}\n      >\n        <div>\n          <FormItem {...formItemLayout} label=\"回款金额\">\n            {getFieldDecorator('amount', {\n              rules: [\n                {\n                  required: true,\n                  message: '请填写回款金额',\n                },\n                {\n                  validator: checkNumberForm('请输入0-100000，支持两位小数', {\n                    max: 100000,\n                    min: 0,\n                    decimal: 2,\n                  }),\n                },\n              ],\n            })(<Input placeholder={'请输入回款金额'} />)}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"备注\">\n            {getFieldDecorator('remark', {\n              rules: [{ max: 100, message: '字数限制100' }],\n            })(\n              <TextArea\n                maxLength={100}\n                placeholder=\"请输入备注\"\n                autosize={{ minRows: 7, maxRows: 10 }}\n              />,\n            )}\n          </FormItem>\n        </div>\n      </Modal>\n    );\n  }\n\n  public componentWillReceiveProps(nextProps) {\n    this.setState({\n      visible: nextProps.visible,\n    });\n  }\n  private save = async values => {\n    this.setState({\n      confirmLoading: true,\n    });\n    const options = { ...values };\n    const params = {\n      tradeNumber: this.props.data.tradeNumber,\n      ...options,\n    };\n\n    try {\n      const data = await getMarkDelegate(params);\n      if (data.result === 'success') {\n        message.success('标记代收成功');\n        if (this.props.onOk) {\n          this.props.onOk({ ...this.props.data, ...options });\n        }\n      } else {\n        message.error(data.result.msg || '标记代收失败');\n      }\n    } catch (err) {\n      message.error(err.msg || '标记代收失败');\n    }\n\n    this.setState({\n      confirmLoading: false,\n    });\n  };\n}\nconst MarkDelegateModal = Form.create()(MarkDelegate);\nexport default MarkDelegateModal;\n","/**\n * Auth Service\n */\nimport qs from 'qs';\nimport request, { mocker } from 'utils/request';\nimport { USE_MOCK } from '../../../../CONFIG';\n\n// API list\nconst API_MARK_RECEIPT = '/ehuodiGateway/utmsTrade/utmsTrade/markReceipt';\n\nif (process.env.NODE_ENV === 'development') {\n  mocker\n    .on('post', API_MARK_RECEIPT)\n    .reply(() =>\n      import('./mock/receipt').then(exports => [200, exports.default]),\n    );\n}\n\n/**\n * 保存\n */\nexport const getMarkReceipt = data => {\n  return request(\n    {\n      method: 'post',\n      url: API_MARK_RECEIPT,\n      data: qs.stringify(data),\n    },\n    {\n      useMock: false,\n    },\n  ).then(res => res);\n};\n","/**\n * DateTimePicker Component\n * @author yan\n * @date 2018/9/12 下午2:41:24\n */\nimport { Form, Input, message, Modal, Select } from 'antd';\nimport TextArea from 'components/TextArea';\nimport * as React from 'react';\nimport { getMarkReceipt } from './service';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\ninterface IProps {\n  visible: boolean;\n  onCancel: () => void;\n  onOk: (e: any) => void;\n  form: any;\n  data: object;\n}\n\ninterface IState {\n  visible: boolean;\n  confirmLoading: boolean;\n  data?: object;\n}\n\nclass MarkReceipt extends React.PureComponent<IProps> {\n  state: IState;\n  selectedAddress: object;\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmLoading: false,\n      visible: props.visible,\n    };\n  }\n  handleSelectChange = value => {\n    console.log(value);\n  };\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n    this.props.onCancel();\n  };\n  handleOk = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.save(values);\n      }\n    });\n  };\n  handleClose = () => {\n    this.props.form.resetFields();\n  };\n  public render() {\n    const formItemLayout = {\n      labelCol: {\n        span: 5,\n      },\n      wrapperCol: { span: 16 },\n    };\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Modal\n        title=\"标记回单\"\n        centered={true}\n        maskClosable={false}\n        confirmLoading={this.state.confirmLoading}\n        visible={this.state.visible}\n        onCancel={this.handleCancel}\n        onOk={this.handleOk}\n        afterClose={this.handleClose}\n      >\n        <div>\n          <FormItem {...formItemLayout} label=\"回单状态\">\n            {getFieldDecorator('status', {\n              rules: [\n                {\n                  required: true,\n                  message: '请选择回单状态',\n                },\n              ],\n            })(\n              <Select\n                placeholder=\"请选择回单状态\"\n                onChange={this.handleSelectChange}\n                style={{ width: '100%' }}\n              >\n                <Option value=\"2\">部分交回</Option>\n                <Option value=\"3\">全部交回</Option>\n                <Option value=\"4\">回单丢失</Option>\n              </Select>,\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"备注\">\n            {getFieldDecorator('remark', {\n              rules: [{ max: 100, message: '字数限制100' }],\n            })(\n              <TextArea\n                maxLength={100}\n                placeholder=\"请输入备注\"\n                autosize={{ minRows: 7, maxRows: 10 }}\n              />,\n            )}\n          </FormItem>\n        </div>\n      </Modal>\n    );\n  }\n\n  public componentWillReceiveProps(nextProps) {\n    this.setState({\n      visible: nextProps.visible,\n    });\n  }\n  private save = async values => {\n    this.setState({\n      confirmLoading: true,\n    });\n    const options = { ...values };\n    const params = {\n      tradeNumber: this.props.data.tradeNumber,\n      ...options,\n    };\n    try {\n      const data = await getMarkReceipt(params);\n\n      if (data.result === 'success') {\n        message.success('标记回单成功');\n        if (this.props.onOk) {\n          this.props.onOk({ ...this.props.data, ...options });\n        }\n      } else {\n        message.error(data.result.msg || '标记回单失败');\n      }\n    } catch (err) {\n      message.error(err.msg || '标记回单失败');\n    }\n\n    this.setState({\n      confirmLoading: false,\n    });\n  };\n}\nconst MarkReceiptModal = Form.create()(MarkReceipt);\nexport default MarkReceiptModal;\n","/**\n * Waybill Component\n * @author yanw\n * @date 2018-9-14 16:12:09\n */\nimport Button from 'antd/es/button';\nimport Col from 'antd/es/col';\nimport DatePicker from 'antd/es/date-picker';\nimport Form from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Input from 'antd/es/input';\nimport message from 'antd/es/message';\nimport Popconfirm from 'antd/es/popconfirm';\nimport Row from 'antd/es/row';\nimport Select from 'antd/es/select';\nimport Table from 'components/MyTable';\nimport { OptionButtons } from 'components/OptionButtons';\nimport { List, Map } from 'immutable';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport GLOBAL from 'utils/GLOBAL';\nimport MarkDelegateModal from './components/MarkDelegateModal';\nimport MarkReceiptModal from './components/MarkReceiptModal';\n\nconst { RangePicker } = DatePicker;\nconst Option = Select.Option;\n\nimport { cancleTradeService } from './service';\n\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectError,\n  makeSelectLoading,\n  makeSelectStatistics,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nconst FormItem = Form.Item;\nconst gutter = 16;\nconst colProps = {\n  sm: 24,\n  xs: 24,\n  md: 12,\n  lg: 12,\n  xl: 6,\n};\n\nexport interface IWaybillProps {\n  children: React.ReactChildren;\n  dataCount: number;\n  // status: number; // 回单状态\n  // remark: string; // 回单备注\n  // amount: string; // 代收金额\n  // amountRemark: string; // 代收备注\n  form: WrappedFormUtils;\n  list: List<Map<string, any>>;\n  loading: boolean;\n  statistics: any;\n  getStatistics: () => any;\n  cancleTrade: (params?: object) => any;\n  // markModalVisible: boolean;\n  // currentItem?: object;\n  markReceipt: (params?: object) => any;\n  markDelegate: (params?: object) => any;\n  doSearch: (options?: object) => any;\n  updateFilter: (data?: object) => any;\n}\n\ninterface IState {\n  receiptModalvisible: boolean;\n  fieldsValue: object;\n  currentItem: object;\n  remark: string;\n  record: object;\n  delegeteModalvisible: boolean;\n  current: number;\n  skipCount: number;\n  pageSize: number;\n}\nclass Waybill extends React.PureComponent<IWaybillProps> {\n  state: IState;\n  constructor(props) {\n    super(props);\n    this.state = {\n      fieldsValue: {},\n      current: 1,\n      skipCount: 0,\n      pageSize: 15,\n      remark: '', // 回单备注\n      record: {}, // 操作行\n      currentItem: {},\n      // popVisible: false, // 标记弹窗\n      receiptModalvisible: false, // 标记回单弹窗\n      delegeteModalvisible: false, // 标记代收弹窗\n    };\n  }\n  componentDidMount() {\n    this.props.doSearch({\n      skipCount: this.state.skipCount,\n      pageSize: this.state.pageSize,\n    });\n    this.props.getStatistics();\n  }\n\n  getSubmitValue = fieldsValue => {\n    const {\n      creatdate,\n      usecardate,\n      tradeNumberKey,\n      driverName,\n      carPlateNumber,\n      status,\n    } = fieldsValue;\n\n    const values = {\n      createDateStart:\n        creatdate && creatdate.length\n          ? creatdate[0].format('YYYY-MM-DD') + ' 00:00:00'\n          : '',\n      createDateEnd:\n        creatdate && creatdate.length\n          ? creatdate[1].format('YYYY-MM-DD') + ' 23:59:59'\n          : '',\n      useCarDateStart:\n        usecardate && usecardate.length\n          ? usecardate[0].format('YYYY-MM-DD') + ' 00:00:00'\n          : '',\n      useCarDateEnd:\n        usecardate && usecardate.length\n          ? usecardate[1].format('YYYY-MM-DD') + ' 23:59:59'\n          : '',\n      tradeNumberKey,\n      driverName,\n      carPlateNumber,\n      status,\n    };\n    return values;\n  };\n  public handleSubmit = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState(\n      {\n        current: 1,\n        skipCount: 0,\n      },\n      () => {\n        this.props.form.validateFields((err, value) => {\n          const values = this.getSubmitValue(value);\n          this.setState(\n            {\n              fieldsValue: values,\n            },\n            () => {\n              this.props.doSearch(\n                Object.assign(\n                  {\n                    current: 1,\n                    skipCount: 0,\n                    pageSize: this.state.pageSize,\n                  },\n                  values,\n                ),\n              );\n            },\n          );\n        });\n      },\n    );\n  };\n  public handleReset = () => {\n    this.props.form.resetFields();\n    // this.handleSubmit();\n    this.setState(\n      {\n        skipCount: 0,\n        current: 1,\n        fieldsValue: {},\n      },\n      () => {\n        this.props.doSearch({\n          skipCount: this.state.skipCount,\n          pageSize: this.state.pageSize,\n          current: this.state.current,\n        });\n      },\n    );\n  };\n  /**\n   * 标记回单弹窗\n   */\n  handleCancelReceipt = () => {\n    this.setState({\n      receiptModalvisible: false,\n    });\n  };\n  handleReceiptSuccess = () => {\n    this.handleCancelReceipt();\n    this.handleSubmit();\n  };\n  showModalReceipt = record => {\n    this.setState({\n      receiptModalvisible: true,\n      currentItem: record,\n      // popVisible: false,\n    });\n  };\n  handleVisibleChange = visible => {\n    // this.setState({\n    //   popVisible: visible,\n    // });\n  };\n  /**\n   * 标记代收\n   */\n  showModalDelegate = record => {\n    this.setState({\n      delegeteModalvisible: true,\n      currentItem: record,\n      // popVisible: false,\n    });\n  };\n  handleCancelDelegate = () => {\n    this.setState({\n      delegeteModalvisible: false,\n    });\n  };\n  handleDelegateSuccess = () => {\n    this.handleCancelDelegate();\n    this.handleSubmit();\n  };\n  public renderActions = (text, record) => {\n    return (\n      <div className={styles.WaybillList__actions}>\n        <OptionButtons>\n          {record.statusTXT === '待签到' ||\n          record.statusTXT === '待装货' ||\n          record.statusTXT === '待卸货' ||\n          record.statusTXT === '已完成' ||\n          (record.statusTXT === '已取消' &&\n            record.driverMobilenumber !== null &&\n            record.driverMobilenumber !== '') ? (\n            <span>\n              <Link to={`/waybill/map?tradeNumber=${record.tradeNumber}`}>\n                查看轨迹\n              </Link>\n            </span>\n          ) : null}\n\n          {/* <Popover\n            placement=\"bottom\"\n            content={content}\n            title=\"\"\n            trigger=\"click\"\n            // visible={this.state.popVisible}\n            // onVisibleChange={this.handleVisibleChange}\n          >\n            <a href=\"javascript;\">更多</a>\n          </Popover> */}\n          {(record.status === 5 || record.status === 6) &&\n          record.receiptStatus === 1 ? (\n            <span onClick={e => this.showModalReceipt(record)}>\n              <a>标记回单</a>\n            </span>\n          ) : null}\n          {(record.status === 5 || record.status === 6) &&\n          record.delegateStatus !== 0 &&\n          record.markDelegateStatus === 0 ? (\n            <span onClick={e => this.showModalDelegate(record)}>\n              <a>标记代收</a>\n            </span>\n          ) : null}\n          {record.statusTXT === '待调度' ||\n          record.statusTXT === '待接单' ||\n          record.statusTXT === '待签到' ||\n          record.statusTXT === '待装货' ||\n          record.statusTXT === '待卸货' ||\n          record.statusTXT === '待改派' ? (\n            <Popconfirm\n              title=\"确认取消\"\n              onConfirm={() => this.confirmRecord(record)}\n            >\n              <span>\n                <a>取消</a>\n              </span>\n            </Popconfirm>\n          ) : null}\n        </OptionButtons>\n      </div>\n    );\n  };\n  public renderFilterForm() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form\n        className={styles.WaybillList__Form}\n        layout=\"inline\"\n        onSubmit={this.handleSubmit}\n      >\n        <Row type=\"flex\" gutter={gutter}>\n          <Col {...colProps}>\n            <FormItem label=\"发布时间\">\n              {getFieldDecorator('creatdate')(\n                <RangePicker format=\"YYYY-MM-DD\" style={{ width: '100%' }} />,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...colProps}>\n            <FormItem label=\"用车时间\">\n              {getFieldDecorator('usecardate')(\n                <RangePicker format=\"YYYY-MM-DD\" style={{ width: '100%' }} />,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...colProps}>\n            <FormItem label=\"运单号\">\n              {getFieldDecorator('tradeNumberKey')(<Input />)}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row type=\"flex\" gutter={gutter}>\n          <Col {...colProps}>\n            <FormItem label=\"司机姓名\">\n              {getFieldDecorator('driverName')(<Input />)}\n            </FormItem>\n          </Col>\n          <Col {...colProps}>\n            <FormItem label=\"车牌号\">\n              {getFieldDecorator('carPlateNumber')(<Input />)}\n            </FormItem>\n          </Col>\n          <Col {...colProps}>\n            <FormItem label=\"状态\">\n              {getFieldDecorator('status', { initialValue: '' })(\n                <Select\n                  style={{\n                    width: '100%',\n                  }}\n                >\n                  <Option value=\"\">全部</Option>\n                  <Option value=\"0\">待调度</Option>\n                  <Option value=\"1\">待接单</Option>\n                  <Option value=\"2\">待签到</Option>\n                  <Option value=\"3\">待装货</Option>\n                  <Option value=\"4\">待卸货</Option>\n                  <Option value=\"5\">已完成</Option>\n                  <Option value=\"6\">已取消</Option>\n                  <Option value=\"7\">待改派</Option>\n                </Select>,\n              )}\n            </FormItem>\n          </Col>\n          <Col {...colProps}>\n            <FormItem className={styles.WaybillList__FormAction}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                查 询\n              </Button>\n              <Button onClick={this.handleReset}>重 置</Button>\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n  public renderStatistics() {\n    const { statistics } = this.props;\n    return (\n      <div className={styles.WaybillWrap__Top}>\n        <div>\n          <h3>总运单</h3>\n          <h4>{statistics.total || '- -'}</h4>\n        </div>\n        <div>\n          <h3>待调度</h3>\n          <h4>{statistics.pendingScheduling || '- -'}</h4>\n        </div>\n        <div>\n          <h3>待签到</h3>\n          <h4>{statistics.waitSign || '- -'}</h4>\n        </div>\n        <div>\n          <h3>待装货</h3>\n          <h4>{statistics.waitLoad || '- -'}</h4>\n        </div>\n        <div>\n          <h3>待卸货</h3>\n          <h4>{statistics.waitUnload || '- -'}</h4>\n        </div>\n        <div>\n          <h3>已完成</h3>\n          <h4>{statistics.finished || '- -'}</h4>\n        </div>\n        <div>\n          <h3>已取消</h3>\n          <h4>{statistics.cancel || '- -'}</h4>\n        </div>\n      </div>\n    );\n  }\n  handleSearch = pageData => {\n    const { doSearch } = this.props;\n    // const values = this.props.form.getFieldsValue();\n    this.setState(\n      {\n        pageSize: pageData.pageSize,\n        skipCount:\n          pageData.current === 0\n            ? 0\n            : pageData.pageSize * (pageData.current - 1),\n        current: pageData.current,\n      },\n      () => {\n        const postData = Object.assign(this.state.fieldsValue, {\n          pageSize: this.state.pageSize,\n          skipCount: this.state.skipCount,\n          current: this.state.current,\n        });\n        doSearch(postData);\n      },\n    );\n  };\n  public renderList() {\n    const { dataCount, doSearch, list, loading } = this.props;\n    const tableProps = {\n      columns: [\n        {\n          title: '运单号',\n          dataIndex: 'tradeNumber',\n          fixed: 'left',\n          width: 240,\n          render: text => (\n            <Link to={`/waybill/detail?tradeNumber=${text}`}>{text}</Link>\n          ),\n        },\n        {\n          title: '发布时间',\n          width: 250,\n          dataIndex: 'createDate',\n        },\n        {\n          title: '用车时间',\n          width: 250,\n          dataIndex: 'useCarDate',\n        },\n        {\n          title: '货物名称',\n          width: 150,\n          dataIndex: 'goodsName',\n        },\n        {\n          title: '重量（千克）',\n          width: 150,\n          dataIndex: 'goodsWeight',\n        },\n        {\n          title: '体积（方）',\n          width: 150,\n          dataIndex: 'goodsVolume',\n        },\n        {\n          title: '件数（件）',\n          width: 150,\n          dataIndex: 'goodsNumber',\n        },\n        {\n          title: '司机姓名',\n          width: 150,\n          dataIndex: 'driverName',\n        },\n        {\n          title: '车牌',\n          width: 150,\n          dataIndex: 'driverCarplatenumber',\n        },\n        {\n          title: '手机号',\n          width: 250,\n          dataIndex: 'driverMobilenumberTXT',\n        },\n        {\n          title: '运单状态',\n          width: 150,\n          dataIndex: 'statusTXT',\n        },\n        {\n          title: '代收',\n          width: 150,\n          dataIndex: 'delegateamount',\n        },\n        {\n          title: '回单状态',\n          width: 150,\n          dataIndex: 'receiptStatusTXT',\n        },\n        {\n          title: '操作',\n          key: 'action',\n          fixed: 'right',\n          width: 160,\n          render: this.renderActions,\n        },\n      ],\n      dataSource: list\n        .map((d, i) => {\n          let statusTXT;\n          let receiptStatusTXT;\n          if (d.get('status') === 0) {\n            statusTXT = '待调度';\n          } else if (d.get('status') === 1) {\n            statusTXT = '待接单';\n          } else if (d.get('status') === 2) {\n            statusTXT = '待签到';\n          } else if (d.get('status') === 3) {\n            statusTXT = '待装货';\n          } else if (d.get('status') === 4) {\n            statusTXT = '待卸货';\n          } else if (d.get('status') === 5) {\n            statusTXT = '已完成';\n          } else if (d.get('status') === 6) {\n            statusTXT = '已取消';\n          } else if (d.get('status') === 7) {\n            statusTXT = '待改派';\n          }\n\n          if (d.get('receiptStatus') === 0) {\n            receiptStatusTXT = '无回单';\n          } else if (d.get('receiptStatus') === 1) {\n            receiptStatusTXT = '待交回';\n          } else if (d.get('receiptStatus') === 2) {\n            receiptStatusTXT = '部分交回';\n          } else if (d.get('receiptStatus') === 3) {\n            receiptStatusTXT = '全部交回';\n          } else if (d.get('receiptStatus') === 4) {\n            receiptStatusTXT = '回单丢失';\n          } else {\n            receiptStatusTXT = GLOBAL.emptyRecord;\n          }\n          return {\n            key: i,\n            tradeNumber: d.get('tradeNumber'),\n            createDate: d.get('createDate'),\n            useCarDate: d.get('useCarDate'),\n            goodsName: d.get('goodsName'),\n            goodsWeight: d.get('goodsWeight'),\n            goodsVolume: d.get('goodsVolume'),\n            goodsNumber: d.get('goodsNumber'),\n            driverName: d.get('driverName') || GLOBAL.emptyRecord,\n            driverCarplatenumber:\n              d.get('driverCarplatenumber') || GLOBAL.emptyRecord,\n            driverMobilenumber: d.get('driverMobilenumber'),\n            driverMobilenumberTXT:\n              d.get('driverMobilenumber') || GLOBAL.emptyRecord,\n            status: d.get('status'),\n            statusTXT,\n            delegateamount:\n              (d.get('actualDelegateAmount') || GLOBAL.emptyRecord) +\n              `/` +\n              (d.get('preDelegateAmount') || GLOBAL.emptyRecord),\n            receiptStatus:\n              d.get('receiptStatus') !== null ? d.get('receiptStatus') : '',\n            receiptStatusTXT,\n            delegateStatus:\n              d.get('delegateStatus') !== null ? d.get('delegateStatus') : '',\n            markDelegateStatus:\n              d.get('markDelegateStatus') !== null\n                ? d.get('markDelegateStatus')\n                : '',\n          };\n        })\n        .toArray(),\n      loading,\n      pagination: {\n        current: this.state.current,\n        total: dataCount,\n        pageSize: this.state.pageSize,\n        onChange: (pageData, index) => {\n          this.handleSearch(pageData);\n        },\n        onShowSizeChange: pageData => {\n          this.handleSearch(pageData);\n        },\n      },\n      scroll: { x: 2660 },\n    };\n    return <Table {...tableProps} />;\n  }\n  public render() {\n    const {\n      receiptModalvisible,\n      currentItem,\n      delegeteModalvisible,\n    } = this.state;\n\n    return (\n      <div className={styles.WaybillWrap}>\n        {this.renderStatistics()}\n        <div className={styles.WaybillList}>\n          {this.renderFilterForm()}\n          {this.renderList()}\n        </div>\n        <MarkReceiptModal\n          visible={receiptModalvisible}\n          onCancel={this.handleCancelReceipt}\n          onOk={this.handleReceiptSuccess}\n          data={currentItem}\n        />\n        <MarkDelegateModal\n          visible={delegeteModalvisible}\n          onCancel={this.handleCancelDelegate}\n          onOk={this.handleDelegateSuccess}\n          data={currentItem}\n        />\n      </div>\n    );\n  }\n  /**\n   * 取消运单\n   */\n  private confirmRecord = async record => {\n    const params = {\n      tradeNumber: record.tradeNumber,\n    };\n    try {\n      const data = await cancleTradeService(params);\n      if (data.result === 'success') {\n        message.success('取消运单成功');\n        this.props.getStatistics();\n        this.handleSubmit();\n      } else {\n        message.error(data.result.msg || '取消运单失败');\n      }\n    } catch (err) {\n      message.error(err.msg || '取消运单失败');\n    }\n  };\n}\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getStatistics: () => dispatch(actions.getStatistics()),\n    cancleTrade: params => dispatch(actions.cancleTrade(params)),\n    markReceipt: params => dispatch(actions.markReceipt(params)),\n    markDelegate: params => dispatch(actions.markDelegate(params)),\n    doSearch: options => dispatch(actions.getList(options)),\n    updateFilter: data => dispatch(actions.updateFilter(data)),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    statistics: makeSelectStatistics(selectState),\n    list: makeSelectData(selectState),\n    dataCount: makeSelectDataCount(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(\n    withConnect,\n    Form.create(),\n  )(Waybill);\n};\n","/**\n * waybill selectors\n * @author yanw\n * @date 2018-9-14 16:12:09\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n\nexport const makeSelectStatistics = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('statistics'),\n  );\n\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('dataCount'),\n  );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WaybillWrap__Top\":\"_3IS7H\",\"WaybillWrap\":\"_1WJMQ\",\"WaybillList\":\"_1pcm4\",\"WaybillList__Form\":\"_3gC67\",\"WaybillList__FormAction\":\"_2Mwp-\",\"WaybillList__RightAction\":\"nKvKf\"};"],"sourceRoot":""}