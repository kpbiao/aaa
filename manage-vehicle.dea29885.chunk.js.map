{"version":3,"sources":["webpack:///./src/modules/module.manage.vehicle/index.module.less","webpack:///./src/modules/module.manage.vehicle/form.tsx","webpack:///./src/modules/module.manage.vehicle/index.tsx","webpack:///./src/modules/module.manage.vehicle/selectors.ts"],"names":["module","exports","ManageVehicle","buttonRight","form","ManageVehicle__RightAction","ManageVehicle__InputNumber","FormItem","es_form","Item","Option","es_select","form_ModalForm","create","state","btnVisible","value","undefined","identificationCodeStatus","DriverData","selectDriver","Number","getDriverData","_callee","data","_driverData","isHas","regeneratorRuntime","wrap","_context","prev","next","Object","service","sent","driverData","_this","props","map","item","utmsUsersDriversId","push","setState","t0","stop","this","reset","getFieldsValue","carModelCarLong","setFieldsValue","resetFields","onCancel","seva","_callee2","_context2","title","fieldsValue","utmsVehicleId","then","result","handleSubmit","btn","react_default","a","createElement","href","className","onClick","parseInt","_ref3","_asyncToGenerator","mark","_callee3","_context3","getFieldValue","abrupt","_x2","apply","arguments","message","error","react","nextProps","visible","_this2","_this$props","confirmLoading","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","modal","centered","maskClosable","bodyStyle","height","overflow","onOk","onCreate","row","col","_extends","label","initialValue","disabled","onChange","rules","required","input","maxLength","onKeyDown","e","keyCode","CarModelCarLong","maxSelect","noHot","md","style","width","prefix","color","showSearch","optionFilterProp","key","driverName","phoneNumber","Search","module_manage_vehicle_Option","module_manage_vehicle_FormItem","confirm","module_manage_vehicle_ManageVehicle","current","skipCount","pageSize","ModalTitle","detailsVisible","detailData","identificationCode","vehicleAttributive","plateNumber","engineNumber","brandModel","energyType","vehicleLong","vehicleType","approvedLoad","vehicleRealLong","vehicleRealWidth","vehicleRealHeight","plateColor","formRef","addVehicle","handleOk","validateFields","_ref","module_manage_vehicle_asyncToGenerator","err","values","length","assign","_x","handleCancel","editVehicle","getDetailsFn","concat","deleteConfirm","details","detailsCancel","id","Fn","options","getAsyncList","selectChange","ops","handleReset","saveFormRef","_this$props$form","index_module_default","layout","type","bind","placeholder","es_button","marginLeft","marginRight","_this3","dataCount","list","loading","tableProps","rowKey","columns","dataIndex","render","text","record","GLOBAL","emptyRecord","Link","to","fixed","OptionButtons","popconfirm","placement","onConfirm","okText","cancelText","dataSource","toJS","scroll","x","pagination","total","pageData","index","onShowSizeChange","MyTable","_this$state","card","icon","theme","renderFilterForm","renderTable","wrappedComponentRef","vehicleDetails","__webpack_exports__","_ref4","routeId","connectModel","actions","selectState","currentState","get","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectLoading","selectors_makeSelectData","selectors_makeSelectDataCount","mapDispatchToProps","dispatch"],"mappings":"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","file":"manage-vehicle.dea29885.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ManageVehicle\":\"_1mb3n\",\"buttonRight\":\"_25D8U\",\"form\":\"_25b53\",\"ManageVehicle__RightAction\":\"_1NILa\",\"ManageVehicle__InputNumber\":\"_1un_h\"};","import { Col, Form, Input, message, Modal, Row, Select } from 'antd';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport CarModelCarLong from 'components/CarModelCarLong';\nimport React, { PureComponent } from 'react';\nimport { bindingDriver, getDriver, setDeleteDriver } from './service';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\ninterface IModalFormProps {\n  title: string;\n  form: WrappedFormUtils;\n  driverData: any;\n  visible: boolean;\n  confirmLoading: boolean;\n  utmsVehicleId: string;\n  handleSubmit: () => void;\n  onCancel: () => void;\n  onCreate: () => void;\n}\n\n@Form.create()\nexport default class ModalForm extends PureComponent<IModalFormProps> {\n  state = {\n    btnVisible: true,\n    value: undefined,\n    identificationCodeStatus: 1,\n    DriverData: [],\n    selectDriver: Number,\n  };\n\n  public componentDidMount() {\n    this.getDriverData();\n  }\n\n  public getDriverData = async () => {\n    try {\n      const data = await getDriver();\n      const driverData = data.data || [];\n      if (this.props.driverData) {\n        let isHas = false;\n        driverData.map(item => {\n          if (\n            item.utmsUsersDriversId === this.props.driverData.utmsUsersDriversId\n          ) {\n            isHas = true;\n          }\n        });\n        if (!isHas) {\n          driverData.push(this.props.driverData);\n        }\n      }\n      this.setState({ DriverData: driverData });\n    } catch (err) {\n      //\n    }\n  };\n  public componentWillReceiveProps(nextProps) {\n    if (nextProps.visible !== this.props.visible) {\n      this.getDriverData();\n    }\n    if (!nextProps.visible) {\n      this.reset();\n    }\n  }\n  reset = () => {\n    if (this.props.form.getFieldsValue().carModelCarLong) {\n      this.props.form.setFieldsValue({ carModelCarLong: '' });\n    }\n    this.props.form.resetFields();\n    this.setState({ btnVisible: true, identificationCodeStatus: 1 }, () => {\n      this.props.onCancel();\n    });\n  };\n  seva = async value => {\n    if (this.props.title === '添加车辆') {\n      if (fieldsValue.utmsUsersDriversId) {\n        this.setState({\n          btnVisible: true,\n          utmsUsersDriversId: fieldsValue.utmsUsersDriversId,\n        });\n      } else {\n        this.setState({ btnVisible: true });\n      }\n    } else {\n      await bindingDriver({\n        utmsVehicleId: this.props.utmsVehicleId,\n        utmsUsersDriversId: fieldsValue.utmsUsersDriversId,\n      }).then(data => {\n        if (data.result === 'success') {\n          this.props.handleSubmit();\n          this.setState({ btnVisible: true });\n        }\n      });\n    }\n  };\n\n  btn = () => {\n    if (!this.state.btnVisible) {\n      return (\n        <span>\n          <a\n            href=\"javascript:;\"\n            className=\"ml10\"\n            onClick={() => {\n              if (\n                !parseInt(\n                  this.props.form.getFieldsValue().utmsUsersDriversId,\n                  10,\n                )\n              ) {\n                message.error('请选择绑定司机');\n                return;\n              }\n              this.seva();\n            }}\n          >\n            保存\n          </a>\n          <a\n            href=\"javascript:;\"\n            className=\"ml10\"\n            onClick={value => {\n              this.setState({ btnVisible: true });\n              if (this.props.driverData.utmsUsersDriversId) {\n                this.props.form.setFieldsValue({\n                  utmsUsersDriversId: this.props.driverData.utmsUsersDriversId,\n                });\n              } else {\n                this.props.form.setFieldsValue({\n                  utmsUsersDriversId: '',\n                });\n              }\n            }}\n          >\n            取消\n          </a>\n        </span>\n      );\n    } else {\n      return (\n        <span>\n          <a\n            href=\"javascript:;\"\n            className=\"ml10\"\n            onClick={value => {\n              this.setState({ btnVisible: false });\n            }}\n          >\n            修改\n          </a>\n          {parseInt(this.props.form.getFieldsValue().utmsUsersDriversId, 10) ? (\n            <a\n              href=\"javascript:;\"\n              className=\"ml10\"\n              onClick={async value => {\n                const form = this.props.form;\n                if (!parseInt(form.getFieldValue('utmsUsersDriversId'), 10)) {\n                  return;\n                }\n                await setDeleteDriver({\n                  utmsVehicleId: this.props.utmsVehicleId,\n                  utmsUsersDriversId: form.getFieldsValue().utmsUsersDriversId,\n                }).then(data => {\n                  if (data.result === 'success') {\n                    form.setFieldsValue({\n                      utmsUsersDriversId: '',\n                    });\n                    this.getDriverData();\n                    this.props.handleSubmit();\n                  }\n                });\n              }}\n            >\n              删除\n            </a>\n          ) : (\n            ''\n          )}\n        </span>\n      );\n    }\n  };\n\n  render() {\n    const { visible, form, title, confirmLoading, utmsVehicleId } = this.props;\n    const { getFieldDecorator } = form;\n    const formItemLayout = {\n      labelCol: {\n        span: 7,\n      },\n      wrapperCol: {\n        span: 15,\n      },\n    };\n\n    return (\n      <Modal\n        centered={true}\n        maskClosable={false}\n        bodyStyle={{ height: 'calc(55vh)', overflow: 'auto' }}\n        title={title}\n        visible={visible}\n        onOk={() => {\n          this.props.onCreate();\n        }}\n        confirmLoading={confirmLoading}\n        onCancel={() => {\n          this.reset();\n          {\n            /*form.resetFields();\n          this.setState(\n            { btnVisible: true, identificationCodeStatus: 1 },\n            () => {\n              form.setFieldsValue({ carModelCarLong: '' });\n              onCancel();\n            },\n          );*/\n          }\n        }}\n      >\n        <Form className=\"ant-advanced-search-form\">\n          <Row>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"车辆归属\">\n                {getFieldDecorator('vehicleAttributive', {\n                  initialValue: '1',\n                })(\n                  <Select\n                    disabled={parseInt(utmsVehicleId, 10) ? true : false}\n                    onChange={value => {\n                      this.setState({\n                        identificationCodeStatus: parseInt(value, 10),\n                      });\n                    }}\n                  >\n                    <Option value=\"1\">公司自有车辆</Option>\n                    <Option value=\"2\">社会临时车辆</Option>\n                  </Select>,\n                )}\n              </FormItem>\n            </Col>\n            {(this.state.identificationCodeStatus === 1 &&\n              title === '添加车辆') ||\n            title === '编辑车辆' ? (\n              <Col span={24}>\n                <FormItem {...formItemLayout} label=\"车辆识别代码\">\n                  {getFieldDecorator('identificationCode', {\n                    rules: [{ required: true, message: '请输入车辆识别代码!' }],\n                  })(\n                    <Input\n                      disabled={title === '编辑车辆'}\n                      maxLength={20}\n                      onKeyDown={e => {\n                        if (e.keyCode === 13) {\n                          onCreate();\n                        }\n                      }}\n                    />,\n                  )}\n                </FormItem>\n              </Col>\n            ) : (\n              ''\n            )}\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"车牌号码\">\n                {getFieldDecorator('plateNumber', {\n                  rules: [{ required: true, message: '请输入车牌号码!' }],\n                })(\n                  <Input\n                    maxLength={10}\n                    onKeyDown={e => {\n                      if (e.keyCode === 13) {\n                        onCreate();\n                      }\n                    }}\n                  />,\n                )}\n              </FormItem>\n            </Col>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"发动机号\">\n                {getFieldDecorator('engineNumber')(\n                  <Input\n                    maxLength={20}\n                    onKeyDown={e => {\n                      if (e.keyCode === 13) {\n                        onCreate();\n                      }\n                    }}\n                  />,\n                )}\n              </FormItem>\n            </Col>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"品牌型号\">\n                {getFieldDecorator('brandModel')(\n                  <Input\n                    maxLength={20}\n                    onKeyDown={e => {\n                      if (e.keyCode === 13) {\n                        onCreate();\n                      }\n                    }}\n                  />,\n                )}\n              </FormItem>\n            </Col>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"能源类型\">\n                {getFieldDecorator('energyType')(\n                  <Select>\n                    <Option value=\"1\">柴油</Option>\n                    <Option value=\"2\">汽油</Option>\n                    <Option value=\"3\">新能源</Option>\n                  </Select>,\n                )}\n              </FormItem>\n            </Col>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"车型车长\">\n                {getFieldDecorator('carModelCarLong')(\n                  <CarModelCarLong maxSelect={1} noHot={true} />,\n                )}\n              </FormItem>\n            </Col>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"核定载质量（千克）\">\n                {getFieldDecorator('approvedLoad')(\n                  <Input\n                    maxLength={6}\n                    onKeyDown={e => {\n                      if (e.keyCode === 13) {\n                        onCreate();\n                      }\n                    }}\n                  />,\n                )}\n              </FormItem>\n            </Col>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"整车长宽高（毫米）\">\n                <Row>\n                  <Col md={8}>\n                    <FormItem>\n                      {getFieldDecorator('vehicleRealLong')(\n                        <Input\n                          style={{ width: 85 }}\n                          className=\"mr5\"\n                          maxLength={5}\n                          prefix={\n                            <span style={{ color: 'rgba(0,0,0,.25)' }}>长</span>\n                          }\n                          onKeyDown={e => {\n                            if (e.keyCode === 13) {\n                              onCreate();\n                            }\n                          }}\n                        />,\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col md={8}>\n                    <FormItem>\n                      {getFieldDecorator('vehicleRealWidth')(\n                        <Input\n                          style={{ width: 85 }}\n                          className=\"mr5 ml5\"\n                          maxLength={5}\n                          prefix={\n                            <span style={{ color: 'rgba(0,0,0,.25)' }}>宽</span>\n                          }\n                          onKeyDown={e => {\n                            if (e.keyCode === 13) {\n                              onCreate();\n                            }\n                          }}\n                        />,\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col md={8}>\n                    <FormItem>\n                      {getFieldDecorator('vehicleRealHeight')(\n                        <Input\n                          style={{ width: 89 }}\n                          className=\"ml5\"\n                          maxLength={5}\n                          prefix={\n                            <span style={{ color: 'rgba(0,0,0,.25)' }}>高</span>\n                          }\n                          onKeyDown={e => {\n                            if (e.keyCode === 13) {\n                              onCreate();\n                            }\n                          }}\n                        />,\n                      )}\n                    </FormItem>\n                  </Col>\n                </Row>\n              </FormItem>\n            </Col>\n\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"车牌颜色\">\n                {getFieldDecorator('plateColor')(\n                  <Select>\n                    <Option value=\"蓝色\">蓝色</Option>\n                    <Option value=\"黄色\">黄色</Option>\n                    <Option value=\"绿色\">绿色</Option>\n                  </Select>,\n                )}\n              </FormItem>\n            </Col>\n            <Col span={24}>\n              <FormItem {...formItemLayout} label=\"绑定司机\">\n                {getFieldDecorator('utmsUsersDriversId')(\n                  <Select\n                    showSearch\n                    optionFilterProp=\"children\"\n                    disabled={\n                      title === '编辑车辆' ? this.state.btnVisible : false\n                    }\n                  >\n                    {(this.state.DriverData || []).map(item => {\n                      if (item.utmsUsersDriversId) {\n                        return (\n                          <Option\n                            key={item.utmsUsersDriversId}\n                            value={item.utmsUsersDriversId}\n                          >\n                            {item.driverName} - {item.phoneNumber}\n                          </Option>\n                        );\n                      }\n                    })}\n                  </Select>,\n                )}\n                {title === '编辑车辆' ? this.btn() : ''}\n              </FormItem>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    );\n  }\n}\n","/**\n * ManageVehicle Component\n * @author chengle\n * @date 2018-9-14 13:25:46\n */\nimport {\n  Button,\n  Card,\n  Cascader,\n  Col,\n  Divider,\n  Form,\n  Icon,\n  Input,\n  Modal,\n  Pagination,\n  Popconfirm,\n  Row,\n  Select,\n} from 'antd';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport MyTable from 'components/MyTable';\nimport { OptionButtons } from 'components/OptionButtons';\nimport { List, Map } from 'immutable';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport ModalForm from './form';\nimport DetailsModule from './vehicleDetails';\n\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectError,\n  makeSelectLoading,\n  // makeSelectPageIndex,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nimport { addVehicle, editVehicle, getDetails, setDelete } from './service';\n\nimport GLOBAL from 'utils/GLOBAL.ts';\n\nconst Search = Input.Search;\nconst Option = Select.Option;\nconst confirm = Modal.confirm;\nconst FormItem = Form.Item;\n\nexport interface IManageVehicleProps {\n  children: React.ReactChildren;\n  list: List<Map<string, any>>;\n  dataCount: number;\n  // pageIndex: number;\n  loading: boolean;\n  form: WrappedFormUtils;\n  getAsyncList: (options?: object) => any;\n}\n\n@Form.create()\nclass ManageVehicle extends React.PureComponent<IManageVehicleProps> {\n  state = {\n    current: 1,\n    skipCount: 0,\n    pageSize: 15,\n    ModalTitle: '添加车辆',\n    visible: false,\n    confirmLoading: false,\n    detailsVisible: false,\n    utmsVehicleId: Number,\n    detailData: {\n      identificationCode: '',\n      vehicleAttributive: '',\n      plateNumber: '',\n      engineNumber: '',\n      brandModel: '',\n      energyType: '',\n      vehicleLong: '',\n      vehicleType: '',\n      approvedLoad: '',\n      vehicleRealLong: '',\n      vehicleRealWidth: '',\n      vehicleRealHeight: '',\n      plateColor: '',\n      utmsUsersDriversId: '',\n      driverName: '',\n      phoneNumber: '',\n    },\n    driverData: {},\n  };\n  private formRef;\n\n  public componentDidMount() {\n    this.handleSubmit();\n  }\n\n  // 添加车辆\n  addVehicle = () => {\n    this.setState({\n      ModalTitle: '添加车辆',\n      confirmLoading: false,\n      visible: true,\n      driverData: {},\n    });\n  };\n  handleOk = () => {\n    const form = this.formRef.props.form;\n    form.validateFields(async (err, values) => {\n      if (err) {\n        return;\n      }\n      if (!values.utmsUsersDriversId) {\n        delete values.utmsUsersDriversId;\n      }\n      if (values.carModelCarLong && values.carModelCarLong.length > 0) {\n        values.vehicleType = values.carModelCarLong[0].vehicleType;\n        values.vehicleLong = values.carModelCarLong[0].vehicleLong;\n        delete values.carModelCarLong;\n      }\n      this.setState({\n        confirmLoading: true,\n      });\n      if (this.state.ModalTitle === '添加车辆') {\n        await addVehicle(values).then(\n          data => {\n            this.setState({ visible: false, confirmLoading: false }, () => {\n              form.resetFields();\n              this.handleSubmit();\n            });\n          },\n          () => {\n            this.setState({\n              confirmLoading: false,\n            });\n          },\n        );\n      } else {\n        await editVehicle(\n          Object.assign(values, { utmsVehicleId: this.state.utmsVehicleId }),\n        ).then(\n          data => {\n            this.setState({ visible: false, confirmLoading: false }, () => {\n              form.resetFields();\n              this.handleSubmit();\n            });\n          },\n          () => {\n            this.setState({\n              confirmLoading: false,\n            });\n          },\n        );\n      }\n    });\n  };\n  handleCancel = () => {\n    const form = this.formRef.props.form;\n    // form.resetFields();\n    this.setState({\n      visible: false,\n      utmsVehicleId: Number,\n    });\n  };\n\n  // 编辑车辆\n  public editVehicle = value => {\n    this.getDetailsFn(value.utmsVehicleId, () => {\n      const form = this.formRef.props.form;\n      if (this.state.detailData.driverName) {\n        this.setState(\n          {\n            ModalTitle: '编辑车辆',\n            confirmLoading: false,\n            visible: true,\n            utmsVehicleId: value.utmsVehicleId,\n            driverData: {\n              driverName: this.state.detailData.driverName,\n              phoneNumber: this.state.detailData.phoneNumber,\n              utmsUsersDriversId: this.state.detailData.utmsUsersDriversId,\n            },\n          },\n          form.setFieldsValue({\n            identificationCode: this.state.detailData.identificationCode,\n            vehicleAttributive: this.state.detailData.vehicleAttributive + '',\n            plateNumber: this.state.detailData.plateNumber,\n            engineNumber: this.state.detailData.engineNumber,\n            brandModel: this.state.detailData.brandModel,\n            energyType: this.state.detailData.energyType\n              ? this.state.detailData.energyType + ''\n              : '',\n            carModelCarLong: [\n              {\n                value: `${this.state.detailData.vehicleLong / 1000}米${\n                  this.state.detailData.vehicleType\n                }`,\n              },\n            ],\n            approvedLoad: this.state.detailData.approvedLoad,\n            vehicleRealLong: this.state.detailData.vehicleRealLong,\n            vehicleRealWidth: this.state.detailData.vehicleRealWidth,\n            vehicleRealHeight: this.state.detailData.vehicleRealHeight,\n            plateColor: this.state.detailData.plateColor,\n            utmsUsersDriversId: this.state.detailData.utmsUsersDriversId,\n          }),\n        );\n      } else {\n        this.setState(\n          {\n            ModalTitle: '编辑车辆',\n            confirmLoading: false,\n            visible: true,\n            utmsVehicleId: value.utmsVehicleId,\n            driverData: {},\n          },\n          form.setFieldsValue({\n            identificationCode: this.state.detailData.identificationCode,\n            vehicleAttributive: this.state.detailData.vehicleAttributive + '',\n            plateNumber: this.state.detailData.plateNumber,\n            engineNumber: this.state.detailData.engineNumber,\n            brandModel: this.state.detailData.brandModel,\n            energyType: this.state.detailData.energyType\n              ? this.state.detailData.energyType + ''\n              : '',\n            carModelCarLong: [\n              {\n                value: `${this.state.detailData.vehicleLong / 1000}米${\n                  this.state.detailData.vehicleType\n                }`,\n              },\n            ],\n            approvedLoad: this.state.detailData.approvedLoad,\n            vehicleRealLong: this.state.detailData.vehicleRealLong,\n            vehicleRealWidth: this.state.detailData.vehicleRealWidth,\n            vehicleRealHeight: this.state.detailData.vehicleRealHeight,\n            plateColor: this.state.detailData.plateColor,\n            utmsUsersDriversId: this.state.detailData.utmsUsersDriversId,\n          }),\n        );\n      }\n    });\n    // console.log(value);\n    // console.log(form.getFieldsValue());\n  };\n\n  // 删除车辆\n  public deleteConfirm = async value => {\n    await setDelete({ utmsVehicleId: value.utmsVehicleId }).then(data => {\n      if (data.result === 'success') {\n        this.handleSubmit();\n      }\n    });\n  };\n\n  // 车辆详情\n  public details = value => {\n    this.getDetailsFn(value.utmsVehicleId, () => {\n      this.setState({\n        detailsVisible: true,\n      });\n    });\n  };\n  public detailsCancel = () => {\n    this.setState({\n      detailsVisible: false,\n      detailData: {},\n    });\n  };\n  public getDetailsFn = async (id, Fn) => {\n    await getDetails({ utmsVehicleId: id }).then(data => {\n      // _this.handleSubmit();\n      this.setState(\n        {\n          detailData: data.data, // Object.assign(data.data, this.state.detailData),\n        },\n        Fn,\n      );\n    });\n  };\n\n  public handleSubmit = (options: any = {}) => {\n    this.props.getAsyncList(\n      Object.assign(\n        {\n          skipCount:\n            options.skipCount === 0 || options.skipCount\n              ? options.skipCount\n              : this.state.skipCount,\n          pageSize: this.state.pageSize,\n        },\n        this.props.form.getFieldsValue(),\n      ),\n    );\n  };\n\n  public selectChange = (key, value) => {\n    const ops = {};\n    ops[key] = value;\n    this.props.form.setFieldsValue(ops);\n    this.setState({ current: 1, skipCount: 0 }, this.handleSubmit);\n  };\n\n  public handleReset = () => {\n    this.props.form.resetFields();\n    this.setState({ current: 1, skipCount: 0 }, this.handleSubmit);\n  };\n\n  public renderFilterForm() {\n    const { getFieldDecorator, setFieldsValue } = this.props.form;\n    return (\n      <Form className={styles.form} layout=\"inline\">\n        <Row type=\"flex\">\n          <Col span={24}>\n            <FormItem label=\"司机绑定\">\n              {getFieldDecorator('bindingStatus', {\n                initialValue: '',\n              })(\n                <Select\n                  style={{ width: 120 }}\n                  onChange={this.selectChange.bind(this, 'bindingStatus')}\n                >\n                  <Option value=\"\">全部</Option>\n                  <Option value=\"0\">未绑定</Option>\n                  <Option value=\"1\">已绑定</Option>\n                </Select>,\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('searchInfo')(\n                <Input\n                  style={{ width: 220 }}\n                  placeholder=\"车辆识别码/车牌号码/绑定司机\"\n                  onKeyDown={e => {\n                    if (e.keyCode === 13) {\n                      this.selectChange(\n                        'searchInfo',\n                        this.props.form.getFieldValue('searchInfo'),\n                      );\n                    }\n                  }}\n                />,\n              )}\n              <Button\n                type=\"primary\"\n                style={{ marginLeft: 16, marginRight: 12 }}\n                onClick={this.selectChange.bind('searchInfo')}\n              >\n                查询\n              </Button>\n              <Button onClick={this.handleReset}>重置</Button>\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n\n  public renderTable() {\n    const { dataCount, list, loading } = this.props;\n    const tableProps = {\n      rowKey: 'utmsVehicleId',\n      columns: [\n        {\n          title: '车辆识别码',\n          dataIndex: 'identificationCode',\n          key: 'identificationCode',\n          render: (text, record) => {\n            return <span className=\"my-nowrap\">{text}</span>;\n          },\n        },\n        {\n          title: '发动机号',\n          dataIndex: 'engineNumber',\n          key: 'engineNumber',\n          width: 120,\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '品牌型号',\n          dataIndex: 'brandModel',\n          key: 'brandModel',\n          width: 120,\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '车牌号',\n          dataIndex: 'plateNumber',\n          key: 'plateNumber',\n          width: 120,\n        },\n        {\n          title: '车辆类型',\n          dataIndex: 'vehicleType',\n          key: 'vehicleType',\n          render: (text, record) => (\n            <span className=\"my-nowrap\">\n              {record.vehicleLong\n                ? record.vehicleLong / 1000 + '米' + record.vehicleType\n                : GLOBAL.emptyRecord}\n            </span>\n          ),\n        },\n        {\n          title: '能源类型',\n          dataIndex: 'energyType',\n          key: 'energyType',\n          render: (text, record) => {\n            return record.energyType ? (\n              <span className=\"my-nowrap\">\n                {['', '柴油', '汽油', '新能源'][text]}\n              </span>\n            ) : (\n              GLOBAL.emptyRecord\n            );\n          },\n        },\n        {\n          title: '车牌颜色',\n          dataIndex: 'plateColor',\n          key: 'plateColor',\n          render: (text, record) => {\n            return (\n              <span className=\"my-nowrap\">{text || GLOBAL.emptyRecord}</span>\n            );\n          },\n        },\n        {\n          title: '绑定司机',\n          dataIndex: 'phoneNumber',\n          key: 'phoneNumber',\n          render: (text, record) =>\n            record.phoneNumber ? (\n              <Link\n                className=\"my-nowrap\"\n                to={'/manageDriver?phoneNumber=' + text}\n              >\n                {text}\n              </Link>\n            ) : (\n              GLOBAL.emptyRecord\n            ),\n        },\n        {\n          title: '添加时间',\n          dataIndex: 'createDate',\n          key: 'createDate',\n          render: (text, record) => {\n            return (\n              <span className=\"my-nowrap\">{text || GLOBAL.emptyRecord}</span>\n            );\n          },\n        },\n        {\n          title: '操作',\n          fixed: 'right',\n          width: 105,\n          render: (text, record) => (\n            <span>\n              <OptionButtons>\n                <a href=\"javascript:;\" onClick={this.details.bind(this, record)}>\n                  详情\n                </a>\n                {/* <Divider type=\"vertical\" /> */}\n                <a\n                  href=\"javascript:;\"\n                  onClick={this.editVehicle.bind(this, record)}\n                >\n                  编辑\n                </a>\n                {/* <Divider type=\"vertical\" /> */}\n                <Popconfirm\n                  placement=\"bottom\"\n                  title={'是否删除该车辆'}\n                  onConfirm={this.deleteConfirm.bind(this, record)}\n                  okText=\"是\"\n                  cancelText=\"否\"\n                >\n                  <a href=\"javascript:;\">删除</a>\n                </Popconfirm>\n              </OptionButtons>\n            </span>\n          ),\n        },\n      ],\n      dataSource: list.toJS(),\n      loading,\n      scroll: { x: 1350 },\n      pagination: {\n        current: this.state.current,\n        total: dataCount,\n        onChange: (pageData, index) => {\n          this.setState(\n            {\n              pageSize: pageData.pageSize,\n              skipCount: pageData.skipCount,\n              current: pageData.current,\n            },\n            this.handleSubmit,\n          );\n        },\n        onShowSizeChange: pageData => {\n          this.setState(\n            {\n              pageSize: pageData.pageSize,\n              skipCount: 0,\n              current: 1,\n            },\n            this.handleSubmit,\n          );\n        },\n      },\n    };\n    return <MyTable {...tableProps} />;\n  }\n\n  public saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  public render() {\n    const { visible, confirmLoading, ModalTitle, detailsVisible } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        span: 5,\n      },\n      wrapperCol: {\n        span: 15,\n      },\n    };\n    return (\n      <Card title=\"车辆管理\" className={styles.ManageVehicle}>\n        <Button\n          type=\"primary\"\n          className={styles.buttonRight}\n          onClick={this.addVehicle}\n        >\n          <Icon type=\"usergroup-add\" theme=\"outlined\" />\n          添加车辆\n        </Button>\n        {this.renderFilterForm()}\n        <div>{this.renderTable()}</div>\n\n        <ModalForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleOk}\n          title={ModalTitle}\n          confirmLoading={confirmLoading}\n          utmsVehicleId={this.state.utmsVehicleId}\n          handleSubmit={this.handleSubmit}\n          driverData={this.state.driverData}\n        />\n\n        <DetailsModule\n          visible={detailsVisible}\n          detailData={this.state.detailData}\n          onCancel={this.detailsCancel}\n          onCreate={this.detailsCancel}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId);\n    return {\n      mapStateToProps: createStructuredSelector({\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n        list: makeSelectData(currentState),\n        dataCount: makeSelectDataCount(currentState),\n        // pageIndex: makeSelectPageIndex(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getAsyncList: options => dispatch(actions.getAsyncList(options)),\n      }),\n    };\n  })(ManageVehicle);\n};\n","/**\n * ManageVehicle selectors\n * @author chengle\n * @date 2018-9-14 13:25:46\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('dataCount'),\n  );\n"],"sourceRoot":""}