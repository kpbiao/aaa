{"version":3,"sources":["webpack:///./src/modules/module.fixpath.addpath/index.tsx","webpack:///./src/modules/module.fixpath.addpath/selectors.ts"],"names":["FormItem","es_form","Item","module_fixpath_addpath_confirm","modal","confirm","colLayProps","sm","xs","md","lg","xl","module_fixpath_addpath_FixpathAddpath","FixpathAddpath","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","selectedAddress","onChangeCustomer","data","state","selectCustomer","setState","loadIndex","loadType","loadData","unloadData","react","_this2","_this$props","searchParams","form","id","getRoute","Number","eventEmitter","on","requestClose","eventSource","cancleEdit","nextProps","saveData","toSchedule","routeData","size","setFormData","_this3","loading","className","index_module_default","a","spin","spinning","layout","renderBasicInfo","AddOrderCommonInfo","PageBottom","rightChild","buttons","es_button","key","onClick","type","htmlType","onHandleSubmit","_this4","_this$props$form","getFieldDecorator","_this$state","setFieldsValue","loadInfoProps","closeAddressModal","formData","loadtype","showAddressModal","index","card","title","row","gutter","col","label","style","margin","input","rules","required","message","CustomerSelect","onChange","placeholder","maxLength","CarModelCarLong","maxSelect","marginTop","LoadInfoEdit","_extends","fields","name","value","onDele","deleUnloadData","_this$state2","load","unloadData2","getFieldValue","unload","_this5","validateFields","errors","values","getSubmitData","saveRouteConfig","_this$state3","getFieldsValue","points","Object","assign","concat","map","customer","customerName","carLong","carStruct","vehicleLong","vehicleType","routeWayPoints","JSON","stringify","toString","unloadKeys","indexOf","customerCode","split","_this6","_this$props2","comparativeFields","d","push","showConfirm","propsCar","get","isFieldsTouched","content","okText","cancelText","centered","onCancel","toList","close","_this7","isEdit","iconType","onOk","refresh","filter","toJS","carString","routeName","goodsName","goodsNumber","goodsVolume","goodsWeight","isReceipt","customerFreight","driverFreight","collictionAmount","pointAddress","phone","contact","setTimeout","__webpack_exports__","_ref","routeId","connectModel","actions","selectState","currentState","mapStateToProps","libfrom_dll_reference_dll","error","selectors_makeSelectError","selectors_makeSelectLoading","selectors_makeSelectSaveData","mapDispatchToProps","dispatch","options","create"],"mappings":"4yCA+BA,IAAMA,EAAWC,EAAA,EAAKC,KAChBC,EAAUC,EAAA,EAAMC,QA0BhBC,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAGAC,cAKJ,SAAAC,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAFRO,qBACmB,EAAAN,EA6JXO,iBAAmB,SAAAC,GAEF,KADIR,EAAKS,MAAxBC,gBAENV,EAAKW,UAAWD,eAAgBF,KA9JlCR,EAAKS,OACHG,UAAW,EACXC,SAAU,EACVC,YACAC,cACAL,eAAgB,IAPDV,yPALQgB,EAAA,oEAeA,IAAAC,EAAAf,KAAAgB,EACMhB,KAAKH,MAA5BoB,EADiBD,EACjBC,aADiBD,EACHE,KAClBD,EAAaE,IACfnB,KAAKH,MAAMuB,SAASC,OAAOJ,EAAaE,KAE1CnB,KAAKH,MAAMyB,aAAaC,GAAG,QAAS,SAACC,EAAcC,GAE/B,mBAAhBA,GACgB,qBAAhBA,EAEAV,EAAKW,WAAWF,GAEhBA,wDAK2BG,GAC/B,GAAIA,EAAUC,UAAYD,EAAUC,WAAa5B,KAAKH,MAAM+B,SAAU,KAC5DT,EAAOnB,KAAKH,MAAMoB,aAAlBE,GACRnB,KAAK6B,WAAWV,GAAUQ,EAAUC,UAElCD,EAAUG,UAAUC,OAAS/B,KAAKH,MAAMiC,UAAUC,MACpD/B,KAAKgC,YAAYL,oCAIL,IAAAM,EAAAjC,KACNkC,EAAYlC,KAAKH,MAAjBqC,QACR,OACEpB,EAAA,qBAAKqB,UAAWC,EAAAC,EAAOzC,gBACrBkB,EAAA,cAACwB,EAAA,GAAKC,SAAUL,GACdpB,EAAA,cAAC9B,EAAA,GAAKwD,OAAO,cACVxC,KAAKyC,kBACN3B,EAAA,cAAC4B,EAAA,GAAmBxB,KAAMlB,KAAKH,MAAMqB,OACrCJ,EAAA,cAAC6B,EAAA,GACCC,WACE9B,EAAA,cAAC6B,EAAA,GACCE,SACE/B,EAAA,cAACgC,EAAA,GACCC,IAAK,EACLC,QAAS,WACPf,EAAKP,eAHT,gBAQAZ,EAAA,cAACgC,EAAA,GACCC,IAAK,EACLE,KAAK,UACLC,SAAS,SACTF,QAAS,WACPf,EAAKkB,mBALT,8EAmBQ,IAAAC,EAAApD,KAAAqD,EACsBrD,KAAKH,MAAMqB,KAAjDoC,EADgBD,EAChBC,kBADgBC,GAAAF,EACGG,eACMxD,KAAKO,OAA9BK,EAFgB2C,EAEhB3C,SAAUC,EAFM0C,EAEN1C,WACZ4C,GACJC,kBAAmB,SAACpD,EAAMqD,EAAUC,GAClCR,EAAKM,kBAAkBpD,EAAMqD,EAAUC,IAEzCC,iBAAkB,SAACZ,EAAMa,GACvBV,EAAKS,iBAAiBZ,EAAMa,IAE9B5C,KAAMlB,KAAKH,MAAMqB,MAEnB,OACEJ,EAAA,cAACiD,EAAA,GAAKC,MAAM,4BACVlD,EAAA,cAACmD,EAAA,GAAIC,OAxGE,IAyGLpD,EAAA,cAACqD,EAAA,EAAQ9E,EACPyB,EAAA,cAAC/B,GAASqF,MAAM,GAAGnB,KAAK,SAASoB,OAASC,OAAQ,IAC/ChB,EAAkB,eAAlBA,CAAkCxC,EAAA,cAACyD,EAAA,GAAMtB,KAAK,aAEjDnC,EAAA,cAAC/B,GAASqF,MAAM,4BACbd,EAAkB,gBACjBkB,QAEIC,UAAU,EACVC,QAAS,oCAJdpB,CAOExC,EAAA,cAAC6D,EAAA,GAAeC,SAAU5E,KAAKK,sBAGtCS,EAAA,cAACqD,EAAA,EAAQ9E,EACPyB,EAAA,cAAC/B,GAASqF,MAAM,4BACbd,EAAkB,aACjBkB,QAEIC,UAAU,EACVC,QAAS,gDAJdpB,CAOExC,EAAA,cAACyD,EAAA,GAAMM,YAAY,2BAAOC,UAAW,QAG5ChE,EAAA,cAACqD,EAAA,EAAQ9E,EACPyB,EAAA,cAAC/B,GAASqF,MAAM,2BAAOK,UAAQ,GAC5BnB,EAAkB,aACjBkB,QAEIC,UAAU,EACVC,QAAS,oCAJdpB,CAQCxC,EAAA,cAACiE,EAAA,GACCF,YAAY,iCACZG,UAAW,EACXX,OAASY,UAAW,aAO9BnE,EAAA,cAACoE,EAAA,EAADC,GACEC,QAAUC,KAAM,OAAQC,OAAQ1E,IAChCgD,SAAU,GACNH,IAGN3C,EAAA,cAACoE,EAAA,EAADC,GACEC,QAAUC,KAAM,SAAUC,MAAOzE,GACjC+C,SAAU,GACNH,GACJ8B,OAAQ,SAAAxC,GACNK,EAAKoC,eAAezC,iDAgBLpC,EAAkBmD,GACzC9D,KAAKS,UAAWE,WAAUD,UAAWoD,8CAGbxD,EAAMqD,EAAUC,GAAU,IAC1C1C,EAASlB,KAAKH,MAAdqB,KAD0CuE,EAEhBzF,KAAKO,MAA/BG,EAF0C+E,EAE1C/E,UAAWG,EAF+B4E,EAE/B5E,WACnB,GAAiB,IAAb+C,EACF1C,EAAKsC,gBACHkC,MAAO/B,KAET3D,KAAKS,UAAWG,SAAUN,SACrB,GAAiB,IAAbsD,EAAgB,CACzB/C,EAAWH,GAAaJ,EACxB,IAAMqF,EAAczE,EAAK0E,cAAc,UACvCD,EAAYjF,GAAaiD,EACzBzC,EAAKsC,gBACHqC,OAAQF,IAEV3F,KAAKS,UAAWI,uDAKGkC,GAAK,IAClBlC,EAAeb,KAAKO,MAApBM,WACRA,EAAWkC,GAAO,KAClB/C,KAAKS,UAAWI,wDAIO,IAAAiF,EAAA9F,KACNA,KAAKH,MAAdqB,KACH6E,eAAe,SAACC,EAAQC,GAC3B,IAAKD,EAAQ,CACX,IAAM1F,EAAOwF,EAAKI,gBAClBJ,EAAKjG,MAAMsG,gBAAgB7F,8CAMT,IAAA8F,EACWpG,KAAKO,MAA9BK,EADcwF,EACdxF,SAAUC,EADIuF,EACJvF,WAEZ8C,GAAW0C,EADUrG,KAAKH,MAAMqB,KAA9BmF,kBAEFC,GAAUC,OAAOC,UAAW7C,EAAS+B,KAAK,GAAI9E,IAAW6F,OAC7D5F,EAAW6F,IAAI,SAACpB,EAAOxB,GACrB,GAAIwB,GAAS3B,EAASkC,OAAO/B,GAC3B,OAAOyC,OAAOC,UAAW7C,EAASkC,OAAO/B,GAAQwB,MAIjDqB,EAAWhD,EAASiD,aACpBtG,EAAOiG,OAAOC,OAAO7C,GACzBkD,QAASlD,EAASmD,UAAU,GAAGC,YAC/BD,UAAWnD,EAASmD,UAAU,GAAGE,YACjCC,eAAgBC,KAAKC,UAAUb,GAAQc,aAMzC,cAJO9G,EAAKoF,YACLpF,EAAKuF,cACLvF,EAAK+G,WAERV,GAAYA,EAASW,QAAQ,KAAO,EAC/Bf,OAAOC,OAAOlG,GACnBiH,aAAcZ,EAASa,MAAM,KAAK,GAClCZ,aAAcD,EAASa,MAAM,KAAK,KAG7BlH,qCAKQkB,GAAe,IAAAiG,EAAAzH,KAAA0H,EACU1H,KAAKH,MAAvCqB,EADwBwG,EACxBxG,KAAMD,EADkByG,EAClBzG,aAAca,EADI4F,EACJ5F,UACpBtB,EAAmBR,KAAKO,MAAxBC,eAEFmH,GACJ,YACA,OACA,uBACA,kBACA,gBACA,SACA,YACA,cACA,cACA,cACA,YACA,mBACA,kBACA,iBAfWzG,EAAK0E,cAAc,cAiB3Bc,IAAI,SAAAkB,GACPD,EAAkBE,KAAlB,UAAApB,OAAiCmB,EAAjC,mBACAD,EAAkBE,KAAlB,UAAApB,OAAiCmB,EAAjC,cACAD,EAAkBE,KAAlB,UAAApB,OAAiCmB,EAAjC,cAEF,IAAIE,GAAc,EAClB,GAAK7G,EAAaE,GAQX,CACL,IAAM4G,EACJjG,EAAUkG,IAAI,WAAa,IAAO,SAAMlG,EAAUkG,IAAI,cAEtD9G,EAAK+G,gBAAgBN,IACrBI,IAAa7G,EAAK0E,cAAc,aAAa,GAAGN,SAEhDwC,GAAc,QAdhBH,EAAkBE,KAAK,cAErBrH,IAAmBU,EAAK0E,cAAc,iBACtC1E,EAAK+G,gBAAgBN,MAErBG,GAAc,GAYdA,EACF5I,GACE8E,MAAO,6CACPkE,QAAS,2EACTC,OAAQ,2BACRC,WAAY,eACZC,UAAU,EACVC,SAAU,WACJ9G,EACFA,IAEAiG,EAAKc,YAKP/G,EACFA,IAEAxB,KAAKuI,0CAMTvI,KAAKH,MAAM0I,SACXvI,KAAKH,MAAM2I,2CAIMrH,GAAI,IAAAsH,EAAAzI,KACf0I,IAAS1I,KAAKH,MAAMoB,aAAaE,GACvCjC,GACE8E,MAAK,GAAAyC,OAAKiC,EAAS,eAAO,eAArB,gBACLR,QAAO,eAAAzB,OAAOiC,EAAS,eAAO,eAAvB,kFACPP,OAAQ,2BACRC,WAAY,2BACZC,UAAU,EACVM,SAAU,eACVC,KAAM,WACJH,EAAK5I,MAAMgC,WAAWV,GACtBsH,EAAK5I,MAAMgJ,QAAQ,iBACnBJ,EAAK5I,MAAM2I,SAEbF,SAAU,WACRG,EAAK5I,MAAM0I,SACXE,EAAK5I,MAAMgJ,QAAQ,iBACnBJ,EAAK5I,MAAM2I,+CAMG3I,GAAO,IACjBiC,EAAoBjC,EAApBiC,UAAWZ,EAASrB,EAATqB,KACb2E,EAAS/D,EACZkG,IAAI,kBACJc,OAAO,SAAAlB,GAAC,OAA0B,IAAtBA,EAAEI,IAAI,aAA2C,MAAtBJ,EAAEI,IAAI,cAC7Ce,OACGrD,EAAO5D,EACVkG,IAAI,kBACJc,OAAO,SAAAlB,GAAC,OAA0B,IAAtBA,EAAEI,IAAI,aAA2C,MAAtBJ,EAAEI,IAAI,cAC7Ce,OAAO,GACJC,EACJlH,EAAUkG,IAAI,WAAa,IAAO,SAAMlG,EAAUkG,IAAI,aACpDlG,EAAUC,OACZb,EAAKsC,gBACHyF,UAAWnH,EAAUkG,IAAI,aACzBpB,aAAc9E,EAAUkG,IAAI,gBAC5BT,aAAczF,EAAUkG,IAAI,gBAC5BlB,YAAcxB,MAAO0D,IACrBE,UAAWpH,EAAUkG,IAAI,aACzBmB,YAAarH,EAAUkG,IAAI,eAC3BoB,YAAatH,EAAUkG,IAAI,eAC3BqB,YAAavH,EAAUkG,IAAI,eAC3BsB,UAAWxH,EAAUkG,IAAI,aAAaZ,WACtCmC,gBAAiBzH,EAAUkG,IAAI,mBAC/BwB,cAAe1H,EAAUkG,IAAI,iBAC7ByB,iBAAkB3H,EAAUkG,IAAI,oBAChCX,WAAYxB,EAAOa,IAAI,SAACpG,EAAMwD,GAAP,OAAiBA,IACxC4B,OAEIgE,aAAchE,EAAKgE,aACnBC,MAAOjE,EAAKiE,MACZC,QAASlE,EAAKkE,YAIpBC,WAAW,WACT3I,EAAKsC,gBACHqC,OAAQA,EAAOa,IAAI,SAAApG,GAAI,OACrBoJ,aAAcpJ,EAAKoJ,aACnBC,MAAOrJ,EAAKqJ,MACZC,QAAStJ,EAAKsJ,cAGjB,GACH5J,KAAKS,UACHG,SAAU8E,EACV7E,WAAYgF,0CAMpBiE,EAAA,iBAAeC,GAA+B,IAA5BC,EAA4BD,EAA5BC,QAChB,OAAOC,EADqCF,EAAnBE,cACL,SAAAC,GAClB,IC7b0BC,ED6bpBC,EAAe,SAAA7J,GAAK,OAAIA,EAAMyH,IAAIgC,IACxC,OACEK,gBAAiB9D,OAAA+D,EAAA,yBAAA/D,EACfzE,WChcsBqI,EDgcIC,EC/bhC7D,OAAA+D,EAAA,eAAA/D,CAAe4D,EAAa,SAAC5J,GAC3B,OAAOA,EAAMyH,IAAI,WD+bbuC,MCzcuB,SAAAJ,GAAW,OACxC5D,OAAA+D,EAAA,eAAA/D,CAAe4D,EAAa,SAAC5J,GAAD,OAA6BA,EAAMyH,IAAI,WDwctDwC,CAAgBJ,GACvBlI,QCvcyB,SAAAiI,GAAW,OAC1C5D,OAAA+D,EAAA,eAAA/D,CAAe4D,EAAa,SAAC5J,GAAD,OAC1BA,EAAMyH,IAAI,aDqcGyC,CAAkBL,GAC3BxI,SC9b0B,SAAAuI,GAAW,OAC3C5D,OAAA+D,EAAA,eAAA/D,CAAe4D,EAAa,SAAC5J,GAAD,OAC1BA,EAAMyH,IAAI,cD4bI0C,CAAmBN,KAE/BO,mBAAoB,SAAAC,GAAQ,OAC1BxJ,SAAU,SAAAyJ,GAAO,OAAID,EAASV,EAAQ9I,SAASyJ,KAC/C1E,gBAAiB,SAAA0E,GAAO,OAAID,EAASV,EAAQ/D,gBAAgB0E,KAC7DtC,OAAQ,SAAAsC,GAAO,OAAID,EAASV,EAAQ3B,OAAOsC,KAC3ChJ,WAAY,SAAAgJ,GAAO,OAAID,EAASV,EAAQrI,WAAWgJ,SAblDZ,CAgBJjL,EAAA,EAAK8L,QAAL9L,CAAcW","file":"fixpath-addpath.e2bd7303.chunk.js","sourcesContent":["/**\n * FixpathAddpath Component\n * @author lhf\n * @date 2018-9-20 09:54:47\n */\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport Form from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Input from 'antd/es/input';\nimport Modal from 'antd/es/modal';\nimport Row from 'antd/es/row';\nimport CarModelCarLong from 'components/CarModelCarLong';\nimport CustomerSelect from 'components/CustomerSelect';\nimport LoadInfoEdit from 'components/LoadInfoEdit';\nimport { PageBottom, PageBottomButtons } from 'components/PageBottom';\nimport { Map } from 'immutable';\nimport AddOrderCommonInfo from 'modules/module.vehicle.order.add/AddOrderCommonInfo';\nimport * as React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  makeSelectData,\n  makeSelectError,\n  makeSelectLoading,\n  makeSelectSaveData,\n} from './selectors';\n\nimport Spin from 'antd/es/spin';\nimport styles from './index.module.less';\n\nconst FormItem = Form.Item;\nconst confirm = Modal.confirm;\nexport interface IFixpathAddpathProps {\n  children: React.ReactChildren;\n  loading: boolean;\n  form: WrappedFormUtils;\n  searchParams: {\n    id: number;\n  };\n  routeData: Map<string, any>;\n  saveData: string;\n  getRoute: (routeId: number) => any;\n  saveRouteConfig: (data) => void;\n  toList: () => void;\n  close: () => void;\n  toSchedule: (routeId: number) => void;\n  refresh: (data?) => any;\n  eventEmitter: object;\n}\ninterface IFixpathAddpathState {\n  loadType: number; // load/unload，当前选择的是装还是卸的地址,0-装货，1-卸货\n  loadIndex: number; // 装卸的index\n  loadData: {};\n  unloadData: object[];\n  selectCustomer: string;\n}\nconst gutter = 16;\nconst colLayProps = {\n  sm: 24,\n  xs: 24,\n  md: 6,\n  lg: 6,\n  xl: 6,\n};\n\nclass FixpathAddpath extends React.PureComponent<\n  IFixpathAddpathProps,\n  IFixpathAddpathState\n> {\n  selectedAddress: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadIndex: 0,\n      loadType: 0,\n      loadData: {},\n      unloadData: [],\n      selectCustomer: '',\n    };\n  }\n  public componentDidMount() {\n    const { searchParams, form } = this.props;\n    if (searchParams.id) {\n      this.props.getRoute(Number(searchParams.id));\n    }\n    this.props.eventEmitter.on('close', (requestClose, eventSource) => {\n      if (\n        eventSource === 'FROM_TAB_CLOSE' ||\n        eventSource === 'FROM_TAB_REFRESH'\n      ) {\n        this.cancleEdit(requestClose);\n      } else {\n        requestClose();\n      }\n    });\n  }\n\n  public componentWillReceiveProps(nextProps) {\n    if (nextProps.saveData && nextProps.saveData !== this.props.saveData) {\n      const { id } = this.props.searchParams;\n      this.toSchedule(id ? id : nextProps.saveData);\n    }\n    if (nextProps.routeData.size && !this.props.routeData.size) {\n      this.setFormData(nextProps);\n    }\n  }\n\n  public render() {\n    const { loading } = this.props;\n    return (\n      <div className={styles.FixpathAddpath}>\n        <Spin spinning={loading}>\n          <Form layout=\"horizontal\">\n            {this.renderBasicInfo()}\n            <AddOrderCommonInfo form={this.props.form} />\n            <PageBottom\n              rightChild={\n                <PageBottomButtons\n                  buttons={[\n                    <Button\n                      key={1}\n                      onClick={() => {\n                        this.cancleEdit();\n                      }}\n                    >\n                      取消\n                    </Button>,\n                    <Button\n                      key={2}\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      onClick={() => {\n                        this.onHandleSubmit();\n                      }}\n                    >\n                      保存线路\n                    </Button>,\n                  ]}\n                />\n              }\n            />\n          </Form>\n        </Spin>\n      </div>\n    );\n  }\n  private renderBasicInfo() {\n    const { getFieldDecorator, setFieldsValue } = this.props.form;\n    const { loadData, unloadData } = this.state;\n    const loadInfoProps = {\n      closeAddressModal: (data, formData, loadtype) => {\n        this.closeAddressModal(data, formData, loadtype);\n      },\n      showAddressModal: (type, index) => {\n        this.showAddressModal(type, index);\n      },\n      form: this.props.form,\n    };\n    return (\n      <Card title=\"基本信息\">\n        <Row gutter={gutter}>\n          <Col {...colLayProps}>\n            <FormItem label=\"\" type=\"hidden\" style={{ margin: 0 }}>\n              {getFieldDecorator('customerCode')(<Input type=\"hidden\" />)}\n            </FormItem>\n            <FormItem label=\"选择客户\">\n              {getFieldDecorator('customerName', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择客户',\n                  },\n                ],\n              })(<CustomerSelect onChange={this.onChangeCustomer} />)}\n            </FormItem>\n          </Col>\n          <Col {...colLayProps}>\n            <FormItem label=\"线路名称\">\n              {getFieldDecorator('routeName', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入线路名称',\n                  },\n                ],\n              })(<Input placeholder=\"线路名称\" maxLength={50} />)}\n            </FormItem>\n          </Col>\n          <Col {...colLayProps}>\n            <FormItem label=\"所需车型\" required>\n              {getFieldDecorator('carStruct', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请选择车型',\n                  },\n                ],\n              })(\n                <CarModelCarLong\n                  placeholder=\"请选择车型\"\n                  maxSelect={1}\n                  style={{ marginTop: '6px' }}\n                />,\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n\n        <LoadInfoEdit\n          fields={{ name: 'load', value: [loadData] }}\n          loadtype={0}\n          {...loadInfoProps}\n        />\n\n        <LoadInfoEdit\n          fields={{ name: 'unload', value: unloadData }}\n          loadtype={1}\n          {...loadInfoProps}\n          onDele={key => {\n            this.deleUnloadData(key);\n          }}\n        />\n      </Card>\n    );\n  }\n\n  // 选择客户\n  private onChangeCustomer = data => {\n    const { selectCustomer } = this.state;\n    if (selectCustomer === '') {\n      this.setState({ selectCustomer: data });\n    }\n  };\n\n  // 显示常用地址，设置当前loadtype和index\n  private showAddressModal(loadType: number, index) {\n    this.setState({ loadType, loadIndex: index });\n  }\n  // 关闭常用地址弹出框，填充数据\n  private closeAddressModal(data, formData, loadtype) {\n    const { form } = this.props;\n    const { loadIndex, unloadData } = this.state;\n    if (loadtype === 0) {\n      form.setFieldsValue({\n        load: [formData],\n      });\n      this.setState({ loadData: data });\n    } else if (loadtype === 1) {\n      unloadData[loadIndex] = data;\n      const unloadData2 = form.getFieldValue('unload');\n      unloadData2[loadIndex] = formData;\n      form.setFieldsValue({\n        unload: unloadData2,\n      });\n      this.setState({ unloadData });\n    }\n  }\n\n  // 删除卸货信息\n  private deleUnloadData(key) {\n    const { unloadData } = this.state;\n    unloadData[key] = null;\n    this.setState({ unloadData });\n  }\n\n  // 确认按钮\n  private onHandleSubmit() {\n    const { form } = this.props;\n    form.validateFields((errors, values) => {\n      if (!errors) {\n        const data = this.getSubmitData();\n        this.props.saveRouteConfig(data);\n      }\n    });\n  }\n\n  // 获取提交的数据\n  private getSubmitData() {\n    const { loadData, unloadData } = this.state;\n    const { getFieldsValue } = this.props.form;\n    const formData = getFieldsValue();\n    const points = [Object.assign({}, formData.load[0], loadData)].concat(\n      unloadData.map((value, index) => {\n        if (value && formData.unload[index]) {\n          return Object.assign({}, formData.unload[index], value);\n        }\n      }),\n    );\n    const customer = formData.customerName;\n    const data = Object.assign(formData, {\n      carLong: formData.carStruct[0].vehicleLong,\n      carStruct: formData.carStruct[0].vehicleType,\n      routeWayPoints: JSON.stringify(points).toString(),\n    });\n    delete data.load;\n    delete data.unload;\n    delete data.unloadKeys;\n\n    if (customer && customer.indexOf(',') > 0) {\n      return Object.assign(data, {\n        customerCode: customer.split(',')[0],\n        customerName: customer.split(',')[1],\n      });\n    } else {\n      return data;\n    }\n  }\n\n  // 取消页面编辑\n  private cancleEdit(requestClose?) {\n    const { form, searchParams, routeData } = this.props;\n    const { selectCustomer } = this.state;\n    const keys = form.getFieldValue('unloadKeys');\n    const comparativeFields = [\n      'routeName',\n      'load',\n      'load[0].pointAddress',\n      'load[0].contact',\n      'load[0].phone',\n      'unload',\n      'goodsName',\n      'goodsWeight',\n      'goodsVolume',\n      'goodsNumber',\n      'isReceipt',\n      'collictionAmount',\n      'customerFreight',\n      'driverFreight',\n    ];\n    keys.map(d => {\n      comparativeFields.push(`unload[${d}].pointAddress`);\n      comparativeFields.push(`unload[${d}].contact`);\n      comparativeFields.push(`unload[${d}].phone`);\n    });\n    let showConfirm = false;\n    if (!searchParams.id) {\n      comparativeFields.push('carStruct');\n      if (\n        selectCustomer !== form.getFieldValue('customerName') ||\n        form.isFieldsTouched(comparativeFields)\n      ) {\n        showConfirm = true;\n      }\n    } else {\n      const propsCar =\n        routeData.get('carLong') / 1000 + '米' + routeData.get('carStruct');\n      if (\n        form.isFieldsTouched(comparativeFields) ||\n        propsCar !== form.getFieldValue('carStruct')[0].value\n      ) {\n        showConfirm = true;\n      }\n    }\n    if (showConfirm) {\n      confirm({\n        title: '有未保存的信息',\n        content: '如放弃，填写的信息将丢失',\n        okText: '继续填写',\n        cancelText: '放弃',\n        centered: true,\n        onCancel: () => {\n          if (requestClose) {\n            requestClose();\n          } else {\n            this.toList();\n          }\n        },\n      });\n    } else {\n      if (requestClose) {\n        requestClose();\n      } else {\n        this.toList();\n      }\n    }\n  }\n\n  private toList() {\n    this.props.toList();\n    this.props.close();\n  }\n\n  // 开单成功之后\n  private toSchedule(id) {\n    const isEdit = this.props.searchParams.id ? true : false;\n    confirm({\n      title: `${isEdit ? '修改' : '创建'}成功`,\n      content: `线路${isEdit ? '修改' : '创建'}成功，是否立刻设置运力计划`,\n      okText: '设置运力',\n      cancelText: '暂不设置',\n      centered: true,\n      iconType: 'check-circle',\n      onOk: () => {\n        this.props.toSchedule(id);\n        this.props.refresh('/fixpath/list');\n        this.props.close();\n      },\n      onCancel: () => {\n        this.props.toList();\n        this.props.refresh('/fixpath/list');\n        this.props.close();\n      },\n    });\n  }\n\n  // 修改的情况下，设置formdata\n  private setFormData(props) {\n    const { routeData, form } = props;\n    const unload = routeData\n      .get('routeWayPoints')\n      .filter(d => d.get('loadType') === 1 || d.get('loadType') === '1')\n      .toJS();\n    const load = routeData\n      .get('routeWayPoints')\n      .filter(d => d.get('loadType') === 0 || d.get('loadType') === '0')\n      .toJS()[0];\n    const carString =\n      routeData.get('carLong') / 1000 + '米' + routeData.get('carStruct');\n    if (routeData.size) {\n      form.setFieldsValue({\n        routeName: routeData.get('routeName'),\n        customerName: routeData.get('customerName'),\n        customerCode: routeData.get('customerCode'),\n        carStruct: [{ value: carString }],\n        goodsName: routeData.get('goodsName'),\n        goodsNumber: routeData.get('goodsNumber'),\n        goodsVolume: routeData.get('goodsVolume'),\n        goodsWeight: routeData.get('goodsWeight'),\n        isReceipt: routeData.get('isReceipt').toString(),\n        customerFreight: routeData.get('customerFreight'),\n        driverFreight: routeData.get('driverFreight'),\n        collictionAmount: routeData.get('collictionAmount'),\n        unloadKeys: unload.map((data, index) => index),\n        load: [\n          {\n            pointAddress: load.pointAddress,\n            phone: load.phone,\n            contact: load.contact,\n          },\n        ],\n      });\n      setTimeout(() => {\n        form.setFieldsValue({\n          unload: unload.map(data => ({\n            pointAddress: data.pointAddress,\n            phone: data.phone,\n            contact: data.contact,\n          })),\n        });\n      }, 0);\n      this.setState({\n        loadData: load,\n        unloadData: unload,\n      });\n    }\n  }\n}\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId);\n    return {\n      mapStateToProps: createStructuredSelector({\n        routeData: makeSelectData(currentState),\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n        saveData: makeSelectSaveData(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getRoute: options => dispatch(actions.getRoute(options)),\n        saveRouteConfig: options => dispatch(actions.saveRouteConfig(options)),\n        toList: options => dispatch(actions.toList(options)),\n        toSchedule: options => dispatch(actions.toSchedule(options)),\n      }),\n    };\n  })(Form.create()(FixpathAddpath));\n};\n","/**\n * FixpathAddpath selectors\n * @author lhf\n * @date 2018-9-20 09:54:47\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => {\n    return state.get('data');\n  });\n\nexport const makeSelectSaveData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('saveData'),\n  );\n"],"sourceRoot":""}