{"version":3,"sources":["webpack:///./src/modules/module.ltl.order/index.module.less","webpack:///./src/modules/module.ltl.order/assets/template.xlsx","webpack:///./src/modules/module.ltl.order/condition.tsx","webpack:///./src/modules/module.ltl.order/importOrder/columns.ts","webpack:///./src/modules/module.ltl.order/importOrder/EditableContext.tsx","webpack:///./src/modules/module.ltl.order/importOrder/EditableCell.tsx","webpack:///./src/modules/module.ltl.order/importOrder/EditableFormRow.tsx","webpack:///./src/modules/module.ltl.order/importOrder/ImportOrder.tsx","webpack:///./src/modules/module.ltl.order/totalComponent.tsx","webpack:///./src/modules/module.ltl.order/index.tsx","webpack:///./src/modules/module.ltl.order/selectors.ts"],"names":["module","exports","LtlOrder","total","item","title","value","optionButtons","condition","btns","ImportOrder__PreEditor","EditTable","EditableCell","EditableCell__ConfirmBtn","__webpack_require__","p","formItemLayout","_objectSpread","colon","condition_Condition","layout","xxl","span","xl","md","sm","xs","onSearch","e","preventDefault","_this","props","form","validateFields","err","fieldsValue","createDate","other","_objectWithoutProperties","createDateStart","createDateEnd","length","format","param","status","unshift","keys","Object","_i","key","onClear","_this$props$form","setFieldsValue","undefined","thirdSystemId","orderNumber","customerName","address","react","getFieldDecorator","this","className","index_module_default","a","es_form","onSubmit","row","gutter","col","Item","_extends","label","style","marginBottom","initialValue","es_select","placeholder","text","map","index","Option","rules","type","date_picker","RangePicker","width","input","es_button","htmlType","marginRight","marginLeft","onClick","create","COLUMN_LIST","COLUMNS_CONFIG","contact","delegateAmount","goodsName","goodsNumber","goodsVolume","goodsWeight","isReceipt","latitude","longitude","phone","province","remark","requireDate","COLUMN_WIDTH","reduce","prev","importOrder_EditableContext","FormItem","EditableCell_EditableCell","save","_this$props","dataIndex","record","handleSave","errors","values","EditableCell_objectSpread","_this2","_this$props2","restProps","EditableCell_objectWithoutProperties","errorMap","error","forEach","assign","EditableCell_defineProperty","EditableCell_extends","classnames_default","Consumer","Comp","validateStatus","help","margin","required","message","concat","momentfrom_dll_reference_dll_default","ref","node","size","suffix","icon","onChange","EditableCell__ValueWrap","children","EditableFormRow","_ref","EditableFormRow_objectWithoutProperties","Provider","ImportOrder_FormItem","ImportOrder_formItemLayout","labelCol","wrapperCol","ImportOrder_ImportOrder","normFile","Array","isArray","fileList","onFileChange","setTimeout","file","slice","handleSubmit","importData","onImport","get","onReImport","editImportValid","handleReImport","service","customerCode","fileId","isContinue","rightCount","errorCount","then","setImportStatus","es_alert","showIcon","ImportOrder_extends","CustomerSelect","extra","href","template_default","download","getValueFromEvent","valuePropName","upload","beforeUpload","dataSource","toArray","list","ImportOrder_objectSpread","toObject","columns","columnName","column","onCell","tableProps","rowClassName","components","body","cell","bordered","scroll","x","y","rowKey","description","table","_this3","modalProps","visible","onOk","confirmLoading","maskClosable","centered","okText","cancelText","renderPreImportEditor","onCancel","renderInvalidEditor","okButtonProps","disabled","some","immutable_esfrom_dll_reference_dll","modal","totalComponent_TotalComponent","_React$PureComponent","TotalComponent","_getPrototypeOf2","totalComponent_classCallCheck","_len","arguments","args","_key","totalComponent_possibleConstructorReturn","totalComponent_getPrototypeOf","call","apply","lg","state","obj","waitGroup","pendingScheduling","distribution","haveSignedIn","notSigned","getTotalItem","_ref$border","border","accounting_default","formatNumber","thousand","totalComponent_inherits","nextProps","setState","card","totalComponent_extends","DEFAULT_NULL","GLOBAL","emptyRecord","module_ltl_order_LtlOrder","current","permissions","pars","pageSize","skipCount","onShowSizeChange","pageInfo","onFetch","getOrderListData","module_ltl_order_objectSpread","getOrderStatistics","par","onDeleteOrders","data","toJS","filter","h","isChecked","utmsPartOrderId","confirm","content","iconType","updateHandler","handlePermissions","msngrfrom_dll_reference_dll_default","on","drop","_this$state","importOrders","importModifyOrders","count","loading","statistics","fixed","render","es_checkbox","checked","onCheckedChanged","Link","to","includes","MyTable","pagination","PageBottom","leftChild","onAllCheckChanged","rightChild","buttons","__webpack_exports__","routeId","actions","selectState","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectError","selectors_makeSelectLoading","selectors_makeSelectOrderData","selectors_makeSelectOrderCount","selectors_makeSelectImportData","selectors_makeSelectOrderStatistics","withConnect","es","dispatch","checkedChanged","allCheckedChanged","deleteOrders","backToImport","redux"],"mappings":"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","file":"ltl-order.d07f49b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LtlOrder\":\"_3Xh2U\",\"total\":\"M7oHe\",\"item\":\"_3Yn3T\",\"title\":\"_2lSv5\",\"value\":\"_2PuBF\",\"optionButtons\":\"_1jzcV\",\"condition\":\"k_R2l\",\"btns\":\"_14Ndg\",\"ImportOrder__PreEditor\":\"_3r4vt\",\"EditTable\":\"A3nF4\",\"EditableCell\":\"_2ng7M\",\"EditableCell__ConfirmBtn\":\"_3XILj\"};","module.exports = __webpack_public_path__ + \"template.f28ee8ae.xlsx\";","import * as React from 'react';\n\nimport styles from './index.module.less';\n\nimport Button from 'antd/es/button';\nimport Col from 'antd/es/col';\nimport DatePicker from 'antd/es/date-picker';\n\nimport Form, { FormComponentProps } from 'antd/es/form';\nimport Input from 'antd/es/input';\nimport Row from 'antd/es/row';\nimport Select from 'antd/es/select';\nimport { Link } from 'react-router-dom';\nimport { Hash } from 'utils/Hash';\n\nimport { conditionItemLayout, conditionLayout } from 'utils/conditionLayout';\nconst formItemLayout = { ...conditionItemLayout, colon: false };\nexport interface IConditionProps extends FormComponentProps {\n  onSearch: (pars?: Hash) => void;\n}\n\nclass Condition extends React.PureComponent<IConditionProps, any> {\n  layout = {\n    xxl: { span: 6 },\n    xl: { span: 6 },\n    md: { span: 12 },\n    sm: { span: 12 },\n    xs: { span: 24 },\n  };\n  onSearch = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, fieldsValue) => {\n      if (!err) {\n        const { createDate, ...other } = fieldsValue;\n        let createDateStart = '';\n        let createDateEnd = '';\n        if (createDate && createDate.length > 0) {\n          createDateStart = createDate[0].format('YYYY-MM-DD') + ' 00:00:00';\n          createDateEnd = createDate[1].format('YYYY-MM-DD') + ' 23:59:59';\n        }\n\n        if (this.props.onSearch) {\n          const param = {\n            createDateStart,\n            createDateEnd,\n            ...other,\n          };\n          if (param.status || param.status === 0) {\n            param.status = [param.status];\n            if (param.status[0] === 2) {\n              param.status.unshift(1);\n            }\n          }\n          const keys = Object.keys(param);\n          for (const key of keys) {\n            if (!param[key]) {\n              delete param[key];\n            }\n          }\n          this.props.onSearch(param);\n        }\n      }\n    });\n  };\n\n  onClear = () => {\n    const { setFieldsValue, validateFields } = this.props.form;\n    setFieldsValue({\n      status: '',\n      createDate: undefined,\n      thirdSystemId: '',\n      orderNumber: '',\n      customerName: '',\n      address: '',\n    });\n    if (this.props.onSearch) {\n      this.props.onSearch();\n    }\n  };\n  render() {\n    const statusList = [\n      { value: '', text: '全部' },\n      { value: 0, text: '待配载' },\n      // { value: 1, text: '待发货' },\n      { value: 2, text: '待调度' },\n      { value: 3, text: '配送中' },\n      { value: 4, text: '已签收' },\n      { value: 5, text: '未签收' },\n    ];\n\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div className={styles.condition}>\n        <Form onSubmit={this.onSearch}>\n          <Row gutter={10}>\n            <Col {...this.layout}>\n              <Form.Item\n                {...formItemLayout}\n                label=\"状态\"\n                style={{ marginBottom: '14px' }}\n              >\n                {getFieldDecorator('status', {\n                  initialValue: '',\n                })(\n                  <Select placeholder=\"全部\">\n                    {statusList.map((item, index) => (\n                      <Select.Option key={index} value={item.value}>\n                        {item.text}\n                      </Select.Option>\n                    ))}\n                  </Select>,\n                )}\n              </Form.Item>\n            </Col>\n            <Col {...this.layout}>\n              <Form.Item\n                {...formItemLayout}\n                label=\"发布时间\"\n                style={{ marginBottom: '14px' }}\n              >\n                {getFieldDecorator('createDate', {\n                  // initialValue: '',\n                  rules: [{ type: 'array' }],\n                })(<DatePicker.RangePicker style={{ width: '100%' }} />)}\n              </Form.Item>\n            </Col>\n            <Col {...this.layout}>\n              <Form.Item\n                {...formItemLayout}\n                label=\"第三方单号\"\n                style={{ marginBottom: '14px' }}\n              >\n                {getFieldDecorator('thirdSystemId', {\n                  initialValue: '',\n                })(<Input />)}\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={10}>\n            <Col {...this.layout}>\n              <Form.Item {...formItemLayout} label=\"订单号\">\n                {getFieldDecorator('orderNumber', {\n                  initialValue: '',\n                })(<Input />)}\n              </Form.Item>\n            </Col>\n            <Col {...this.layout}>\n              <Form.Item {...formItemLayout} label=\"客户名称\">\n                {getFieldDecorator('customerName', {\n                  initialValue: '',\n                })(<Input />)}\n              </Form.Item>\n            </Col>\n            <Col {...this.layout}>\n              <Form.Item {...formItemLayout} label=\"收货地址\">\n                {getFieldDecorator('address', {\n                  initialValue: '',\n                })(<Input />)}\n              </Form.Item>\n            </Col>\n            <Col {...this.layout}>\n              <Form.Item {...formItemLayout}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{ marginRight: '12px', marginLeft: '6px' }}\n                >\n                  查询\n                </Button>\n                <Button onClick={this.onClear}>重置</Button>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Condition);\n","export const COLUMN_LIST = [\n  'thirdSystemId',\n  'longitude',\n  'latitude',\n  'contact',\n  'phone',\n  'province',\n  'address',\n  'requireDate',\n  'goodsName',\n  'goodsWeight',\n  'goodsVolume',\n  'goodsNumber',\n  'isReceipt',\n  'delegateAmount',\n  'remark',\n];\n\nexport const COLUMNS_CONFIG = {\n  address: {\n    title: '详细地址',\n    width: 150,\n  },\n  contact: {\n    title: '联系人',\n    width: 120,\n  },\n  delegateAmount: {\n    title: '代收货款(元)',\n    width: 120,\n  },\n  goodsName: {\n    title: '货物名称',\n    width: 120,\n  },\n  goodsNumber: {\n    title: '件数(件)',\n    width: 120,\n  },\n  goodsVolume: {\n    title: '体积(方)',\n    width: 120,\n  },\n  goodsWeight: {\n    title: '重量(千克)',\n    width: 120,\n  },\n  isReceipt: {\n    title: '回单服务',\n    width: 120,\n  },\n  latitude: {\n    title: '纬度',\n    width: 120,\n  },\n  longitude: {\n    title: '经度',\n    width: 120,\n  },\n  phone: {\n    title: '联系电话',\n    width: 120,\n  },\n  province: {\n    title: '省市区',\n    width: 140,\n  },\n  remark: {\n    title: '备注',\n    width: 150,\n  },\n  requireDate: {\n    title: '要求到达时间',\n    width: 120,\n    type: 'datePicker',\n  },\n  thirdSystemId: {\n    title: '第三方单号',\n    width: 120,\n    // fixed: 'left',\n  },\n};\n\nexport const COLUMN_WIDTH = COLUMN_LIST.reduce(\n  (prev, key) => (prev += COLUMNS_CONFIG[key].width),\n  0,\n);\n","import * as React from 'react';\n\nconst EditableContext = React.createContext();\n\nexport default EditableContext;\n","import DatePicker from 'antd/es/date-picker';\nimport Form from 'antd/es/form';\nimport Icon from 'antd/es/icon';\nimport Input from 'antd/es/input';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport * as React from 'react';\nimport EditableContext from './EditableContext';\n\nimport styles from '../index.module.less';\n\nconst FormItem = Form.Item;\n\ninterface IEditableCellProps {\n  dataIndex: string;\n  title: string;\n  index: number;\n  className: string;\n  width: number;\n  type: string;\n  record: object;\n  handleSave: (data: object) => void;\n}\n\nexport default class EditableCell extends React.PureComponent<\n  IEditableCellProps\n> {\n  private form;\n  save = () => {\n    const { dataIndex, record, handleSave } = this.props;\n    this.form.validateFields([dataIndex], (errors, values) => {\n      if (errors) {\n        return;\n      }\n      handleSave({ ...record, ...values });\n    });\n  };\n  render() {\n    const {\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      className,\n      width,\n      type,\n      ...restProps\n    } = this.props;\n    const errorMap = {};\n    record.error.forEach((value, key) => {\n      Object.assign(errorMap, {\n        [key]: value,\n      });\n    });\n    return (\n      <td {...restProps} className={classnames(className, styles.EditableCell)}>\n        {\n          <EditableContext.Consumer>\n            {form => {\n              this.form = form;\n              const Comp = type === 'datePicker' ? DatePicker : Input;\n              const props = {};\n              if (errorMap[dataIndex] && errorMap[dataIndex] !== true) {\n                Object.assign(props, {\n                  validateStatus: 'error',\n                  help: errorMap[dataIndex],\n                });\n              }\n              return (\n                <FormItem {...props} style={{ margin: 0 }}>\n                  {errorMap[dataIndex] ? (\n                    form.getFieldDecorator(dataIndex, {\n                      rules: [\n                        {\n                          required: true,\n                          message: `${title} is required.`,\n                        },\n                      ],\n                      initialValue:\n                        type === 'datePicker'\n                          ? moment(record[dataIndex])\n                          : record[dataIndex],\n                    })(\n                      <Comp\n                        ref={node => (this.input = node)}\n                        size={'small'}\n                        suffix={\n                          <button\n                            className={styles.EditableCell__ConfirmBtn}\n                            onClick={this.save}\n                          >\n                            <Icon type=\"check\" />\n                          </button>\n                        }\n                        onChange={() => {\n                          if (type === 'datePicker') {\n                            this.save();\n                          }\n                        }}\n                      />,\n                    )\n                  ) : (\n                    <div className={styles.EditableCell__ValueWrap}>\n                      {restProps.children}\n                    </div>\n                  )}\n                </FormItem>\n              );\n            }}\n          </EditableContext.Consumer>\n        }\n      </td>\n    );\n  }\n}\n","import Form from 'antd/es/form';\nimport * as React from 'react';\n\nimport EditableContext from './EditableContext';\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nexport default Form.create()(EditableRow);\n","/**\n * Import Order Component\n * @author ryan bian\n */\nimport Alert from 'antd/es/alert';\nimport Button from 'antd/es/button';\nimport Form from 'antd/es/form';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Icon from 'antd/es/icon';\nimport Modal from 'antd/es/modal';\nimport Select from 'antd/es/select';\nimport Table from 'antd/es/table';\nimport Upload from 'antd/es/upload';\nimport { Map } from 'immutable';\nimport * as React from 'react';\n\nimport CustomerSelect from 'components/CustomerSelect';\nimport { COLUMN_LIST, COLUMN_WIDTH, COLUMNS_CONFIG } from './columns';\nimport EditableCell from './EditableCell';\nimport EditableFormRow from './EditableFormRow';\n\nimport { importModifyOrders } from '../service';\n\nimport importTemplatePath from '../assets/template.xlsx';\nimport styles from '../index.module.less';\n\nconst FormItem = Form.Item;\n\ninterface IImportOrderProps {\n  importData: Map<string, any>;\n  form: WrappedFormUtils;\n  onImport: (data: object) => void;\n  onReImport: () => void;\n  editImportValid: (data: object) => void;\n  setImportStatus: (status: string) => void;\n}\n\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\n@Form.create({})\nexport default class ImportOrder extends React.PureComponent<\n  IImportOrderProps\n> {\n  public normFile = e => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n  public onFileChange = ({ fileList }) => {\n    setTimeout(() => {\n      this.props.form.setFieldsValue({\n        file: fileList.slice(-1),\n      });\n    }, 10);\n  };\n  public handleSubmit = () => {\n    const { importData, form, onImport } = this.props;\n    const status = importData.get('status');\n    if (status === 'beforeImport') {\n      form.validateFields((errors, values) => {\n        if (!errors) {\n          onImport(values);\n        }\n      });\n    } else if (status === 'invalid') {\n      this.props.onReImport();\n    }\n  };\n  public handleSave = row => {\n    this.props.editImportValid(row);\n  };\n  public handleReImport = () => {\n    const { importData } = this.props;\n    importModifyOrders({\n      customerCode: importData.get('customerCode'),\n      customerName: importData.get('customerName'),\n      fileId: importData.get('fileId'),\n      isContinue: 1,\n      total: importData.get('total'),\n      rightCount: importData.get('rightCount'),\n      errorCount: importData.get('errorCount'),\n    }).then(() => {\n      this.props.setImportStatus('beforeImport');\n    });\n  };\n  public renderPreImportEditor() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Alert\n          message=\"注意：批量导入订单请使用官方提供的模版，否则会导入失败。\"\n          type=\"info\"\n          showIcon\n        />\n        <Form className={styles.ImportOrder__PreEditor}>\n          <FormItem {...formItemLayout} label=\"选择客户\" required>\n            {getFieldDecorator('customer', {\n              rules: [{ required: true, message: '请选择客户' }],\n            })(<CustomerSelect />)}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"上传文件\"\n            required\n            extra={\n              <a href={importTemplatePath} download=\"订单批量导入模版.xlsx\">\n                订单批量导入模版.xlsx\n              </a>\n            }\n          >\n            {getFieldDecorator('file', {\n              rules: [{ required: true, message: '请上传导入文件' }],\n              getValueFromEvent: this.normFile,\n              valuePropName: 'fileList',\n            })(\n              <Upload beforeUpload={() => false} onChange={this.onFileChange}>\n                <Button>\n                  <Icon type=\"upload\" /> 点击上传\n                </Button>\n              </Upload>,\n            )}\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n  public renderInvalidEditor() {\n    const { importData } = this.props;\n    const orderDatas = importData.get('orderDatas').toArray();\n    const dataSource = orderDatas.map((list, index) => ({\n      index,\n      key: index,\n      ...list.toObject(),\n    }));\n    const columns = COLUMN_LIST.map((columnName, index) => {\n      const column = COLUMNS_CONFIG[columnName];\n      return {\n        ...column,\n        dataIndex: columnName,\n        onCell: record => ({\n          ...column,\n          record,\n          dataIndex: columnName,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    // console.log(dataSource);\n    const tableProps = {\n      className: styles.EditTable,\n      title: () => '导入失败的列表',\n      rowClassName: () => 'editable-row',\n      components: {\n        body: {\n          row: EditableFormRow,\n          cell: EditableCell,\n        },\n      },\n      dataSource,\n      columns,\n      bordered: true,\n      scroll: {\n        x: COLUMN_WIDTH,\n        y: 200,\n      },\n      rowKey: 'key',\n      size: 'small',\n    };\n    return (\n      <div>\n        <Alert\n          message={`导入${importData.get('total')}条订单。 成功${importData.get(\n            'rightCount',\n          )}条，失败${importData.get('errorCount')}条。`}\n          description=\"导入失败的内容可双击进行直接修改，修改完成后点击“已修改，继续导入”\"\n          type=\"info\"\n          showIcon\n        />\n        <Table {...tableProps} />\n      </div>\n    );\n  }\n  public render() {\n    const { importData } = this.props;\n    const modalProps = {\n      visible: true,\n      width: 800,\n      onOk: this.handleSubmit,\n      confirmLoading: importData.get('pending'),\n      maskClosable: false,\n      centered: true,\n    };\n    const status = importData.get('status');\n    if (status === 'beforeImport') {\n      Object.assign(modalProps, {\n        title: '订单导入',\n        okText: '导入Excel',\n        cancelText: '取消',\n        children: this.renderPreImportEditor(),\n        onCancel: () => this.props.setImportStatus('success'),\n      });\n    } else if (status === 'invalid') {\n      Object.assign(modalProps, {\n        title: '导入确认',\n        okText: '已修改，继续导入',\n        cancelText: '重新导入Excel',\n        children: this.renderInvalidEditor(),\n        onCancel: this.handleReImport,\n        okButtonProps: {\n          disabled: importData\n            .get('orderDatas')\n            .some(map =>\n              map.get('error', Map()).some(value => value && value !== true),\n            ),\n        },\n      });\n    } else {\n      Object.assign(modalProps, {\n        visible: false,\n      });\n    }\n    return <Modal {...modalProps} />;\n  }\n}\n","import * as React from 'react';\n\nimport styles from './index.module.less';\n\nimport accounting from 'accounting';\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport Divider from 'antd/es/divider';\nimport Row from 'antd/es/row';\nimport Component from 'modules/module.company.account/Loadable';\n\nexport interface ITotalComponentProps {\n  total?: number; // 总订单数量\n  waitGroup?: number; // 待配置\n  pendingScheduling?: number; // 待调度数量\n  distribution?: number; // 运输中数量\n  haveSignedIn?: number; // 已签收数量\n  notSigned?: number; // 未签收数量\n}\n\nexport class TotalComponent extends React.PureComponent<ITotalComponentProps> {\n  layout = {\n    lg: { span: 4 },\n    md: { span: 8 },\n    xs: { span: 24 },\n  };\n  state = {\n    obj: {\n      total: null,\n      waitGroup: null,\n      pendingScheduling: null,\n      distribution: null,\n      haveSignedIn: null,\n      notSigned: null,\n    },\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.total) {\n      const obj = nextProps;\n      this.setState({\n        obj,\n      });\n    }\n  }\n  getTotalItem = ({\n    title,\n    value,\n    border = false,\n  }: {\n    title: string;\n    value?: number;\n    border?: boolean;\n  }) => {\n    return (\n      <div className={`${styles.item} ${border ? styles.border : ''}`}>\n        <div className={styles.title}>{title}</div>\n        <div className={styles.value}>\n          {accounting.formatNumber(value, {\n            // precision: 2,\n            thousand: ',',\n          })}\n        </div>\n      </div>\n    );\n  };\n  render() {\n    return (\n      <div className={styles.total}>\n        <Card bordered={false}>\n          <Row gutter={16}>\n            <Col {...this.layout} key={1}>\n              {this.getTotalItem({\n                title: '总订单',\n                value: this.state.obj.total,\n                border: true,\n              })}\n            </Col>\n            <Col {...this.layout} key={2}>\n              {this.getTotalItem({\n                title: '待配载',\n                value: this.state.obj.waitGroup,\n                border: true,\n              })}\n            </Col>\n            <Col {...this.layout} key={3}>\n              {this.getTotalItem({\n                title: '待调度',\n                value: this.state.obj.pendingScheduling,\n              })}\n            </Col>\n            <Col {...this.layout} key={4}>\n              {this.getTotalItem({\n                title: '配送中',\n                value: this.state.obj.distribution,\n                border: true,\n              })}\n            </Col>\n            <Col {...this.layout} key={5}>\n              {this.getTotalItem({\n                title: '已签收',\n                value: this.state.obj.haveSignedIn,\n                border: true,\n              })}\n            </Col>\n            <Col {...this.layout} key={6}>\n              {this.getTotalItem({\n                title: '未签收',\n                value: this.state.obj.notSigned,\n              })}\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    );\n  }\n}\n","/**\n * LtlOrder Component\n * @author djd\n * @date 2018/9/13 下午1:48:50\n */\nimport msngr from 'msngr';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport CheckBox from 'antd/es/checkbox';\nimport Modal from 'antd/es/modal';\nimport MyTable from 'components/MyTable';\nimport {\n  PageBottom,\n  PageBottomButtons,\n  PageBottomCheck,\n} from 'components/PageBottom';\n\nimport { List, Map } from 'immutable';\nimport GLOBAL from 'utils/GLOBAL';\nimport { Hash } from 'utils/Hash';\n\nimport {\n  makeSelectError,\n  makeSelectImportData,\n  makeSelectLoading,\n  makeSelectOrderCount,\n  makeSelectOrderData,\n  makeSelectOrderStatistics,\n} from './selectors';\n\nimport Condition from './condition';\nimport styles from './index.module.less';\n\nimport ImportOrder from './importOrder/ImportOrder';\nimport { TotalComponent } from './totalComponent';\n\nexport interface ILtlOrderProps {\n  children: React.ReactChildren;\n  data: List<Map<string, any>>;\n  loading?: boolean;\n  statistics: List<Map<string, any>>;\n  count: number;\n  importData: Map<string, any>;\n  permissions: List<Map<string, any>>;\n  getOrderListData: (pars?: any) => any;\n  onCheckedChanged: (record: any) => void;\n  onAllCheckChanged: (checked: boolean) => void;\n  onDeleteOrders: (partOrderIds: string[]) => void;\n  importOrders: (data: object) => void;\n  importModifyOrders: (data: object) => void;\n  editImportValid: (data: object) => void;\n  setImportStatus: (status) => void;\n  getOrderStatistics: () => any;\n}\nconst DEFAULT_NULL = GLOBAL.emptyRecord;\nclass LtlOrder extends React.PureComponent<ILtlOrderProps> {\n  public state = {\n    current: 1,\n    permissions: [],\n  };\n\n  private pars = {\n    pageSize: 15,\n    skipCount: 0,\n  };\n  private condition = {};\n  onShowSizeChange = pageInfo => {\n    if (pageInfo) {\n      pageInfo.current = 1;\n    }\n    this.onFetch(pageInfo);\n  };\n  onFetch = pageInfo => {\n    this.pars.pageSize =\n      (pageInfo ? pageInfo.pageSize : 15) || this.pars.pageSize;\n    this.pars.skipCount = pageInfo ? pageInfo.skipCount : 0;\n    this.props.getOrderListData({\n      ...this.pars,\n      ...pageInfo,\n      ...this.condition,\n    });\n    this.setState({\n      current: (pageInfo ? pageInfo.current : 1) || 1,\n    });\n  };\n\n  onSearch = (props: Hash) => {\n    this.pars.skipCount = 0;\n    this.condition = props;\n    this.setState({\n      current: 1,\n    });\n    this.props.getOrderListData({\n      ...this.pars,\n      ...this.condition,\n    });\n    this.props.getOrderStatistics();\n  };\n  setImportStatus = (par: any) => {\n    this.props.setImportStatus('beforeImport');\n  };\n\n  onDeleteOrders = () => {\n    const { onDeleteOrders, getOrderStatistics } = this.props;\n    const list = this.props.data\n      .toJS()\n      .filter(h => h.isChecked && h.status === '待配载')\n      .map(h => h.utmsPartOrderId);\n    if (list.length > 0) {\n      Modal.confirm({\n        title: '删除确认',\n        content: '是否删除选中的订单',\n        iconType: 'info-circle',\n        className: 'ant-confirm-info',\n        centered: true,\n        onOk() {\n          onDeleteOrders(list);\n        },\n      });\n    }\n  };\n\n  public componentDidMount() {\n    this.handlePermissions();\n    this.props.getOrderListData({\n      ...this.pars,\n      ...this.condition,\n    });\n    this.props.getOrderStatistics();\n    msngr('/ltlOrder', 'import success').on(this.updateHandler);\n    msngr('/ltlOrder', 'refresh').on(this.updateHandler);\n  }\n  public componentWillUnmount() {\n    msngr('/ltlOrder', 'import success').drop(this.updateHandler);\n    msngr('/ltlOrder', 'refresh').drop(this.updateHandler);\n  }\n  // 取权限\n  public handlePermissions() {\n    const { permissions } = this.props;\n    this.setState({\n      permissions: permissions.toArray().map(data => data.get('operateKey')),\n    });\n  }\n  public updateHandler = () => {\n    this.props.getOrderListData({\n      ...this.pars,\n      ...this.condition,\n    });\n    this.props.getOrderStatistics();\n  };\n\n  render() {\n    const { current, permissions } = this.state;\n    const {\n      importData,\n      importOrders,\n      importModifyOrders,\n      setImportStatus,\n      editImportValid,\n      data,\n      count,\n      loading,\n      statistics,\n    } = this.props;\n    const list = data.toJS();\n    const columns = [\n      {\n        width: 40,\n        fixed: 'left',\n        key: 'checkbox',\n        render: (record: any) => {\n          if (record.status === '待配载') {\n            return (\n              <CheckBox\n                checked={record.isChecked}\n                onChange={() => this.props.onCheckedChanged(record)}\n              />\n            );\n          }\n        },\n      },\n      {\n        title: '第三方订单号',\n        dataIndex: 'thirdSystemId',\n        width: 225,\n        fixed: 'left',\n        render: text => (text ? text : DEFAULT_NULL),\n      },\n      {\n        title: '订单号',\n        dataIndex: 'orderNumber',\n        width: 225,\n        fixed: 'left',\n        render: (text, record) => (\n          <span>\n            <Link to={`/ltlOrder/detail?id=${record.utmsPartOrderId}`}>\n              {text}\n            </Link>\n          </span>\n        ),\n      },\n      {\n        title: '状态',\n        dataIndex: 'status',\n        width: 80,\n      },\n      {\n        title: '客户名称',\n        width: 150,\n        dataIndex: 'customerName',\n      },\n      {\n        title: '发布时间',\n        dataIndex: 'gmtCreate',\n        width: 190,\n      },\n      {\n        title: '要求送达时间',\n        width: 190,\n        dataIndex: 'requireDate',\n        render: text => (text ? text : DEFAULT_NULL),\n      },\n      {\n        title: '收货人姓名',\n        width: 120,\n        dataIndex: 'contact',\n      },\n      {\n        title: '联系电话',\n        width: 135,\n        dataIndex: 'phone',\n      },\n      {\n        title: '省市区',\n        width: 180,\n        dataIndex: 'province',\n      },\n      {\n        title: '收货地址',\n        width: 250,\n        dataIndex: 'address',\n      },\n      {\n        title: '操作',\n        key: 'operation',\n        fixed: 'right',\n        width: 110,\n        render: (text, record) => {\n          if (record.status === '待配载') {\n            return (\n              <Link to={`/ltlOrder/edit?id=${record.utmsPartOrderId}`}>\n                修改\n              </Link>\n            );\n          }\n        },\n      },\n    ];\n\n    let width = 0;\n    columns.map(col => {\n      width += col.width || 0;\n    });\n    return (\n      <div className={styles.LtlOrder}>\n        <TotalComponent {...statistics} />\n\n        <Card\n          title=\"零担订单\"\n          bordered={true}\n          extra={\n            <div>\n              {permissions.includes('add') ? (\n                <Link to=\"/ltlOrder/add\">\n                  <Button style={{ marginRight: '20px' }}>零担开单</Button>\n                </Link>\n              ) : (\n                ''\n              )}\n              <Button type=\"primary\" onClick={this.setImportStatus}>\n                订单导入\n              </Button>\n            </div>\n          }\n        >\n          <Condition onSearch={this.onSearch} />\n          <MyTable\n            columns={columns}\n            rowKey=\"utmsPartOrderId\"\n            dataSource={list}\n            scroll={{ x: width }}\n            loading={loading}\n            pagination={{\n              current,\n              onChange: this.onFetch,\n              onShowSizeChange: this.onShowSizeChange,\n              total: count,\n            }}\n          />\n        </Card>\n        <PageBottom\n          leftChild={\n            <PageBottomCheck\n              total={list.filter(item => item.status === '待配载').length}\n              checked={\n                list.filter(item => item.isChecked && item.status === '待配载')\n                  .length\n              }\n              onAllCheckChanged={this.props.onAllCheckChanged}\n            />\n          }\n          rightChild={\n            <PageBottomButtons\n              buttons={[\n                <Button key={2} type=\"primary\" onClick={this.onDeleteOrders}>\n                  批量删除\n                </Button>,\n              ]}\n            />\n          }\n        />\n        <ImportOrder\n          importData={importData}\n          onImport={importOrders}\n          onReImport={importModifyOrders}\n          editImportValid={editImportValid}\n          setImportStatus={setImportStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getOrderListData: (data: any) => dispatch(actions.getOrderListData(data)),\n    onCheckedChanged: (record: any) => dispatch(actions.checkedChanged(record)),\n    onAllCheckChanged: checked => dispatch(actions.allCheckedChanged(checked)),\n    onDeleteOrders: (list: string[]) => dispatch(actions.deleteOrders(list)),\n    importOrders: data => dispatch(actions.importOrders(data)),\n    importModifyOrders: data => dispatch(actions.importModifyOrders(data)),\n    editImportValid: data => dispatch(actions.editImportValid(data)),\n    backToImport: () => dispatch(actions.backToImport()),\n    setImportStatus: status => dispatch(actions.setImportStatus(status)),\n    getOrderStatistics: status => dispatch(actions.getOrderStatistics()),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    data: makeSelectOrderData(selectState),\n    count: makeSelectOrderCount(selectState),\n    importData: makeSelectImportData(selectState),\n    statistics: makeSelectOrderStatistics(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(withConnect)(LtlOrder);\n};\n","/**\n * LtlOrder selectors\n * @author djd\n * @date 2018/9/13 下午1:48:50\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectOrderData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n\nexport const makeSelectOrderCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('count'));\n\nexport const makeSelectImportData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('import'));\nexport const makeSelectOrderStatistics = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('statistics'),\n  );\n"],"sourceRoot":""}