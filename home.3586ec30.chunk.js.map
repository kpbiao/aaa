{"version":3,"sources":["webpack:///delegated ./node_modules/echarts/lib/component/legend.js from dll-reference dll","webpack:///delegated ./node_modules/echarts/lib/chart/line.js from dll-reference dll","webpack:///delegated ./node_modules/echarts/lib/component/tooltip.js from dll-reference dll","webpack:///./src/components/NoticeBoard/NoticeBoard.tsx","webpack:///./src/modules/module.home/index.tsx","webpack:///./src/modules/module.home/selectors.ts","webpack:///./src/modules/module.home/index.module.less","webpack:///delegated ./node_modules/echarts/lib/echarts.js from dll-reference dll","webpack:///delegated ./node_modules/echarts/lib/component/title.js from dll-reference dll","webpack:///./src/components/NoticeBoard/index.module.less"],"names":["module","exports","__webpack_require__","NoticeBoard_NoticeBoard","react","_this$props","this","props","dataSource","length","listStyle","divList","i","push","Link","to","key","concat","className","NoticeBoard_index_module_default","a","NoticeItemWrap","title","style","marginLeft","content","gmtCreate","substring","carousel","vertical","autoplay","dots","color","_this$props2","boardTitle","bodyStyle","card","headStyle","borderBottom","NoticeBoard","extra","display","icon","type","theme","getCarouselItem","defaultProps","components_NoticeBoard_NoticeBoard","module_home_option","axisPointer","lineStyle","grid","containLabel","left","right","series","data","itemStyle","showSymbol","symbol","tooltip","backgroundColor","extraCssText","formatter","padding","textStyle","trigger","xAxis","axisLabel","axisLine","width","axisTick","show","interval","yAxis","name","nameTextStyle","align","splitLine","module_home_Home","chartEl","chart","_this2","echartsfrom_dll_reference_dll_default","init","setOption","getHomeData","window","onresize","resize","chartData","index_module_default","Home","spin","tip","spinning","loading","row","sectionWrap","getTodoList","gutter","col","xs","lg","md","getStatDayTrade","getOrderStatistics","getNoticePlan","getTrand","trandStatisticsJs","get","seriesData","xAxisData","map","item","index","dateArr","date","split","parseInt","tradeCount","params","values","dataIndex","month","Number","axisValue","value","_this3","situationCont","ref","height","todoListJs","Grid","CardGridStyle","toDoValue","waitStowed","pendingScheduling","waitReturn","todayCountDataJs","fontSize","totalPOWO","distributionPOWO","haveSignedInPOWO","notSignedPOWO","totalTO","pendingSchedulingTO","distributionTO","finishedTO","noticeDataSource","lineHeight","overflow","__webpack_exports__","_ref","routeId","actions","selectState","state","mapStateToProps","Object","libfrom_dll_reference_dll","selectors_makeSelectData","error","selectors_makeSelectError","selectors_makeSelectLoading","withConnect","es","dispatch","getOrderTodayStatistics","getStatDayTradeList","redux"],"mappings":"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","file":"home.3586ec30.chunk.js","sourcesContent":["module.exports = (__webpack_require__(\"XuQu\"))(\"0o9m\");","module.exports = (__webpack_require__(\"XuQu\"))(\"75ce\");","module.exports = (__webpack_require__(\"XuQu\"))(\"AH3D\");","/**\n * NoticeBoard Component\n * @author hefan\n * @date 2018/9/13 下午3:49:56\n */\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Card from 'antd/es/card';\nimport Carousel from 'antd/es/carousel';\nimport Icon from 'antd/es/icon';\n\nimport styles from './index.module.less';\n\nexport interface INoticeBoardProps {\n  dataSource: string[];\n  length: number;\n  headStyle?: {};\n  bodyStyle?: {};\n  boardTitle: string | React.ReactNode;\n  listStyle?: {};\n}\n\nclass NoticeBoard extends React.PureComponent<INoticeBoardProps> {\n  static defaultProps = {\n    length: 3,\n  };\n\n  public getCarouselItem() {\n    const { dataSource, length, listStyle } = this.props;\n    if (dataSource && dataSource.length) {\n      const divList = [];\n      for (let i = 0; i < length; i++) {\n        if (dataSource[i]) {\n          divList.push(\n            <Link\n              to=\"/company/proclamation\"\n              key={`noticeboard_div_${i}`}\n              className={styles.NoticeItemWrap}\n            >\n              <span>[{dataSource[i].title}]</span>\n              <span style={{ marginLeft: '5px' }}>{dataSource[i].content}</span>\n              <span>{dataSource[i].gmtCreate.substring(5, 10)}</span>\n            </Link>,\n          );\n        }\n      }\n      return (\n        <div>\n          <Carousel vertical autoplay dots={false}>\n            {divList}\n          </Carousel>\n        </div>\n      );\n    }\n    return <p style={{ color: '#9BA0AA' }}>公司暂无相关公告信息</p>;\n  }\n  /**\n   * render\n   */\n  public render() {\n    const { boardTitle, bodyStyle } = this.props;\n    return (\n      <Card\n        title={boardTitle}\n        headStyle={{ borderBottom: 'none' }}\n        bodyStyle={bodyStyle}\n        className={styles.NoticeBoard}\n        extra={\n          <Link\n            to=\"/company/proclamation\"\n            style={{\n              display: 'inline-block',\n              color: '#9BA0AA',\n            }}\n          >\n            更多\n            <Icon type=\"right\" theme=\"outlined\" />\n          </Link>\n        }\n      >\n        {this.getCarouselItem()}\n      </Card>\n    );\n  }\n}\n\nexport default NoticeBoard;\n","/**\n * 首页\n */\nimport { Map } from 'immutable';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  makeSelectData,\n  makeSelectError,\n  makeSelectLoading,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nimport Card from 'antd/es/card';\nimport Col from 'antd/es/col';\nimport Row from 'antd/es/row';\nimport Spin from 'antd/es/spin';\n\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/tooltip';\nimport echarts from 'echarts/lib/echarts';\n\nimport NoticeBoard from '../../components/NoticeBoard';\n\nconst option = {\n  axisPointer: {\n    lineStyle: {\n      color: '#D8D8D8',\n    },\n  },\n  grid: {\n    containLabel: true,\n    left: 40,\n    right: 16,\n  },\n  series: [\n    {\n      data: [],\n      itemStyle: {\n        color: '#6AC9FF',\n      },\n      showSymbol: false,\n      symbol: 'circle',\n      type: 'line',\n    },\n  ],\n  tooltip: {\n    axisPointer: {\n      type: 'line',\n    },\n    backgroundColor: 'rgba(255,255,255,0.95)',\n    extraCssText: 'box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);',\n    formatter: '{b}<br/>订单数：{c}单',\n    padding: [10, 15, 10, 15],\n    textStyle: '#1E283C',\n    trigger: 'axis',\n  },\n  xAxis: {\n    axisLabel: {\n      color: '#9BA0AA',\n    },\n    axisLine: {\n      lineStyle: {\n        color: '#9BA0AA',\n        width: 2,\n      },\n    },\n    axisTick: {\n      show: false,\n    },\n    data: [],\n    interval: 0,\n    type: 'category',\n  },\n  yAxis: {\n    axisLabel: {\n      color: '#9BA0AA',\n    },\n    axisLine: {\n      show: false,\n    },\n    axisTick: {\n      show: false,\n    },\n    name: '订单数',\n    nameTextStyle: {\n      align: 'right',\n      color: '#9BA0AA',\n      padding: [0, 50, 0, 0],\n    },\n    splitLine: {\n      lineStyle: {\n        color: '#E4E7EF',\n        type: 'dotted',\n      },\n    },\n    type: 'value',\n  },\n};\n\nexport interface IHomeProps {\n  children: React.ReactChildren;\n  getHomeData: () => void;\n  getOrderStatistics: () => void;\n  getStatDayTradeList: () => void;\n  loading: boolean;\n  data: Map<string, any>;\n}\n\nclass Home extends React.PureComponent<IHomeProps> {\n  private chartEl: HTMLDivElement;\n  private chart: echarts.ECharts;\n  public componentDidMount() {\n    this.chart = echarts.init(this.chartEl);\n    this.chart.setOption(option);\n\n    this.props.getHomeData();\n\n    window.onresize = () => {\n      this.chart.resize();\n    };\n  }\n  public componentDidUpdate() {\n    this.chartData();\n  }\n  public render() {\n    return (\n      <div className={styles.Home}>\n        <Spin tip=\"Loading...\" spinning={this.props.loading}>\n          <Row className={styles.sectionWrap}>{this.getTodoList()}</Row>\n          <Row gutter={12} className={styles.sectionWrap}>\n            <Col xs={24} lg={16}>\n              <Row gutter={12}>\n                <Col xs={24} md={12}>\n                  {this.getStatDayTrade()}\n                </Col>\n                <Col xs={24} md={12}>\n                  {this.getOrderStatistics()}\n                </Col>\n              </Row>\n            </Col>\n            <Col xs={24} lg={8}>\n              {this.getNoticePlan()}\n            </Col>\n          </Row>\n          <Row>{this.getTrand()}</Row>\n        </Spin>\n      </div>\n    );\n  }\n  private chartData() {\n    const { data } = this.props;\n    const trandStatisticsJs = data.get('trandStatistics') || [];\n    let month: number;\n    const seriesData: number[] = [];\n    const xAxisData: string[] = [];\n\n    trandStatisticsJs.map((item, index) => {\n      const dateArr = item.date.split('-');\n\n      if (index === 0) {\n        month = parseInt(dateArr[0], 10);\n      }\n      xAxisData.push(`${parseInt(dateArr[1], 10)}日`);\n      seriesData.push(item.tradeCount);\n    });\n\n    option.tooltip.formatter = (params: []) => {\n      const values = params[0];\n      const item = trandStatisticsJs[params[0].dataIndex];\n      const month = Number(item.date.split('-')[0]);\n      return `${month}月${\n        values.axisValue\n      }<p style=\"color: #1E283C;margin-top:5px;\">订单数：${values.value}单</p>`;\n    };\n    // `${month}月{b}<p style=\"color: #1E283C;margin-top:5px;\">订单数：{c}单</p>`\n    option.series[0].data = seriesData;\n    option.xAxis.data = xAxisData;\n\n    this.chart.setOption(option);\n  }\n  private getTrand() {\n    return (\n      <Card\n        bodyStyle={{ padding: 0 }}\n        title=\"近30日用车趋势\"\n        headStyle={{ borderBottom: 'none' }}\n        className={styles.situationCont}\n      >\n        <div\n          ref={chart => (this.chartEl = chart)}\n          style={{ width: '100%', height: '423px' }}\n        />\n      </Card>\n    );\n  }\n  private getTodoList() {\n    const { data } = this.props;\n    const todoListJs = data.get('todoList');\n    return (\n      <Card\n        title=\"待办事项\"\n        headStyle={{ borderBottom: 'none' }}\n        bodyStyle={{ padding: 0 }}\n        className={styles.situationCont}\n      >\n        <Link to=\"/stowage\" key={'todolist_1'}>\n          <Card.Grid className={styles.CardGridStyle}>\n            待配载\n            <span className={styles.toDoValue}>{todoListJs.waitStowed}</span>\n          </Card.Grid>\n        </Link>\n        <Link to=\"/transportDispatch\" key={'todolist_2'}>\n          <Card.Grid className={styles.CardGridStyle}>\n            待调度\n            <span className={styles.toDoValue}>\n              {todoListJs.pendingScheduling}\n            </span>\n          </Card.Grid>\n        </Link>\n        <Link to=\"/waybill/list\" key={'todolist_3'}>\n          <Card.Grid className={styles.CardGridStyle}>\n            待回单\n            <span className={styles.toDoValue}>{todoListJs.waitReturn}</span>\n          </Card.Grid>\n        </Link>\n      </Card>\n    );\n  }\n  private getOrderStatistics() {\n    const { data } = this.props;\n    const todayCountDataJs = data.get('todayCountData') || {};\n    return (\n      <Card title=\"当日订单概况\" className={styles.situationCont}>\n        <p>\n          总订单\n          <span style={{ fontSize: '16px' }}>\n            {todayCountDataJs.totalPOWO || 0}\n          </span>\n          单\n        </p>\n        <p>\n          配送中\n          <span>{todayCountDataJs.distributionPOWO || 0}</span>单\n        </p>\n        <p>\n          已签收\n          <span>{todayCountDataJs.haveSignedInPOWO || 0}</span>单\n        </p>\n        <p>\n          未签收\n          <span>{todayCountDataJs.notSignedPOWO || 0}</span>单\n        </p>\n      </Card>\n    );\n  }\n  private getStatDayTrade() {\n    const { data } = this.props;\n    const todayCountDataJs = data.get('todayCountData') || {};\n\n    return (\n      <Card\n        title=\"当日出车概况\"\n        extra={<Link to=\"/transportCapacity\">查看实时大屏</Link>}\n        className={styles.situationCont}\n      >\n        <p>\n          总用车\n          <span style={{ fontSize: '16px' }}>\n            {todayCountDataJs.totalTO || 0}\n          </span>\n          车次\n        </p>\n        <p>\n          待调度\n          <span>{todayCountDataJs.pendingSchedulingTO || 0}</span>\n          车次\n        </p>\n        <p>\n          运输中\n          <span>{todayCountDataJs.distributionTO || 0}</span>\n          车次\n        </p>\n        <p>\n          已完成\n          <span>{todayCountDataJs.finishedTO || 0}</span>\n          车次\n        </p>\n      </Card>\n    );\n  }\n  private getNoticePlan() {\n    const { data } = this.props;\n    const noticeDataSource = data.get('noticeList') || {};\n\n    return (\n      <NoticeBoard\n        boardTitle=\"公司公告\"\n        dataSource={noticeDataSource}\n        length={3}\n        bodyStyle={{\n          height: '136px',\n          padding: '0 16px 4px 16px',\n          lineHeight: '1.5',\n          overflow: 'hidden',\n        }}\n      />\n    );\n  }\n}\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getHomeData: () => dispatch(actions.getHomeData()),\n    getOrderStatistics: () => dispatch(actions.getOrderTodayStatistics()),\n    getStatDayTradeList: () => dispatch(actions.getStatDayTradeList()),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    data: makeSelectData(selectState),\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    // orderStatistics: makeSelectOrderStatisticsData(selectState),\n    // statDayTradeList: makeSelectStatDayTradeListData(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(withConnect)(Home);\n};\n","/**\n * The app state selectors\n */\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, state => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, state => state.get('loading'));\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, state => state.get('data'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"tjs-7\",\"sectionWrap\":\"_2SGOa\",\"CardGridStyle\":\"_1XW0N\",\"toDoValue\":\"_1oNvk\",\"situationCont\":\"K134x\"};","module.exports = (__webpack_require__(\"XuQu\"))(\"ProS\");","module.exports = (__webpack_require__(\"XuQu\"))(\"Ynxi\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoticeBoard\":\"_25txf\",\"NoticeItemWrap\":\"_2RKnX\"};"],"sourceRoot":""}