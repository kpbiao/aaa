{"version":3,"sources":["webpack:///./src/modules/module.staff.authorization/index.tsx"],"names":["StaffAuthorization","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hanldUsers","count","newData","utmsUsersId","userName","realName","mobileNumber","departmentNames","postNames","map","item","i","push","setState","staff","showModal","visible","handleCancel","react__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_0__","onClick","components_StaffAuthorizationSettingModal__WEBPACK_IMPORTED_MODULE_3__","onCancel","onOk","__webpack_exports__","_ref","routeId","connectModel","actions","mapStateToProps","Object","reselect__WEBPACK_IMPORTED_MODULE_2__","mapDispatchToProps","dispatch"],"mappings":"w8BAmCMA,cAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAFRO,WACmB,EAAAN,EAwBXO,WAAa,WACnBP,EAAKQ,MAAQR,EAAKQ,OAAS,EAE3B,IAkBMC,OAhBFC,YAAa,KACbC,SAAU,QACVC,SAAU,qBACVC,aAAc,cACdC,gBAAiB,qBACjBC,UAAW,iBAGXL,YAAa,KACbC,SAAU,QACVC,SAAU,eACVC,aAAc,cACdC,gBAAiB,qBACjBC,UAAW,iBAIVC,IAAI,SAACC,EAAMC,GACVlB,EAAKQ,OAASU,GAChBT,EAAQU,KAAKF,KAGjBjB,EAAKoB,UACHC,MAAOZ,IAETT,EAAKQ,MAAQR,EAAKQ,MAAQ,GAtDTR,EAyDXsB,UAAY,WAClBtB,EAAKO,aACLP,EAAKoB,UACHG,SAAS,KA5DMvB,EAgEXwB,aAAe,WACrBxB,EAAKoB,UACHG,SAAS,KAhEXvB,EAAKM,OACHiB,SAAS,EACTF,UAJerB,yPAFYyB,EAAA,yDASf,IACNF,EAAYrB,KAAKI,MAAjBiB,QACR,OACEE,EAAA,yBACEA,EAAA,cAACC,EAAA,GAAOC,QAASzB,KAAKoB,WAAtB,gBACAG,EAAA,cAACG,EAAA,GACCL,QAASA,EACTM,SAAU3B,KAAKsB,aACfM,KAAM5B,KAAKsB,aACXH,MAAOnB,KAAKI,MAAMe,8CAuD5BU,EAAA,iBAAeC,GAA+BA,EAA5BC,QAChB,OAAOC,EADqCF,EAAnBE,cACL,SAAAC,GAClB,OACEC,gBAAiBC,OAAAC,EAAA,yBAAAD,KAGjBE,mBAAoB,SAAAC,GAAQ,YALzBN,CASJpC","file":"staff-authorization.dd49ec93.chunk.js","sourcesContent":["/**\n * StaffAuthorization Component\n * @author yanrong.tian\n * @date 2018-9-19 13:41:45\n */\nimport {\n  Button,\n  Card,\n  Col,\n  Divider,\n  Icon,\n  Input,\n  message,\n  Popconfirm,\n  Row,\n  Table,\n  Tag,\n} from 'antd';\nimport { PageBottom } from 'components/PageBottom';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectStateFn } from './selectors';\n\nimport StaffAuthorizationSettingModal from 'components/StaffAuthorizationSettingModal';\n\nimport styles from './index.module.less';\n\ninterface IProps {}\ninterface IState {\n  visible: boolean;\n  staff: any[];\n}\n\nclass StaffAuthorization extends React.PureComponent<IProps> {\n  state: IState;\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      staff: [],\n    };\n  }\n  public render() {\n    const { visible } = this.state;\n    return (\n      <div>\n        <Button onClick={this.showModal}>显示</Button>\n        <StaffAuthorizationSettingModal\n          visible={visible}\n          onCancel={this.handleCancel}\n          onOk={this.handleCancel}\n          staff={this.state.staff}\n        />\n      </div>\n    );\n  }\n\n  // 给一个员工分配权限，标记出之前已分配的权限；\n  // 给一个以上的员工分配权限，不标记之前已分配的权限；\n  private hanldUsers = () => {\n    this.count = this.count || 0;\n\n    const data = [\n      {\n        utmsUsersId: '44',\n        userName: '15119',\n        realName: '郭井阳',\n        mobileNumber: '15968425614',\n        departmentNames: '运营部',\n        postNames: '调度',\n      },\n      {\n        utmsUsersId: '45',\n        userName: '17733',\n        realName: '王红',\n        mobileNumber: '15968425614',\n        departmentNames: '运营部',\n        postNames: '调度',\n      },\n    ];\n    const newData = [];\n    data.map((item, i) => {\n      if (this.count <= i) {\n        newData.push(item);\n      }\n    });\n    this.setState({\n      staff: newData,\n    });\n    this.count = this.count + 1;\n  };\n\n  private showModal = () => {\n    this.hanldUsers();\n    this.setState({\n      visible: true,\n    });\n  };\n\n  private handleCancel = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n}\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    return {\n      mapStateToProps: createStructuredSelector({\n        // selectState: (storeKey: string) => selectStateFn(routeId, storeKey),\n      }),\n      mapDispatchToProps: dispatch => ({\n        // actions\n      }),\n    };\n  })(StaffAuthorization);\n};\n"],"sourceRoot":""}