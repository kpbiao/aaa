{"version":3,"sources":["webpack:///./src/modules/module.vehicle.order.detail/index.tsx","webpack:///./src/modules/module.vehicle.order.detail/selectors.ts"],"names":["module_vehicle_order_detail_VehicleOrderDetail","react","this","getDetail","className","index_module_default","a","VehicleOrderDetail","renderTransportInfo","renderBasicInfo","renderGoodsInfo","renderServiceInfo","renderCostInfo","searchParams","props","orderWholeCarId","id","detail","FormDetailCard","title","row","gutter","col","label","value","get","GLOBAL","emptyRecord","data","name","key","_this","Object","immutable_esfrom_dll_reference_dll","map","item","renderAddress","toArray","__webpack_exports__","_ref","routeId","actions","selectState","state","mapStateToProps","libfrom_dll_reference_dll","error","selectors_makeSelectError","loading","selectors_makeSelectLoading","selectors_makeSelectDetail","withConnect","es","dispatch","options","redux"],"mappings":"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","file":"vehicle-order-detail.b63eca0a.chunk.js","sourcesContent":["/**\n * VehicleOrderDetail Component\n * @author lhf\n * @date 2018-9-15 10:48:48\n */\nimport { List, Map } from 'immutable';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Col from 'antd/es/col';\nimport Row from 'antd/es/row';\nimport {\n  FormDetailCard,\n  FormDetailField,\n  formLayoutCols2,\n  formLayoutCols3,\n  gutter,\n} from 'components/FormDetailCard';\nimport GLOBAL from 'utils/GLOBAL';\nimport styles from './index.module.less';\nimport {\n  makeSelectDetail,\n  makeSelectError,\n  makeSelectLoading,\n} from './selectors';\n\nexport interface IVehicleOrderDetailProps {\n  children: React.ReactChildren;\n  detail: Map<string, any>;\n  searchParams: {\n    id: number;\n  };\n  getDetail: (options?: object) => any;\n}\n\nclass VehicleOrderDetail extends React.PureComponent<IVehicleOrderDetailProps> {\n  public componentDidMount() {\n    this.getDetail();\n  }\n\n  public render() {\n    return (\n      <div className={styles.VehicleOrderDetail}>\n        {this.renderTransportInfo()}\n        {this.renderBasicInfo()}\n        {this.renderGoodsInfo()}\n        {this.renderServiceInfo()}\n        {this.renderCostInfo()}\n      </div>\n    );\n  }\n\n  private getDetail() {\n    const { searchParams } = this.props;\n    this.props.getDetail({\n      orderWholeCarId: searchParams.id,\n    });\n  }\n\n  // 运输信息\n  private renderTransportInfo() {\n    const { detail } = this.props;\n    const status = ['待发货', '待调度', '配送中', '已签收', '未签收'];\n    const tradeStatus = [\n      '待调度',\n      '待接单',\n      '待签到',\n      '待装货',\n      '待卸货',\n      '已完成',\n      '已取消',\n      '待改派',\n    ];\n    return (\n      <FormDetailCard title=\"运输信息\">\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField label=\"订单号\" value={detail.get('orderNumber')} />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"状态\"\n              value={status[detail.get('status')] || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"运单号\"\n              value={detail.get('tradeNumber') || GLOBAL.emptyRecord}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"状态\"\n              value={\n                tradeStatus[detail.get('tradeStatus')] || GLOBAL.emptyRecord\n              }\n            />\n          </Col>\n        </Row>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"司机姓名\"\n              value={detail.get('driverName') || GLOBAL.emptyRecord}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"司机电话\"\n              value={detail.get('driverPhone') || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n      </FormDetailCard>\n    );\n  }\n\n  // 渲染装卸地\n  private renderAddress(data) {\n    const name = data.get('loadType') === 1 ? '卸货地' : '装货地';\n    return (\n      <Row gutter={gutter} key={data.get('loadInfoId')}>\n        <Col {...formLayoutCols3}>\n          <FormDetailField label={name} value={data.get('pointAddress')} />\n        </Col>\n        <Col {...formLayoutCols3}>\n          <FormDetailField\n            label=\"联系人\"\n            value={data.get('contact') || GLOBAL.emptyRecord}\n          />\n        </Col>\n        <Col {...formLayoutCols3}>\n          <FormDetailField\n            label=\"联系电话\"\n            value={data.get('phone') || GLOBAL.emptyRecord}\n          />\n        </Col>\n      </Row>\n    );\n  }\n\n  // 运输信息\n  private renderBasicInfo() {\n    const { detail } = this.props;\n    return (\n      <FormDetailCard title=\"基本信息\">\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"选择客户\"\n              value={detail.get('customerName')}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"角色码\"\n              value={detail.get('customerCode')}\n            />\n          </Col>\n        </Row>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"所需车型\"\n              value={\n                detail.get('carLong')\n                  ? detail.get('carLong') / 1000 +\n                    '米' +\n                    detail.get('carStruct')\n                  : detail.get('carStruct')\n              }\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"用车时间\"\n              value={detail.get('useCarDate')}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"要求送达时间\"\n              value={detail.get('requireDate')}\n            />\n          </Col>\n        </Row>\n        {detail\n          .get('loadList', List())\n          .map(item => this.renderAddress(item))\n          .toArray()}\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols2}>\n            <FormDetailField\n              label=\"备注\"\n              value={detail.get('remark') || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n      </FormDetailCard>\n    );\n  }\n\n  // 货物信息\n  private renderGoodsInfo() {\n    const { detail } = this.props;\n    return (\n      <FormDetailCard title=\"货物信息\">\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField label=\"货物名称\" value={detail.get('goodsName')} />\n          </Col>\n        </Row>\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"重量(千克)\"\n              value={detail.get('goodsWeight')}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"体积(方)\"\n              value={detail.get('goodsVolume')}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"件数(件)\"\n              value={detail.get('goodsNumber')}\n            />\n          </Col>\n        </Row>\n      </FormDetailCard>\n    );\n  }\n\n  // 增值服务信息\n  private renderServiceInfo() {\n    const { detail } = this.props;\n    return (\n      <FormDetailCard title=\"增值服务\">\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"回单\"\n              value={detail.get('isReceipt') ? '是' : '否'}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"代收(元)\"\n              value={detail.get('collictionAmount') || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n      </FormDetailCard>\n    );\n  }\n  // 货物信息\n  private renderCostInfo() {\n    const { detail } = this.props;\n    return (\n      <FormDetailCard title=\"运费信息\">\n        <Row gutter={gutter}>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"客户运费(元)\"\n              value={detail.get('customerFreight') || GLOBAL.emptyRecord}\n            />\n          </Col>\n          <Col {...formLayoutCols3}>\n            <FormDetailField\n              label=\"司机运费(元)\"\n              value={detail.get('driverFreight') || GLOBAL.emptyRecord}\n            />\n          </Col>\n        </Row>\n      </FormDetailCard>\n    );\n  }\n}\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getDetail: options => dispatch(actions.getDetail(options)),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    detail: makeSelectDetail(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(withConnect)(VehicleOrderDetail);\n};\n","/**\n * VehicleOrderDetail selectors\n * @author lhf\n * @date 2018-9-15 10:48:48\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectDetail = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => {\n    return state.get('data');\n  });\n"],"sourceRoot":""}