{"version":3,"sources":["webpack:///./src/modules/module.home.update/index.module.less","webpack:///./src/modules/module.home.update/selectors.ts","webpack:///./src/modules/module.home.update/index.tsx"],"names":["module","exports","HomeUpdate","HomeUpdate__li","HomeUpdate__version","HomeUpdate__card","initialState","Object","immutable_esfrom_dll_reference_dll","data","error","loading","module_home_update_HomeUpdate","conditions","current","skipCount","pageSize","renderDescription","html","match","split","map","item","index","key","push","react","renderVersion","Lis","_this","props","toJS","reduce","total","className","index_module_default","a","concat","utmsVersionManageId","style","fontSize","versionNo","toUpperCase","indexOf","color","gmtCreate","substring","card","bodyStyle","paddingBottom","position","top","program","description","length","paddingTop","border","textAlign","icon","type","theme","marginRight","onScroll","e","hasMore","hasmoredata","clientHeight","target","scrollHeight","scrollTop","getAsyncData","this","title","marginTop","__webpack_exports__","_ref","routeId","connectModel","actions","selectState","currentState","state","get","mapStateToProps","libfrom_dll_reference_dll","arguments","undefined","selectors_makeSelectLoading","selectors_makeSelectData","selectors_makeSelectHasMore","mapDispatchToProps","dispatch","param"],"mappings":"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","file":"home-update.399a30fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeUpdate\":\"_3_0Qd\",\"HomeUpdate__li\":\"_2kmMZ\",\"HomeUpdate__version\":\"_1C_uf\",\"HomeUpdate__card\":\"_3X_97\"};","/**\n * HomeUpdate selectors\n * @author ggm\n * @date 2018/10/26 下午1:18:24\n */\nimport { List, Map } from 'immutable';\nimport { createSelector } from 'reselect';\n// The initial state of the App\nconst initialState = Map({\n  data: List(),\n  error: false,\n  loading: false,\n});\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('error'),\n  );\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('data'),\n  );\n\nexport const makeSelectHasMore = selectState =>\n  createSelector(selectState, (state: Map<string, any> = initialState) =>\n    state.get('hasmoredata'),\n  );\n","/**\n * HomeUpdate Component\n * @author ggm\n * @date 2018/10/26 下午1:18:24\n */\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Card from 'antd/es/card';\nimport Icon from 'antd/es/icon';\n\nimport { List, Map } from 'immutable';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  makeSelectData,\n  makeSelectError,\n  makeSelectHasMore,\n  makeSelectLoading,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nexport interface IHomeUpdateProps {\n  children: React.ReactChildren;\n  data: List<Map<string, any>>;\n  hasmoredata: boolean;\n  getAsyncData: (param?: any) => any;\n}\n\nclass HomeUpdate extends React.PureComponent<IHomeUpdateProps> {\n  conditions = {\n    current: 1,\n    skipCount: 0,\n    pageSize: 10,\n  };\n  public componentDidMount() {\n    this.props.getAsyncData(this.conditions);\n  }\n  public render() {\n    return (\n      <Card\n        title=\"联运配送管理系统更新记录\"\n        className={styles.HomeUpdate}\n        onScroll={this.onScroll}\n        bodyStyle={{ marginTop: '15px' }}\n      >\n        {this.renderVersion()}\n      </Card>\n    );\n  }\n  private renderDescription = data => {\n    const dataArr = data.match(/\\n/g) ? data.split(/\\n/g) : [data];\n    const html = [];\n    dataArr.map((item, index) => {\n      const key = 'description' + index;\n      html.push(<p key={key}>{item}</p>);\n    });\n    return html;\n  };\n  private renderVersion = () => {\n    const versions = this.props.data.toJS();\n    const Lis = versions.reduce((total, item, index) => {\n      total.push(\n        <li\n          className={styles.HomeUpdate__li}\n          key={`${item.utmsVersionManageId}__${index}`}\n        >\n          <div className={styles.HomeUpdate__version}>\n            <p style={{ fontSize: '16px' }}>\n              {item.versionNo\n                ? item.versionNo.toUpperCase().indexOf('V') === 0\n                  ? item.versionNo.toUpperCase()\n                  : `V${item.versionNo}`\n                : ''}\n            </p>\n            <p style={{ color: '#9BA0AA' }}>\n              {item.gmtCreate ? item.gmtCreate.substring(0, 10) : ''}\n            </p>\n          </div>\n          <Card\n            className={styles.HomeUpdate__card}\n            bodyStyle={{\n              paddingBottom: '50px',\n              position: 'relative',\n              top: '-25px',\n            }}\n          >\n            <h3>{item.program}</h3>\n            {this.renderDescription(item.description)}\n          </Card>\n        </li>,\n      );\n      return total;\n    }, []);\n    if (Lis.length > 0) {\n      return <ul style={{ paddingTop: '15px' }}>{Lis}</ul>;\n    } else {\n      return (\n        <Card\n          style={{\n            border: 'none',\n            textAlign: 'center',\n            fontSize: '14px',\n            color: 'rgba(0, 0, 0, 0.45)',\n          }}\n        >\n          <Icon type=\"frown\" theme=\"outlined\" style={{ marginRight: '5px' }} />\n          暂无更新记录\n        </Card>\n      );\n    }\n  };\n  private onScroll = e => {\n    const hasMore = this.props.hasmoredata;\n    const clientHeight = e.target.clientHeight;\n    const scrollHeight = e.target.scrollHeight;\n    const scrollTop = e.target.scrollTop;\n    if (clientHeight + scrollTop >= scrollHeight) {\n      this.conditions.skipCount =\n        this.conditions.current * this.conditions.pageSize;\n      this.conditions.current += 1;\n      if (hasMore) {\n        this.props.getAsyncData(this.conditions);\n      }\n    }\n  };\n}\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId);\n    return {\n      mapStateToProps: createStructuredSelector({\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n        data: makeSelectData(currentState),\n        hasmoredata: makeSelectHasMore(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getAsyncData: param => dispatch(actions.getAsyncData(param)),\n      }),\n    };\n  })(HomeUpdate);\n};\n"],"sourceRoot":""}