{"version":3,"sources":["webpack:///./src/modules/module.address.manage/components/map/index.module.less","webpack:///./src/modules/module.address.manage/ctrls/infoWindow.module.less","webpack:///./src/modules/module.address.manage/ctrls/customPoint.ts","webpack:///./src/modules/module.address.manage/ctrls/infoWindow.ts","webpack:///./src/modules/module.address.manage/components/map/index.tsx","webpack:///./src/modules/module.address.manage/index.tsx","webpack:///./src/modules/module.address.manage/selectors.ts"],"names":["module","exports","AddressMap","AddressMap__Checkbox","AddressMap__Box","divInfoWindow","divf","curr","CustomPoint","_BMap$Overlay","_ref","_this","data","onClick","onShowInfo","onHideInfo","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","point","BMap","Point","longitude","latitude","_inherits","Overlay","key","value","map","_this2","div","document","createElement","style","position","width","height","cursor","zIndex","depotType","innerHTML","onclick","e","onmouseenter","onmouseout","getPanes","labelPane","appendChild","pixel","pointToOverlayPixel","left","x","pointWidth","top","y","pointHeight","infoWindow_InfoWindow","InfoWindow","infoWindow_classCallCheck","infoWindow_possibleConstructorReturn","infoWindow_getPrototypeOf","infoWindow_inherits","concat","className","infoWindow_module_default","a","divCurrow","content","fx","fy","cx","cy","posDiv","parentElement","container","getContainer","mWidth","offsetWidth","mx","offsetHeight","offsetLeft","mt","offsetTop","transform","_get","prototype","draw","undefined","showValue","depotName","createOperatorName","contactWay","map_AddressMap","_React$PureComponent","props","map_classCallCheck","map_possibleConstructorReturn","map_getPrototypeOf","state","divMap","infoWindow","removeMapElement","element","removeChild","setPosition","addOverlay","setData","show","hide","handleChange","checkedList","setState","depot","d","store","item","loading","map_inherits","react","initMap","nextProps","shallowequal_default","initMarkes","_this3","length","mks","forEach","i","cp","push","pt","Object","main","setViewport","_this4","Map","minZoom","maxZoom","enableMapClick","enableScrollWheelZoom","addEventListener","querySelector","centerAndZoom","_this5","map_index_module_default","es_checkbox","Group","onChange","spin","spinning","ref","node","Option","es_select","module_address_manage_AddressManage","skipCount","pageSize","current","activeKey","renderMap","mapData","get","province","city","region","address","contact","isDefault","toArray","handleTabsChange","getMapData","coordinateType","onSearchHandle","fetchDataFun","handleReset","form","resetFields","paginationChange","params","setDefaultHanlde","utmsDepotId","_this$state","formData","getFieldsValue","setDefault","_objectSpread","delAddressHandle","_this$state2","delAddressData","operations","es_button","type","addAddressData","card","tabs","tabBarExtraContent","TabPane","tab","getFields","getTable","columns","render","record","whiteSpace","title","dataIndex","text","OptionButtons","href","editAddressData","popconfirm","onConfirm","_this$props","dataCount","paginationConfig","total","onShowSizeChange","dataSource","customerName","MyTable","pagination","getFieldDecorator","es_form","layout","marginBottom","FormItem","label","initialValue","CustomerSelect","minWidth","showDefaultValue","input","placeholder","htmlType","getAsyncData","AddressManageForm","create","__webpack_exports__","routeId","connectModel","actions","selectState","currentState","immutable_esfrom_dll_reference_dll","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectDataCount","error","selectors_makeSelectError","selectors_makeSelectLoading","selectors_makeSelectMapData","mapDispatchToProps","dispatch","id"],"mappings":"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","file":"address-manage.d06dd0ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddressMap\":\"KRS7x\",\"AddressMap__Checkbox\":\"_16ijZ\",\"AddressMap__Box\":\"_1N5i0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divInfoWindow\":\"_21z2S\",\"divf\":\"_30HoS\",\"curr\":\"_10p9C\"};","// import {\n//   ColorUnGroupdSelectedPoint,\n//   ColorUnGroupdUnSelectedPoint,\n// } from '../const';\n\nconst pointWidth = 22;\nconst pointHeight = 30;\n\n// const pointInWidth = 60;\n// const pointInHeight = pointInWidth;\n\ndeclare const BMap: any;\n\nexport class CustomPoint extends BMap.Overlay {\n  public data: any;\n  constructor({ data, onClick, onShowInfo, onHideInfo }) {\n    super();\n    this.data = data;\n    this.point = new BMap.Point(data.longitude, data.latitude);\n    this.onClick = onClick;\n    this.onShowInfo = onShowInfo;\n    this.onHideInfo = onHideInfo;\n  }\n\n  initialize(map) {\n    this.map = map;\n    const div = document.createElement('div');\n    div.style.position = 'absolute';\n    div.style.width = '22px';\n    div.style.height = '30px';\n    div.style.cursor = 'pointer';\n    div.style.zIndex = '1';\n    if (this.data.depotType === '仓库') {\n      div.innerHTML =\n        \"<img src='http://image.tf56.com/dfs/group1/M00/6C/D8/CiFBClvWvK2AavVpAAAFmv6mZVg018.png' width='22' height='30'>\";\n    } else if (this.data.depotType === '网点/门店') {\n      div.innerHTML =\n        \"<img src='http://image.tf56.com/dfs/group1/M00/6C/D5/CiFBCVvWvKyACWhzAAAFg7bh-nQ272.png' width='22' height='30'>\";\n    }\n\n    div.onclick = e => {\n      if (this.onClick) {\n        this.onClick(this);\n      }\n    };\n\n    div.onmouseenter = () => {\n      if (this.onShowInfo) {\n        this.onShowInfo(this.data);\n      }\n    };\n\n    div.onmouseout = () => {\n      if (this.onHideInfo) {\n        this.onHideInfo(this.data);\n      }\n    };\n\n    this.map.getPanes().labelPane.appendChild(div);\n    this.div = div;\n\n    return div;\n  }\n\n  draw() {\n    const pixel = this.map.pointToOverlayPixel(this.point);\n    this.div.style.left = pixel.x - pointWidth / 2 + 'px';\n    this.div.style.top = pixel.y - pointHeight / 2 + 'px';\n  }\n\n  destroy() {\n    // this.map.getPanes().labelPane.remove(this.div);\n    this.div.onclick = null;\n    this.data = null;\n    this.point = null;\n    this.onClick = null;\n    this.onShowInfo = null;\n    this.onHideInfo = null;\n\n    this.map = null;\n  }\n}\n","import styles from './infoWindow.module.less';\n\ndeclare const BMap: any;\n\nexport class InfoWindow extends BMap.Overlay {\n  constructor() {\n    super();\n    this.width = 280;\n    this.height = 114;\n  }\n\n  initialize(map) {\n    this.map = map;\n\n    this.div = document.createElement('div');\n    this.div.style.width = `${this.width}px`;\n    this.div.style.height = `${this.height}px`;\n    this.div.className = styles.divInfoWindow;\n\n    this.divCurrow = document.createElement('div');\n    this.divCurrow.className = styles.curr;\n\n    this.div.appendChild(this.divCurrow);\n\n    this.content = document.createElement('div');\n    this.content.className = styles.divf;\n    this.div.appendChild(this.content);\n\n    this.map.getPanes().labelPane.appendChild(this.div);\n\n    return this.div;\n  }\n\n  draw() {\n    const pixel = this.map.pointToOverlayPixel(this.point);\n    // this.div.style.left = pixel.x - this.width / 2 + 'px';\n    // this.div.style.top = pixel.y - this.height - 40 + 'px';\n    // const height = this.div.offsetHeight;\n\n    // 框位置\n    let fx = pixel.x - this.width / 2;\n    let fy = pixel.y - this.height - 31;\n\n    // 箭头位置\n    let cx = this.width / 2 - 11;\n    let cy = this.height - 5;\n\n    // 下面的做法，没有找到官方的做法，只能自己写\n    const posDiv = this.div.parentElement.parentElement.parentElement;\n    if (posDiv) {\n      const container = this.map.getContainer();\n      const mWidth = container.offsetWidth;\n      const mHeight = container.offsetHeight;\n\n      const mx = fx + posDiv.offsetLeft;\n      const mt = fy + posDiv.offsetTop;\n\n      if (mx < 0) {\n        // 如果左边距超出\n        fx = pixel.x - this.width / 2 - mx;\n        cx = cx + mx + 0;\n      } else if (mx + this.width > mWidth) {\n        // 如果右边距超出\n        fx = pixel.x - this.width / 2 - (this.width + mx - mWidth) - 0;\n        cx = cx + (this.width + mx - mWidth) + 3 + 1;\n      }\n      if (mt - 90 < 0) {\n        fy = pixel.y + 26;\n        cy = -12 + 2;\n        this.divCurrow.style.transform = 'rotate(45deg)';\n      } else {\n        cy -= 7;\n        this.divCurrow.style.transform = 'rotate(-45deg)';\n      }\n    }\n\n    this.div.style.left = fx + 'px';\n    this.div.style.top = fy + 'px';\n\n    this.divCurrow.style.left = cx + 'px';\n    this.divCurrow.style.top = cy + 'px';\n  }\n\n  setSize() {\n    this.div.style.width = this.width + 'px';\n    this.div.style.height = this.height + 'px';\n  }\n\n  show() {\n    super.show();\n    this.draw();\n    // this.setSize();\n  }\n\n  setPosition(point) {\n    this.point = point;\n  }\n\n  showValue(value) {\n    if (value === null || value === undefined || value === '') {\n      return '';\n    }\n    return value;\n  }\n\n  setData(data) {\n    this.content.innerHTML =\n      '<table><tr><th>名称：</th><td>' +\n      this.showValue(data.depotName) +\n      '</td></tr><tr><th>类型：</th><td>' +\n      this.showValue(data.depotType) +\n      '</td></tr><tr><th>联系人：</th><td>' +\n      this.showValue(data.createOperatorName) +\n      '</td></tr><tr><th>联系电话：</th><td>' +\n      this.showValue(data.contactWay) +\n      '</td></tr></table>';\n  }\n}\n","import Checkbox from 'antd/es/checkbox';\nimport * as React from 'react';\nimport shallowequal from 'shallowequal';\n\nimport { CustomPoint } from '../../ctrls/customPoint';\nimport { InfoWindow } from '../../ctrls/infoWindow';\n\nimport Spin from 'antd/es/spin';\nimport { loading } from 'components/ImageZoom/components/Image/index.module.less';\nimport { setTimeout } from 'timers';\nimport styles from './index.module.less';\n\ndeclare const BMap: any;\ndeclare const BMapLib: any;\nexport interface IAddressMapProps {\n  data: any;\n}\ninterface IState {\n  data: any;\n  depot: any;\n  store: any;\n  checkedList: any;\n  loading: boolean;\n}\nexport class AddressMap extends React.PureComponent<IAddressMapProps> {\n  state: IState;\n  private divMap: HTMLDivElement;\n  private map: any;\n  private infoWindow: InfoWindow;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      data: [] || props.data,\n      checkedList: ['仓库', '网点/门店'],\n      depot: [], // 仓库\n      store: [], // 网点\n      loading: false,\n    };\n  }\n  componentDidMount() {\n    this.initMap();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (!shallowequal(this.state.data, nextProps.data)) {\n      this.setState(\n        {\n          data: nextProps.data || {},\n        },\n        () => {\n          this.initMarkes();\n        },\n      );\n    }\n  }\n  removeMapElement = (element: Element) => {\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  };\n  onShowInfo = data => {\n    if (!this.infoWindow) {\n      this.infoWindow = new InfoWindow();\n      this.infoWindow.setPosition(\n        new BMap.Point(data.longitude, data.latitude),\n      );\n      this.map.addOverlay(this.infoWindow);\n    } else {\n      this.infoWindow.setPosition(\n        new BMap.Point(data.longitude, data.latitude),\n      );\n    }\n    this.infoWindow.setData(data);\n    this.infoWindow.show();\n  };\n  onHideInfo = () => {\n    this.infoWindow.hide();\n  };\n  initMarkes() {\n    this.setState({ loading: true });\n\n    if (this.state.data.length === 0) {\n      return;\n    }\n    const depot = []; // 仓库\n    const store = []; // 网点\n    const mks = [];\n    this.state.data.forEach((d, i) => {\n      const cp = new CustomPoint({\n        data: d,\n        onClick: this.onShowInfo,\n        onShowInfo: this.onShowInfo,\n        onHideInfo: this.onHideInfo,\n      });\n      if (d.depotType === '仓库') {\n        depot.push(cp);\n      } else if (d.depotType === '网点/门店') {\n        store.push(cp);\n      }\n      this.map.addOverlay(cp);\n\n      const pt = new BMap.Point(d.longitude, d.latitude);\n      mks.push(pt);\n      if (i === this.state.data.length - 1) {\n        this.setState({ loading: false });\n      }\n    });\n    this.setState({\n      depot,\n      store,\n    });\n    setTimeout(() => {\n      this.map.setViewport(mks);\n    }, 100);\n  }\n  initMap() {\n    // 创建Map实例\n    this.map = new BMap.Map(this.divMap, {\n      minZoom: 1,\n      maxZoom: 19,\n      enableMapClick: false,\n    });\n\n    this.map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放\n    // 去掉地图左下解的LOGO与文字\n    this.map.addEventListener('tilesloaded', () => {\n      this.removeMapElement(document.querySelector('.anchorBL'));\n      this.removeMapElement(document.querySelector('.BMap_cpyCtrl'));\n    });\n\n    this.map.centerAndZoom('杭州', 12);\n  }\n  handleChange = checkedList => {\n    this.setState({\n      checkedList,\n    });\n    this.state.depot.map(d => {\n      d.hide();\n    });\n    this.state.store.map(d => {\n      d.hide();\n    });\n    checkedList.map(d => {\n      if (d === '仓库') {\n        this.state.depot.map(item => {\n          item.show();\n        });\n      }\n      if (d === '网点/门店') {\n        this.state.store.map(item => {\n          item.show();\n        });\n      }\n    });\n  };\n  render() {\n    return (\n      <div className={styles.AddressMap}>\n        <div className={styles.AddressMap__Checkbox}>\n          <Checkbox.Group\n            value={this.state.checkedList}\n            onChange={this.handleChange}\n          >\n            <Checkbox value=\"仓库\">仓库</Checkbox>\n            <Checkbox value=\"网点/门店\">网点</Checkbox>\n          </Checkbox.Group>\n        </div>\n        <Spin spinning={this.state.loading}>\n          <div\n            className={styles.AddressMap__Box}\n            ref={node => (this.divMap = node)}\n          />\n        </Spin>\n      </div>\n    );\n  }\n}\n","/**\n * AddressManage Component\n * @author hefan\n * @date 2018/9/17 上午9:10:13\n */\nimport { Map } from 'immutable';\nimport * as React from 'react';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectError,\n  makeSelectLoading,\n  makeSelectMapData,\n} from './selectors';\n\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport Divider from 'antd/es/divider';\nimport Form from 'antd/es/form';\nimport FormItem from 'antd/es/form/FormItem';\nimport Input from 'antd/es/input';\nimport Popconfirm from 'antd/es/popconfirm';\nimport Select from 'antd/es/select';\nimport Spin from 'antd/es/spin';\nimport Tabs from 'antd/es/tabs';\nimport MyTable from 'components/MyTable';\nimport { OptionButtons } from 'components/OptionButtons';\n\nconst Option = Select.Option;\n\n// import styles from './index.module.less';\nimport CustomerSelect from 'components/CustomerSelect';\nimport { curr } from 'modules/module.ios/components/map/ctrls/customInfoWindow.module.less';\nimport { AddressMap } from './components/map';\nimport styles from './index.module.less';\n\nconst depotType = {\n  site: '网点/门店',\n  store: '仓库',\n};\n\nexport interface IAddressManageProps {\n  children: React.ReactChildren;\n  getAsyncData: (params: {}) => any;\n  delAddressData: (params: {}) => any;\n  addAddressData: () => any;\n  editAddressData: (id?: string) => any;\n  setDefault: (id?: string) => any;\n  getMapData: (params: {}) => any;\n  data: any;\n  mapData: any;\n  dataCount: number;\n  loading: boolean;\n}\n\nclass AddressManage extends React.PureComponent<IAddressManageProps> {\n  state = {\n    skipCount: 0,\n    pageSize: 15,\n    current: 1,\n    activeKey: '1',\n  };\n  public componentDidMount() {\n    this.fetchDataFun();\n  }\n  renderMap = () => {\n    const { mapData } = this.props;\n\n    const data = mapData\n      ? mapData\n          .map(d => ({\n            key: d.get('utmsDepotId'),\n            depotName: d.get('depotName'),\n            depotType: d.get('depotType'),\n            province: d.get('province'),\n            city: d.get('city'),\n            region: d.get('region'),\n            address: d.get('address'),\n            contact: d.get('contact'),\n            contactWay: d.get('contactWay'),\n            longitude: d.get('longitude'),\n            latitude: d.get('latitude'),\n            isDefault: d.get('isDefault'),\n          }))\n          .toArray()\n      : [];\n    return <AddressMap data={data} />;\n  };\n  public render() {\n    const operations = (\n      <div className=\"btn\">\n        <Button type=\"primary\" onClick={this.props.addAddressData}>\n          新增地址\n        </Button>\n      </div>\n    );\n    return (\n      <Spin spinning={this.props.loading}>\n        {/* <div className={styles.AddressManageTitle}>\n          <div className={styles.AddressManageTitleTxt}>地址管理</div>\n          <div className=\"btn\">\n            <Button type=\"primary\" onClick={this.props.addAddressData}>\n              新增地址\n            </Button>\n          </div>\n        </div> */}\n        <Card>\n          <Tabs\n            tabBarExtraContent={operations}\n            onChange={this.handleTabsChange}\n          >\n            <Tabs.TabPane\n              tab={'客户地址列表'}\n              key=\"1\"\n              style={{ height: '100%' }}\n            >\n              {this.getFields()}\n              {this.getTable()}\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={'地图模式'} key=\"2\" style={{ height: '100%' }}>\n              {this.renderMap()}\n            </Tabs.TabPane>\n          </Tabs>\n        </Card>\n      </Spin>\n    );\n  }\n  handleTabsChange = activeKey => {\n    const { getMapData } = this.props;\n    if (activeKey === '2') {\n      if (this.state.activeKey === '1') {\n        getMapData({\n          coordinateType: 'BD09',\n          pageSize: 1000000,\n          skipCount: 0,\n        });\n      }\n      this.setState({\n        activeKey,\n      });\n    }\n  };\n  private getTable() {\n    const columns = [\n      {\n        key: 'mark',\n        render: record =>\n          record.isDefault === 1 ? (\n            <div style={{ whiteSpace: 'nowrap' }}>默认仓库</div>\n          ) : null,\n      },\n      {\n        title: '客户名称',\n        dataIndex: 'customerName',\n        key: 'customerName',\n      },\n      {\n        title: '地址名称',\n        dataIndex: 'depotName',\n        key: 'depotName',\n      },\n      {\n        title: '类型',\n        dataIndex: 'depotType',\n        key: 'depotType',\n        // render: text => depotType[text],\n      },\n      {\n        title: '省市区',\n        key: 'province',\n        render: record => `${record.province}${record.city}${record.region}`,\n      },\n      {\n        title: '详细地址',\n        dataIndex: 'address',\n      },\n      {\n        title: '操作',\n        key: 'action',\n        width: 105,\n        render: (text, record) => (\n          <span>\n            <OptionButtons>\n              <a\n                href=\"javascript:;\"\n                onClick={() => this.props.editAddressData(record.utmsDepotId)}\n              >\n                编辑\n              </a>\n              {/* <Divider type=\"vertical\" /> */}\n              <Popconfirm\n                title=\"是否确认删除？\"\n                onConfirm={() => {\n                  this.delAddressHandle(record.utmsDepotId);\n                }}\n              >\n                <a href=\"javascript:;\">删除</a>\n              </Popconfirm>\n              {record.isDefault === 1 ? null : (\n                // <Divider type=\"vertical\" />\n                <a\n                  href=\"javascript:;\"\n                  onClick={() => {\n                    this.setDefaultHanlde(record.utmsDepotId);\n                  }}\n                >\n                  设为默认仓库\n                </a>\n              )}\n            </OptionButtons>\n          </span>\n        ),\n      },\n    ];\n    const { data, dataCount } = this.props;\n\n    const { current } = this.state;\n    const paginationConfig = {\n      current,\n      total: dataCount,\n      onChange: this.paginationChange,\n      onShowSizeChange: this.paginationChange,\n    };\n\n    const dataSource = data\n      ? data\n          .map(d => ({\n            key: d.get('utmsDepotId'),\n            utmsDepotId: d.get('utmsDepotId'),\n            customerName: d.get('customerName') || '--',\n            depotName: d.get('depotName'),\n            depotType: d.get('depotType'),\n            province: d.get('province'),\n            city: d.get('city'),\n            region: d.get('region'),\n            address: d.get('address'),\n            contact: d.get('contact'),\n            contactWay: d.get('contactWay'),\n            longitude: d.get('longitude'),\n            latitude: d.get('latitude'),\n            isDefault: d.get('isDefault'),\n          }))\n          .toArray()\n      : [];\n    return (\n      <MyTable\n        columns={columns}\n        dataSource={dataSource}\n        pagination={paginationConfig}\n      />\n    );\n  }\n  private getFields() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form layout=\"inline\" style={{ marginBottom: '20px' }}>\n        <FormItem label=\"客户名称\">\n          {getFieldDecorator('customerCode', {\n            initialValue: '',\n          })(\n            <CustomerSelect\n              style={{ minWidth: 100 }}\n              showDefaultValue={false}\n            />,\n          )}\n        </FormItem>\n        <FormItem label=\"类型\">\n          {getFieldDecorator('depotType', {\n            initialValue: '',\n          })(\n            <Select style={{ width: '90px' }}>\n              <Option value=\"\">全部</Option>\n              <Option value=\"store\">仓库</Option>\n              <Option value=\"site\">网点/门店</Option>\n            </Select>,\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('keyword')(<Input placeholder=\"地址名称\" />)}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            onClick={() => {\n              this.onSearchHandle();\n            }}\n          >\n            查询\n          </Button>\n        </FormItem>\n\n        <FormItem>\n          <Button onClick={this.handleReset}>重置</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n\n  private fetchDataFun(params?: {}) {\n    const formData = this.props.form.getFieldsValue();\n    const { pageSize } = this.state;\n\n    this.props.getAsyncData({\n      pageSize,\n      skipCount: 0,\n      ...formData,\n      ...params,\n    });\n  }\n\n  private onSearchHandle = () => {\n    this.setState({\n      skipCount: 0,\n      current: 1,\n    });\n\n    this.fetchDataFun();\n  };\n\n  private handleReset = () => {\n    this.props.form.resetFields();\n\n    this.onSearchHandle();\n  };\n\n  /**\n   * 页码变化\n   */\n  private paginationChange = params => {\n    const { skipCount, pageSize, current } = params;\n    this.setState({\n      skipCount,\n      pageSize,\n      current,\n    });\n    this.fetchDataFun({\n      skipCount,\n      pageSize,\n    });\n  };\n\n  /**\n   * 设置默认仓库\n   */\n  private setDefaultHanlde = utmsDepotId => {\n    const { pageSize, skipCount } = this.state;\n    const formData = this.props.form.getFieldsValue();\n\n    this.props.setDefault({\n      utmsDepotId,\n      skipCount,\n      pageSize,\n      ...formData,\n    });\n  };\n\n  /**\n   * 删除\n   */\n  private delAddressHandle = utmsDepotId => {\n    const { pageSize, skipCount } = this.state;\n    const formData = this.props.form.getFieldsValue();\n\n    this.props.delAddressData({\n      utmsDepotId,\n      skipCount,\n      pageSize,\n      ...formData,\n    });\n  };\n}\n\nconst AddressManageForm = Form.create()(AddressManage);\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId, Map());\n\n    return {\n      mapStateToProps: createStructuredSelector({\n        data: makeSelectData(currentState),\n        dataCount: makeSelectDataCount(currentState),\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n        mapData: makeSelectMapData(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getAsyncData: params => dispatch(actions.getAsyncData(params)),\n        delAddressData: params => dispatch(actions.delAddressData(params)),\n        addAddressData: () => dispatch(actions.addAddressData()),\n        editAddressData: id => dispatch(actions.editAddressData(id)),\n        setDefault: id => dispatch(actions.setDefault(id)),\n        getMapData: params => dispatch(actions.getMapData(params)),\n      }),\n    };\n  })(AddressManageForm);\n};\n","/**\n * AddressManage selectors\n * @author hefan\n * @date 2018/9/17 上午9:10:13\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('dataCount'),\n  );\n\nexport const makeSelectMapData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('mapData'),\n  );\n"],"sourceRoot":""}