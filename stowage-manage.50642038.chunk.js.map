{"version":3,"sources":["webpack:///./src/modules/module.stowage.manage/index.tsx","webpack:///./src/modules/module.stowage.manage/selectors.ts","webpack:///./src/modules/module.stowage.manage/index.module.less"],"names":["RangePicker","date_picker","Option","es_select","columns","title","dataIndex","render","text","react","Link","to","concat","module_stowage_manage_StowageManage","state","selectedRowKeys","skipCount","pageSize","current","paginationChange","params","_this","setState","onSelectChange","fetchDataFun","onAllCheckChanged","checked","data","props","toJS","map","d","status","push","utmsPartGroupId","putSHipGoodsHandle","_this$state","values","form","getFieldsValue","createDate","options","_objectWithoutProperties","createDateStart","Object","dateTimeHelper","undefined","createDateEnd","putShipGoods","_objectSpread","partGroupIds","delGroupHandle","_this$state2","formData","delGroup","searchHandle","formValues","reSetHandle","resetFields","this","shipOk","delOk","_this2","_this$props$form","getFieldDecorator","getFieldValue","es_form","layout","FormItem","label","input","placeholder","initialValue","style","width","value","es_button","onClick","htmlType","type","_this$props","dataCount","loading","_this$state3","dataSource","key","get","name","customerName","gmtCreate","orderCount","weight","volume","toArray","rowSelection","onChange","getCheckboxProps","record","disabled","paginationConfig","total","onShowSizeChange","marginTop","spin","spinning","MyTable","pagination","PageBottom","leftChild","allowSelect","length","rightChild","buttons","popconfirm","okText","cancelText","onConfirm","className","index_module_default","a","StowageManageTitle","StowageManageTitleTxt","Download","url","careteDateEnd","card","getFields","getTableList","filter","getList","StowageManageWrap","create","_ref","routeId","actions","selectState","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectData","selectors_makeSelectDataCount","error","selectors_makeSelectError","selectors_makeSelectLoading","selectors_makeSelectShipState","selectors_makeSelectDelState","withConnect","es","dispatch","getAsyncData","toDetail","param","redux","module","exports"],"mappings":"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","file":"stowage-manage.50642038.chunk.js","sourcesContent":["/**\n * StowageManage Component\n * @author hefan\n * @date 2018/9/11 上午9:05:16\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { toYYYYMMDDE, toYYYYMMDDS } from 'utils/dateTimeHelper';\n\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectDelState,\n  makeSelectError,\n  makeSelectLoading,\n  makeSelectShipState,\n} from './selectors';\n\nimport styles from './index.module.less';\n\nimport Button from 'antd/es/button';\nimport Card from 'antd/es/card';\nimport DatePicker from 'antd/es/date-picker';\nimport Form from 'antd/es/form';\nimport FormItem from 'antd/es/form/FormItem';\nimport Input from 'antd/es/input';\nimport Popconfirm from 'antd/es/popconfirm';\nimport Select from 'antd/es/select';\nimport Spin from 'antd/es/spin';\nimport Download from 'components/Download';\nimport MyTable from 'components/MyTable';\nimport {\n  PageBottom,\n  PageBottomButtons,\n  PageBottomCheck,\n} from 'components/PageBottom';\nconst RangePicker = DatePicker.RangePicker;\nconst Option = Select.Option;\n\nconst columns = [\n  {\n    title: '配载单ID',\n    dataIndex: 'utmsPartGroupId',\n    render: text => (\n      <Link to={`/stowageManage/stowageDetail?partGroupId=${text}`}>\n        {text}\n      </Link>\n    ),\n  },\n  {\n    title: '配载单名称',\n    dataIndex: 'name',\n  },\n  {\n    title: '客户名称',\n    dataIndex: 'customerName',\n  },\n  {\n    title: '生成时间',\n    dataIndex: 'gmtCreate',\n  },\n  {\n    title: '收货点数',\n    dataIndex: 'orderCount',\n  },\n  {\n    title: ' 总重量(千克)',\n    dataIndex: 'weight',\n  },\n  {\n    title: '总体积(方)',\n    dataIndex: 'volume',\n  },\n  {\n    title: '状态',\n    dataIndex: 'status',\n  },\n];\n\nexport interface IStowageManageProps {\n  children: React.ReactChildren;\n  getList: (params: {}) => void;\n  dataCount: number;\n  putShipGoods: (params: {}) => void;\n  delGroup: (params: {}) => void;\n  toDetail: (param: number) => void;\n  shipOk: boolean;\n  delOk: boolean;\n}\n\nclass StowageManage extends React.PureComponent<IStowageManageProps> {\n  state = {\n    selectedRowKeys: [],\n    skipCount: 0,\n    pageSize: 15,\n    current: 1,\n  };\n  public componentDidMount() {\n    this.fetchDataFun();\n  }\n  public UNSAFE_componentWillReceiveProps() {\n    // 重置选择项\n    if (this.props.shipOk || this.props.delOk) {\n      this.onSelectChange([]);\n    }\n  }\n  /**\n   * getFields()\n   */\n  public getFields() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n\n    return (\n      <Form layout=\"inline\">\n        <FormItem label=\"订单分组名称\">\n          {getFieldDecorator('name')(\n            <Input placeholder=\"请输入订单分组名称\" />,\n          )}\n        </FormItem>\n\n        <FormItem label=\"状态\">\n          {getFieldDecorator('status', {\n            initialValue: '',\n          })(\n            <Select style={{ width: '90px' }}>\n              <Option value=\"\">全部</Option>\n              <Option value={0}>待发货</Option>\n              <Option value={1}>已发货</Option>\n            </Select>,\n          )}\n        </FormItem>\n\n        <FormItem label=\"下单时间\">\n          {getFieldDecorator('createDate')(\n            <RangePicker style={{ width: 215 }} />,\n          )}\n        </FormItem>\n\n        <FormItem>\n          <Button\n            onClick={() => {\n              this.searchHandle();\n            }}\n            htmlType=\"submit\"\n            type=\"primary\"\n          >\n            查询\n          </Button>\n        </FormItem>\n\n        <FormItem>\n          <Button onClick={this.reSetHandle}>重置</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n  /**\n   * getTableList\n   */\n  public getTableList() {\n    const { data, dataCount, loading } = this.props;\n    const { selectedRowKeys, current } = this.state;\n\n    const dataSource = data\n      ? data\n          .map(d => ({\n            key: d.get('utmsPartGroupId'),\n            name: d.get('name'),\n            utmsPartGroupId: d.get('utmsPartGroupId'),\n            customerName: d.get('customerName'),\n            gmtCreate: d.get('gmtCreate'),\n            orderCount: d.get('orderCount'),\n            weight: d.get('weight'),\n            volume: d.get('volume'),\n            status: d.get('status'),\n          }))\n          .toArray()\n      : [];\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      getCheckboxProps: record => ({\n        disabled: record.status === '已发货', // Column configuration not to be checked\n        status: record.status,\n      }),\n    };\n\n    const paginationConfig = {\n      current,\n      total: dataCount,\n      onChange: this.paginationChange,\n      onShowSizeChange: this.paginationChange,\n    };\n\n    return (\n      <div style={{ marginTop: '20px' }}>\n        <Spin spinning={loading}>\n          <MyTable\n            rowSelection={rowSelection}\n            columns={columns}\n            dataSource={dataSource}\n            pagination={paginationConfig}\n          />\n        </Spin>\n\n        <PageBottom\n          leftChild={\n            <PageBottomCheck\n              total={this.allowSelect()}\n              checked={selectedRowKeys.length}\n              onAllCheckChanged={this.onAllCheckChanged}\n            />\n          }\n          rightChild={\n            <PageBottomButtons\n              buttons={[\n                <Popconfirm\n                  title=\"是否确认？\"\n                  okText=\"确认\"\n                  cancelText=\"取消\"\n                  key=\"3\"\n                  onConfirm={this.delGroupHandle}\n                >\n                  <Button\n                    key={1}\n                    type=\"primary\"\n                    disabled={!selectedRowKeys.length || loading}\n                  >\n                    撤销配载\n                  </Button>\n                </Popconfirm>,\n                <Button\n                  key={2}\n                  type=\"primary\"\n                  disabled={!selectedRowKeys.length || loading}\n                  onClick={this.putSHipGoodsHandle}\n                >\n                  发货\n                </Button>,\n              ]}\n            />\n          }\n        />\n      </div>\n    );\n  }\n  public render() {\n    const { getFieldValue } = this.props.form;\n    return (\n      <div>\n        <div className={styles.StowageManageTitle}>\n          <div className={styles.StowageManageTitleTxt}>配载管理</div>\n          <div className=\"btn\">\n            <Download\n              url={'/ehuodiGateway/utmsTrade/utmsPartGroup/exportPartGroupList'}\n              params={{\n                name: getFieldValue('name'),\n                status: getFieldValue('status'),\n                createDateStart: getFieldValue('createDate')\n                  ? toYYYYMMDDS(getFieldValue('createDate')[0])\n                  : undefined,\n                careteDateEnd: getFieldValue('createDate')\n                  ? toYYYYMMDDE(getFieldValue('createDate')[1])\n                  : undefined,\n              }}\n            >\n              导出\n            </Download>\n          </div>\n        </div>\n\n        <Card>\n          {this.getFields()}\n          {this.getTableList()}\n        </Card>\n      </div>\n    );\n  }\n\n  /**\n   * 页码变化\n   */\n  private paginationChange = params => {\n    const { skipCount, pageSize, current } = params;\n    this.setState({\n      skipCount,\n      pageSize,\n      current,\n    });\n\n    this.onSelectChange([]);\n\n    this.fetchDataFun({\n      skipCount,\n      pageSize,\n    });\n  };\n\n  /**\n   * 可选项\n   */\n  private allowSelect(): number {\n    if (this.props.data) {\n      const data = this.props.data.toJS() || [];\n\n      const dataSource = data.filter(d => d.status === '待发货');\n\n      return dataSource.length;\n    }\n    return 0;\n  }\n\n  /**\n   * 设置选择项\n   */\n  private onSelectChange = (selectedRowKeys: []) => {\n    this.setState({ selectedRowKeys });\n  };\n\n  /**\n   * 全选\n   */\n  private onAllCheckChanged = checked => {\n    const data = this.props.data.toJS();\n\n    if (!checked) {\n      this.setState({ selectedRowKeys: [] });\n    } else {\n      const selectedRowKeys = [];\n      data.map(d => {\n        if (d.status === '待发货') {\n          selectedRowKeys.push(d.utmsPartGroupId);\n        }\n      });\n\n      this.setState({ selectedRowKeys });\n    }\n  };\n\n  /**\n   * 发货\n   */\n  private putSHipGoodsHandle = () => {\n    const { selectedRowKeys, pageSize, skipCount } = this.state;\n\n    const values = this.props.form.getFieldsValue();\n    const { createDate, ...options } = values;\n\n    const createDateStart = createDate ? toYYYYMMDDS(createDate[0]) : undefined;\n    const createDateEnd = createDate ? toYYYYMMDDE(createDate[1]) : undefined;\n\n    this.props.putShipGoods({\n      partGroupIds: selectedRowKeys,\n      createDateStart,\n      createDateEnd,\n      ...options,\n      pageSize,\n      skipCount,\n    });\n  };\n\n  /**\n   * 取消配载/撤销配置/删除分组\n   */\n  private delGroupHandle = () => {\n    const { selectedRowKeys, pageSize, skipCount } = this.state;\n\n    const formData = this.props.form.getFieldsValue();\n\n    const { createDate, ...options } = formData;\n\n    const createDateStart = createDate ? toYYYYMMDDS(createDate[0]) : undefined;\n    const createDateEnd = createDate ? toYYYYMMDDE(createDate[1]) : undefined;\n\n    this.props.delGroup({\n      partGroupIds: selectedRowKeys,\n      createDateStart,\n      createDateEnd,\n      ...options,\n      pageSize,\n      skipCount,\n    });\n  };\n\n  /**\n   * 查询\n   */\n  private searchHandle = () => {\n    this.onSelectChange([]);\n\n    this.setState({\n      formValues: {},\n      skipCount: 0,\n      current: 1,\n    });\n\n    this.fetchDataFun();\n  };\n\n  private fetchDataFun(params?: {}) {\n    const formData = this.props.form.getFieldsValue();\n    const { createDate, ...options } = formData;\n    const { pageSize } = this.state;\n\n    const createDateStart = createDate ? toYYYYMMDDS(createDate[0]) : undefined;\n    const createDateEnd = createDate ? toYYYYMMDDE(createDate[1]) : undefined;\n\n    this.props.getList({\n      ...options,\n      createDateStart,\n      createDateEnd,\n      pageSize,\n      skipCount: 0,\n      ...params,\n    });\n  }\n\n  /**\n   * 重置\n   */\n  private reSetHandle = () => {\n    const { form } = this.props;\n    form.resetFields();\n\n    this.searchHandle();\n  };\n}\n\nconst StowageManageWrap = Form.create()(StowageManage);\n\nexport default ({ routeId, actions }) => {\n  const mapDispatchToProps = dispatch => ({\n    getList: params => dispatch(actions.getAsyncData(params)),\n    putShipGoods: params => dispatch(actions.putShipGoods(params)),\n    delGroup: params => dispatch(actions.delGroup(params)),\n    toDetail: param => dispatch(actions.toDetail(param)),\n  });\n\n  const selectState = state => state.get(routeId);\n  const mapStateToProps = createStructuredSelector({\n    data: makeSelectData(selectState),\n    dataCount: makeSelectDataCount(selectState),\n    error: makeSelectError(selectState),\n    loading: makeSelectLoading(selectState),\n    shipOk: makeSelectShipState(selectState),\n    delOk: makeSelectDelState(selectState),\n  });\n\n  const withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  );\n\n  return compose(withConnect)(StowageManageWrap);\n};\n","/**\n * StowageManage selectors\n * @author hefan\n * @date 2018/9/11 上午9:05:16\n */\nimport { createSelector } from 'reselect';\n\nexport const makeSelectError = selectState =>\n  createSelector(selectState, state => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, state => state.get('loading'));\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, state => state.get('data'));\n\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, state => state.get('dataCount'));\n\nexport const makeSelectShipState = selectState =>\n  createSelector(selectState, state => state.get('shipOk'));\n\nexport const makeSelectDelState = selectState =>\n  createSelector(selectState, state => state.get('delOk'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StowageManageTitle\":\"_18sqR\",\"StowageManageTitleTxt\":\"_1HLYl\"};"],"sourceRoot":""}