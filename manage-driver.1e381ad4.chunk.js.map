{"version":3,"sources":["webpack:///./src/modules/module.manage.driver/index.module.less","webpack:///./src/modules/module.manage.driver/form.tsx","webpack:///./src/modules/module.manage.driver/index.tsx","webpack:///./src/modules/module.manage.driver/selectors.ts"],"names":["module","exports","ManageDriver","buttonRight","form","ManageDriver__RightAction","ManageDriver__InputNumber","FormItem","es_form","Item","Option","input","Search","es_select","form_FormModule","modal","confirm","info","state","btnVisible","value","undefined","vehicleData","selectVehicle","Number","getVehicleData","_callee","data","isHas","regeneratorRuntime","wrap","_context","prev","next","Object","service","sent","_this","props","vehicleDataState","map","item","utmsVehicleId","push","setState","t0","stop","this","seva","_callee2","_context2","title","getFieldsValue","utmsUsersDriversId","then","result","handleSubmit","btn","react_default","a","createElement","href","className","onClick","parseInt","_ref3","_asyncToGenerator","mark","_callee3","_context3","setFieldsValue","_x2","apply","arguments","message","error","react","nextProps","visible","_this2","_this$props","onCancel","onCreate","confirmLoading","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","centered","maskClosable","onOk","layout","_extends","label","rules","required","pattern","commonRegExp","disabled","maxLength","onKeyDown","e","keyCode","input_number","min","max","index_module_default","showSearch","optionFilterProp","key","plateNumber","vehicleLong","vehicleType","module_manage_driver_form","create","module_manage_driver_Option","module_manage_driver_FormItem","module_manage_driver_ManageDriver","module_manage_driver_classCallCheck","module_manage_driver_possibleConstructorReturn","module_manage_driver_getPrototypeOf","call","addDriver","ModalTitle","handleOk","formRef","validateFields","_ref","module_manage_driver_asyncToGenerator","err","values","abrupt","resetFields","assign","_x","handleCancel","editDriver","phoneNumber","driverName","driverLicenseType","drivingAge","age","deleteConfirm","_ref2","_x3","details","getDetailsFn","detailsVisible","detailsCancel","detailData","id","Fn","_x4","_x5","searchParams","searchInfo","getAsyncList","skipCount","pageSize","selectChange","ops","current","handleReset","saveFormRef","_this$props$form","row","type","col","initialValue","style","width","onChange","bind","placeholder","getFieldValue","es_button","marginLeft","marginRight","_this3","dataCount","list","loading","tableProps","rowKey","columns","dataIndex","render","text","record","GLOBAL","emptyRecord","fixed","divider","popconfirm","placement","onConfirm","okText","cancelText","scroll","x","dataSource","toJS","pagination","total","pageData","index","onShowSizeChange","MyTable","card","icon","theme","renderFilterForm","renderTable","wrappedComponentRef","vehicleDetails","__webpack_exports__","_ref4","routeId","connectModel","actions","selectState","currentState","get","mapStateToProps","libfrom_dll_reference_dll","selectors_makeSelectLoading","selectors_makeSelectData","selectors_makeSelectDataCount","mapDispatchToProps","dispatch","options"],"mappings":"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","file":"manage-driver.1e381ad4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ManageDriver\":\"_22w5x\",\"buttonRight\":\"vfi-g\",\"form\":\"_3phex\",\"ManageDriver__RightAction\":\"_1MA-P\",\"ManageDriver__InputNumber\":\"_2xTs7\"};","import {\n  Button,\n  Col,\n  Form,\n  Input,\n  InputNumber,\n  message,\n  Modal,\n  Row,\n  Select,\n} from 'antd';\n\nimport React, { PureComponent } from 'react';\nimport { MOBILE_PHONE } from 'utils/commonRegExp.ts';\nimport styles from './index.module.less';\nimport { bindingVehicle, getVehicle, setDeleteVehicle } from './service';\n\nconst FormItem = Form.Item;\nconst Search = Input.Search;\nconst Option = Select.Option;\nconst { confirm, info } = Modal;\n\nclass FormModule extends PureComponent {\n  state = {\n    btnVisible: true,\n    value: undefined,\n    vehicleData: [],\n    selectVehicle: Number,\n  };\n\n  public componentDidMount() {\n    this.getVehicleData();\n  }\n  public getVehicleData = async () => {\n    try {\n      const data = await getVehicle();\n      const vehicleData = data.data || [];\n      if (this.props.vehicleDataState) {\n        let isHas = false;\n        vehicleData.map(item => {\n          if (\n            item.utmsVehicleId === this.props.vehicleDataState.utmsVehicleId\n          ) {\n            isHas = true;\n          }\n        });\n        if (!isHas) {\n          vehicleData.push(this.props.vehicleDataState);\n        }\n      }\n      this.setState({ vehicleData });\n    } catch (err) {\n      //\n    }\n  };\n  public componentWillReceiveProps(nextProps) {\n    if (nextProps.visible !== this.props.visible) {\n      this.getVehicleData();\n    }\n  }\n\n  seva = async value => {\n    if (this.props.title === '添加司机') {\n      if (this.props.form.getFieldsValue().utmsVehicleId) {\n        this.setState({\n          btnVisible: true,\n          utmsVehicleId: this.props.form.getFieldsValue().utmsVehicleId,\n        });\n      } else {\n        this.setState({ btnVisible: true });\n      }\n    } else {\n      await bindingVehicle({\n        utmsUsersDriversId: this.props.utmsUsersDriversId,\n        utmsVehicleId: this.props.form.getFieldsValue().utmsVehicleId,\n      }).then(data => {\n        if (data.result === 'success') {\n          this.props.handleSubmit();\n          this.setState({ btnVisible: true });\n        }\n      });\n    }\n  };\n\n  btn = () => {\n    if (!this.state.btnVisible) {\n      return (\n        <span>\n          <a\n            href=\"javascript:;\"\n            className=\"ml10\"\n            onClick={() => {\n              if (!parseInt(this.props.form.getFieldsValue().utmsVehicleId, 10)) {\n                message.error('请选择绑定车辆');\n                return;\n              }\n              this.seva();\n            }}\n          >\n            保存\n          </a>\n          <a\n            href=\"javascript:;\"\n            className=\"ml10\"\n            onClick={value => {\n              this.setState({ btnVisible: true });\n              if (this.props.vehicleDataState.utmsVehicleId) {\n                this.props.form.setFieldsValue({\n                  utmsVehicleId: this.props.vehicleDataState.utmsVehicleId,\n                });\n              } else {\n                this.props.form.setFieldsValue({\n                  utmsVehicleId: Number,\n                });\n              }\n            }}\n          >\n            取消\n          </a>\n        </span>\n      );\n    } else {\n      return (\n        <span>\n          <a\n            href=\"javascript:;\"\n            className=\"ml10\"\n            onClick={value => this.setState({ btnVisible: false })}\n          >\n            修改\n          </a>\n          {parseInt(this.props.form.getFieldsValue().utmsVehicleId) ? (\n            <a\n              href=\"javascript:;\"\n              className=\"ml10\"\n              onClick={async value => {\n                await setDeleteVehicle({\n                  utmsUsersDriversId: this.props.utmsUsersDriversId,\n                  utmsVehicleId: this.props.form.getFieldsValue().utmsVehicleId,\n                }).then(data => {\n                  if (data.result === 'success') {\n                    this.props.form.setFieldsValue({\n                      utmsVehicleId: Number,\n                    });\n                    this.getVehicleData();\n                    this.props.handleSubmit();\n                  }\n                });\n              }}\n            >\n              删除\n            </a>\n          ) : (\n            ''\n          )}\n        </span>\n      );\n    }\n  };\n\n  render() {\n    const {\n      visible,\n      onCancel,\n      onCreate,\n      form,\n      title,\n      confirmLoading,\n    } = this.props;\n    const { getFieldDecorator } = form;\n    const formItemLayout = {\n      labelCol: {\n        span: 6,\n      },\n      wrapperCol: {\n        span: 15,\n      },\n    };\n    return (\n      <Modal\n        centered={true}\n        maskClosable={false}\n        title={title}\n        visible={visible}\n        onOk={onCreate}\n        confirmLoading={confirmLoading}\n        onCancel={() => {\n          {\n            /*const change = this.props.form.isFieldsTouched();\n          if (change) {\n            confirm({\n              title: '有未保存的信息',\n              content: <p>如放弃，填写的信息将丢失</p>,\n              okText: '继续填写',\n              cancelText: '放弃',\n              onCancel: () => {*/\n          }\n          this.setState({ btnVisible: true });\n          onCancel();\n          {\n            /*},\n            });\n          } else {\n            this.setState({ btnVisible: true });\n            onCancel();\n          }*/\n          }\n        }}\n      >\n        <Form layout=\"horizontal\">\n          <FormItem {...formItemLayout} label=\"手机号码\">\n            {getFieldDecorator('phoneNumber', {\n              rules: [\n                { required: true, message: '请输入手机号码!' },\n                {\n                  pattern: MOBILE_PHONE,\n                  message: '请输入正确的联系方式',\n                },\n              ],\n            })(\n              <Input\n                disabled={title === '编辑司机'}\n                maxLength={20}\n                onKeyDown={e => {\n                  if (e.keyCode === 13) {\n                    onCreate();\n                  }\n                }}\n              />,\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"姓名\">\n            {getFieldDecorator('driverName')(\n              <Input\n                maxLength={20}\n                onKeyDown={e => {\n                  if (e.keyCode === 13) {\n                    onCreate();\n                  }\n                }}\n              />,\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"驾照类型\">\n            {getFieldDecorator('driverLicenseType')(\n              <Select>\n                <Option value=\"A1\">A1</Option>\n                <Option value=\"A2\">A2</Option>\n                <Option value=\"A3\">A3</Option>\n                <Option value=\"A4\">A4</Option>\n                <Option value=\"B1\">B1</Option>\n                <Option value=\"B2\">B2</Option>\n                <Option value=\"B3\">B3</Option>\n                <Option value=\"B4\">B4</Option>\n                <Option value=\"C1\">C1</Option>\n                <Option value=\"C2\">C2</Option>\n                <Option value=\"C3\">C3</Option>\n                <Option value=\"C4\">C4</Option>\n              </Select>,\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"驾龄\">\n            {getFieldDecorator('drivingAge')(\n              <InputNumber\n                min={0}\n                max={100}\n                className={styles.ManageDriver__InputNumber}\n                onKeyDown={e => {\n                  if (e.keyCode === 13) {\n                    onCreate();\n                  }\n                }}\n              />,\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"年龄\">\n            {getFieldDecorator('age')(\n              <InputNumber\n                min={0}\n                max={100}\n                className={styles.ManageDriver__InputNumber}\n                onKeyDown={e => {\n                  if (e.keyCode === 13) {\n                    onCreate();\n                  }\n                }}\n              />,\n            )}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"绑定车辆\">\n            {getFieldDecorator('utmsVehicleId')(\n              <Select\n                showSearch\n                optionFilterProp=\"children\"\n                disabled={title === '编辑司机' ? this.state.btnVisible : false}\n              >\n                {this.state.vehicleData.map(item => {\n                  if (item && item.utmsVehicleId) {\n                    return (\n                      <Option\n                        key={item.utmsVehicleId}\n                        value={item.utmsVehicleId}\n                      >\n                        {item.plateNumber} - {item.vehicleLong / 1000}米\n                        {item.vehicleType}\n                      </Option>\n                    );\n                  }\n                })}\n              </Select>,\n            )}\n            {title === '编辑司机' ? this.btn() : ''}\n          </FormItem>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nconst ModalForm = Form.create()(FormModule);\n\nexport default ModalForm;\n","/**\n * ManageDriver Component\n * @author chengle\n * @date 2018-9-13 15:44:27\n */\nimport {\n  Button,\n  Card,\n  Cascader,\n  Col,\n  Divider,\n  Form,\n  Icon,\n  Input,\n  InputNumber,\n  Modal,\n  Pagination,\n  Popconfirm,\n  Row,\n  Select,\n} from 'antd';\nimport { WrappedFormUtils } from 'antd/es/form/Form';\nimport Table from 'components/MyTable';\nimport { List, Map } from 'immutable';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  makeSelectData,\n  makeSelectDataCount,\n  makeSelectError,\n  makeSelectLoading,\n} from './selectors';\n\nimport DetailsModule from '../module.manage.vehicle/vehicleDetails';\nimport ModalForm from './form';\n\nimport styles from './index.module.less';\n\nimport { addDriver, editDriver, getVehicleDetails, setDelete } from './service';\n\nimport GLOBAL from 'utils/GLOBAL.ts';\n\nconst Search = Input.Search;\nconst Option = Select.Option;\nconst confirm = Modal.confirm;\nconst FormItem = Form.Item;\n\nexport interface IManageDriverProps {\n  list: List<Map<string, any>>;\n  dataCount: number;\n  loading: boolean;\n  children: React.ReactChildren;\n  form: WrappedFormUtils;\n  getAsyncList: (options?: object) => any;\n  setBindVehicle: (options?: object) => any;\n  getVehicle: (options?: object) => any;\n  setDeleteVehicle: (options?: object) => any;\n}\n\n@Form.create({})\nclass ManageDriver extends React.PureComponent<IManageDriverProps> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 1,\n      skipCount: 0,\n      pageSize: 15,\n      ModalTitle: '添加司机',\n      visible: false,\n      detailsVisible: false,\n      confirmLoading: false,\n      utmsUsersDriversId: Number,\n      detailData: {},\n      vehicleDataState: {},\n    };\n  }\n\n  public componentDidMount() {\n    this.handleSubmit();\n    // document.addEventListener('keydown', this.handleEnterKey);\n  }\n\n  // 添加司机\n  public addDriver = () => {\n    this.setState({\n      ModalTitle: '添加司机',\n      confirmLoading: false,\n      visible: true,\n      vehicleDataState: {},\n    });\n  };\n  public handleOk = () => {\n    const form = this.formRef.props.form;\n    form.validateFields(async (err, values) => {\n      if (err) {\n        return;\n      }\n      if (!values.utmsVehicleId) {\n        delete values.utmsVehicleId;\n      }\n      this.setState({\n        confirmLoading: true,\n      });\n\n      if (this.state.ModalTitle === '添加司机') {\n        await addDriver(values).then(\n          data => {\n            this.setState({ visible: false, confirmLoading: false }, () => {\n              form.resetFields();\n              this.handleSubmit();\n            });\n          },\n          err => {\n            this.setState({\n              confirmLoading: false,\n            });\n          },\n        );\n      } else {\n        await editDriver(\n          Object.assign(values, {\n            utmsUsersDriversId: this.state.utmsUsersDriversId,\n          }),\n        ).then(\n          data => {\n            this.setState({ visible: false, confirmLoading: false }, () => {\n              form.resetFields();\n              this.handleSubmit();\n            });\n          },\n          err => {\n            this.setState({\n              confirmLoading: false,\n            });\n          },\n        );\n      }\n    });\n  };\n  public handleCancel = () => {\n    const form = this.formRef.props.form;\n    form.resetFields();\n    this.setState({ visible: false, utmsUsersDriversId: Number });\n  };\n\n  // 编辑司机\n  public editDriver = value => {\n    // console.log(this.formRef.props.form);\n    const form = this.formRef.props.form;\n    // console.log(value);\n    // console.log(form.getFieldsValue());\n    if (value.plateNumber) {\n      this.setState(\n        {\n          ModalTitle: '编辑司机',\n          confirmLoading: false,\n          visible: true,\n          utmsUsersDriversId: value.utmsUsersDriversId,\n          vehicleDataState: {\n            plateNumber: value.plateNumber,\n            utmsVehicleId: value.utmsVehicleId,\n            vehicleLong: value.vehicleLong,\n            vehicleType: value.vehicleType,\n          },\n        },\n        form.setFieldsValue({\n          phoneNumber: value.phoneNumber,\n          driverName: value.driverName,\n          driverLicenseType: value.driverLicenseType,\n          drivingAge: value.drivingAge,\n          age: value.age,\n          plateNumber: value.plateNumber,\n          utmsVehicleId: value.utmsVehicleId,\n        }),\n      );\n    } else {\n      this.setState(\n        {\n          ModalTitle: '编辑司机',\n          confirmLoading: false,\n          visible: true,\n          utmsUsersDriversId: value.utmsUsersDriversId,\n          vehicleDataState: {},\n        },\n        form.setFieldsValue({\n          phoneNumber: value.phoneNumber,\n          driverName: value.driverName,\n          driverLicenseType: value.driverLicenseType,\n          drivingAge: value.drivingAge,\n          age: value.age,\n          plateNumber: value.plateNumber,\n          utmsVehicleId: value.utmsVehicleId,\n        }),\n      );\n    }\n  };\n\n  // 删除司机\n  public deleteConfirm = async value => {\n    await setDelete({ utmsUsersDriversId: value.utmsUsersDriversId }).then(\n      data => {\n        if (data.result === 'success') {\n          this.handleSubmit();\n        }\n      },\n    );\n  };\n\n  // 车辆详情\n  public details = value => {\n    this.getDetailsFn(value.utmsVehicleId, () => {\n      this.setState({\n        detailsVisible: true,\n      });\n    });\n  };\n  public detailsCancel = () => {\n    this.setState({\n      detailsVisible: false,\n      detailData: {},\n    });\n  };\n  public getDetailsFn = async (id, Fn) => {\n    await getVehicleDetails({ utmsVehicleId: id }).then(data => {\n      // console.log(data, 222);\n      this.setState(\n        {\n          detailData: data.data, // Object.assign(data.data, this.state.detailData),\n        },\n        Fn,\n      );\n    });\n  };\n\n  public handleSubmit = e => {\n    if (this.props.searchParams.phoneNumber) {\n      this.props.form.setFieldsValue({\n        searchInfo: this.props.searchParams.phoneNumber,\n      });\n    }\n    this.props.getAsyncList(\n      Object.assign(\n        {\n          skipCount: this.state.skipCount,\n          pageSize: this.state.pageSize,\n        },\n        this.props.form.getFieldsValue(),\n      ),\n    );\n  };\n\n  public selectChange = (key, value) => {\n    const ops = {};\n    ops[key] = value;\n    this.props.form.setFieldsValue(ops);\n    this.setState({ current: 1, skipCount: 0 }, this.handleSubmit);\n  };\n\n  public handleReset = () => {\n    this.props.form.resetFields();\n    this.setState({ current: 1, skipCount: 0 }, this.handleSubmit);\n  };\n\n  public renderFilterForm() {\n    const { getFieldDecorator, setFieldsValue } = this.props.form;\n    return (\n      <Form className={styles.form} layout=\"inline\">\n        <Row type=\"flex\">\n          <Col span={24}>\n            <FormItem label=\"车辆绑定\">\n              {getFieldDecorator('bindingStatus', {\n                initialValue: '',\n              })(\n                <Select\n                  style={{ width: 120 }}\n                  onChange={this.selectChange.bind(this, 'bindingStatus')}\n                >\n                  <Option value=\"\">全部</Option>\n                  <Option value=\"0\">未绑定</Option>\n                  <Option value=\"1\">已绑定</Option>\n                </Select>,\n              )}\n            </FormItem>\n            <FormItem label=\"添加方式\">\n              {getFieldDecorator('addMethod', {\n                initialValue: '',\n              })(\n                <Select\n                  style={{ width: 120 }}\n                  onChange={this.selectChange.bind(this, 'addMethod')}\n                >\n                  <Option value=\"\">全部</Option>\n                  <Option value=\"1\">后台添加</Option>\n                  <Option value=\"2\">快捷派单</Option>\n                </Select>,\n              )}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('searchInfo')(\n                <Input\n                  style={{ width: 220 }}\n                  placeholder=\"司机姓名/手机号/绑定车辆\"\n                  onKeyDown={e => {\n                    if (e.keyCode === 13) {\n                      this.selectChange(\n                        'searchInfo',\n                        this.props.form.getFieldValue('searchInfo'),\n                      );\n                    }\n                  }}\n                />,\n              )}\n              <Button\n                type=\"primary\"\n                style={{ marginLeft: 16, marginRight: 12 }}\n                onClick={this.selectChange.bind('searchInfo')}\n              >\n                查询\n              </Button>\n              <Button onClick={this.handleReset}>重置</Button>\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n\n  public renderTable() {\n    const { dataCount, list, loading } = this.props;\n    const tableProps = {\n      rowKey: 'utmsUsersDriversId',\n      columns: [\n        {\n          title: '司机姓名',\n          dataIndex: 'driverName',\n          width: 120,\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '手机号码',\n          dataIndex: 'phoneNumber',\n          width: 130,\n        },\n        {\n          title: '车牌号',\n          dataIndex: 'plateNumber',\n          width: 120,\n          render: (text, record) =>\n            record.plateNumber ? (\n              <a href=\"javascript:;\" onClick={this.details.bind(this, record)}>\n                {record.plateNumber}\n              </a>\n            ) : (\n              GLOBAL.emptyRecord\n            ),\n        },\n        {\n          title: '车型车长',\n          key: 'vehicleType',\n          width: 120,\n          render: record => (\n            <span>\n              {record.vehicleLong\n                ? record.vehicleLong / 1000 + '米' + record.vehicleType\n                : GLOBAL.emptyRecord}\n            </span>\n          ),\n        },\n        {\n          title: '驾照类型',\n          dataIndex: 'driverLicenseType',\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '驾龄',\n          dataIndex: 'drivingAge',\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '年龄',\n          dataIndex: 'age',\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '添加方式',\n          dataIndex: 'addMethod',\n          render: text => <span>{text === 1 ? '后台添加' : '快捷派单'}</span>,\n        },\n        {\n          title: '添加时间',\n          dataIndex: 'createDate',\n          width: 160,\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '最后登录时间',\n          dataIndex: 'lastLoginDate',\n          width: 160,\n          render: (text, record) => text || GLOBAL.emptyRecord,\n        },\n        {\n          title: '操作',\n          fixed: 'right',\n          width: 130,\n          render: (text, record) => (\n            <span>\n              <a\n                href=\"javascript:;\"\n                onClick={this.editDriver.bind(this, record)}\n              >\n                编辑\n              </a>\n              <Divider type=\"vertical\" />\n              <Popconfirm\n                placement=\"bottom\"\n                title={'是否删除该司机'}\n                onConfirm={this.deleteConfirm.bind(this, record)}\n                okText=\"是\"\n                cancelText=\"否\"\n              >\n                <a href=\"javascript:;\">删除</a>\n              </Popconfirm>\n            </span>\n          ),\n        },\n      ],\n      scroll: { x: 1300 },\n      dataSource: list.toJS(),\n      loading,\n      pagination: {\n        current: this.state.current,\n        total: dataCount,\n        pageSize: this.state.pageSize,\n        onChange: (pageData, index) => {\n          this.setState(\n            {\n              pageSize: pageData.pageSize,\n              skipCount: pageData.skipCount,\n              current: pageData.current,\n            },\n            this.handleSubmit,\n          );\n        },\n        onShowSizeChange: pageData => {\n          this.setState(\n            {\n              pageSize: pageData.pageSize,\n              skipCount: 0,\n              current: 1,\n            },\n            this.handleSubmit,\n          );\n        },\n      },\n    };\n    return <Table {...tableProps} />;\n  }\n\n  public saveFormRef = formRef => {\n    this.formRef = formRef;\n  };\n\n  public render() {\n    const { data } = this.props;\n    return (\n      <Card title=\"司机管理\" className={styles.ManageDriver}>\n        <Button\n          type=\"primary\"\n          className={styles.buttonRight}\n          onClick={this.addDriver}\n        >\n          <Icon type=\"usergroup-add\" theme=\"outlined\" />\n          添加司机\n        </Button>\n        {this.renderFilterForm()}\n        <div>{this.renderTable()}</div>\n        <ModalForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleOk}\n          title={this.state.ModalTitle}\n          confirmLoading={this.state.confirmLoading}\n          utmsUsersDriversId={this.state.utmsUsersDriversId}\n          vehicleDataState={this.state.vehicleDataState}\n          handleSubmit={this.handleSubmit}\n        />\n\n        <DetailsModule\n          visible={this.state.detailsVisible}\n          detailData={this.state.detailData}\n          onCancel={this.detailsCancel}\n          onCreate={this.detailsCancel}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default ({ routeId, connectModel }) => {\n  return connectModel(actions => {\n    const currentState = state => state.get(routeId);\n    return {\n      mapStateToProps: createStructuredSelector({\n        error: makeSelectError(currentState),\n        loading: makeSelectLoading(currentState),\n        list: makeSelectData(currentState),\n        dataCount: makeSelectDataCount(currentState),\n      }),\n      mapDispatchToProps: dispatch => ({\n        getAsyncList: options => dispatch(actions.getAsyncList(options)),\n      }),\n    };\n  })(ManageDriver);\n};\n","/**\n * ManageDriver selectors\n * @author chengle\n * @date 2018-9-13 15:44:27\n */\nimport { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\n// 列表\nexport const makeSelectError = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\nexport const makeSelectLoading = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('loading'),\n  );\n\nexport const makeSelectData = selectState =>\n  createSelector(selectState, (state: Map<string, any>) => state.get('data'));\n\nexport const makeSelectDataCount = selectState =>\n  createSelector(selectState, (state: Map<string, any>) =>\n    state.get('dataCount'),\n  );\n\n// 分页\n// export const makeSelectPageIndex = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('pageIndex'),\n//   );\n\n// 删除\n// export const makeDeleteDriver = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('utmsUsersDriversId'),\n//   );\n\n// export const makeDeleteDriverError = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\n// export const makeDeleteDriverLoading = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('loading'),\n//   );\n\n// 添加司机\n// export const makeAddDriver = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('utmsUsersDriversId'),\n//   );\n\n// export const makeAddDriverError = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\n// export const makeAddDriverLoading = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('loading'),\n//   );\n\n// 编辑司机\n// export const makeEditDriver = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('utmsUsersDriversId'),\n//   );\n\n// export const makeEditDriverError = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\n// export const makeEditDriverLoading = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('loading'),\n//   );\n\n// 绑定车辆\n// export const makeBindVehicle = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('utmsUsersDriversId'),\n//   );\n\n// export const makeBindVehicleError = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\n// export const makeBindVehicleLoading = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('loading'),\n//   );\n\n// 查询未绑定车辆\n// export const makeSelectVehicle = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('utmsUsersDriversId'),\n//   );\n\n// export const makeSelectVehicleError = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\n// export const makeSelectVehicleLoading = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('loading'),\n//   );\n\n// 删除绑定车辆\n// export const makeDeleteVehicle = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('utmsUsersDriversId'),\n//   );\n\n// export const makeDeleteVehicleError = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) => state.get('error'));\n\n// export const makeDeleteVehicleLoading = selectState =>\n//   createSelector(selectState, (state: Map<string, any>) =>\n//     state.get('loading'),\n//   );\n"],"sourceRoot":""}